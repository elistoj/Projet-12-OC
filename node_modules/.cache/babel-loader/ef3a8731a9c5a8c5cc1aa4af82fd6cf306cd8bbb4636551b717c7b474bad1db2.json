{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elist\\\\OneDrive\\\\Documents\\\\GitHub\\\\Projet-12-OC\\\\src\\\\components\\\\Profile\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = ({\n  userId\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [sessions, setSessions] = useState([]);\n  const [averageSessions, setAverageSessions] = useState([]);\n  const [performance, setPerformance] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const userDataResponse = await axios.get(`http://localhost:3000/user/${userId}`);\n        const userData = userDataResponse.data.data;\n        const activityResponse = await axios.get(`http://localhost:3000/user/${userId}/activity`);\n        const activityData = activityResponse.data.data;\n        const averageSessionsResponse = await axios.get(`http://localhost:3000/user/${userId}/average-sessions`);\n        const averageSessionsData = averageSessionsResponse.data.data;\n        const performanceResponse = await axios.get(`http://localhost:3000/user/${userId}/performance`);\n        const performanceData = performanceResponse.data.data;\n        setUser(userData.userInfos);\n        setSessions(activityData.sessions);\n        setAverageSessions(averageSessionsData.sessions);\n        setPerformance(performanceData.data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    };\n    fetchUserData();\n    return () => {\n      // Cleanup function if needed\n    };\n  }, [userId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Bonjour \", user.firstName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SessionChart, {\n      data: sessions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AverageSessionsChart, {\n      data: averageSessions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PerformanceChart, {\n      data: performance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"SQle5iAydZ3CFP0PFnfFbn3ooBs=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Profile","userId","_s","user","setUser","sessions","setSessions","averageSessions","setAverageSessions","performance","setPerformance","loading","setLoading","fetchUserData","userDataResponse","get","userData","data","activityResponse","activityData","averageSessionsResponse","averageSessionsData","performanceResponse","performanceData","userInfos","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","firstName","SessionChart","AverageSessionsChart","PerformanceChart","_c","$RefreshReg$"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/components/Profile/Profile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Profile = ({ userId }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [sessions, setSessions] = useState([]);\r\n  const [averageSessions, setAverageSessions] = useState([]);\r\n  const [performance, setPerformance] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const userDataResponse = await axios.get(`http://localhost:3000/user/${userId}`);\r\n        const userData = userDataResponse.data.data;\r\n\r\n        const activityResponse = await axios.get(`http://localhost:3000/user/${userId}/activity`);\r\n        const activityData = activityResponse.data.data;\r\n\r\n        const averageSessionsResponse = await axios.get(`http://localhost:3000/user/${userId}/average-sessions`);\r\n        const averageSessionsData = averageSessionsResponse.data.data;\r\n\r\n        const performanceResponse = await axios.get(`http://localhost:3000/user/${userId}/performance`);\r\n        const performanceData = performanceResponse.data.data;\r\n\r\n        setUser(userData.userInfos);\r\n        setSessions(activityData.sessions);\r\n        setAverageSessions(averageSessionsData.sessions);\r\n        setPerformance(performanceData.data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n\r\n    return () => {\r\n      // Cleanup function if needed\r\n    };\r\n  }, [userId]);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Bonjour {user.firstName}</h1>\r\n      {/* Render your components with fetched data */}\r\n      <SessionChart data={sessions} />\r\n      <AverageSessionsChart data={averageSessions} />\r\n      <PerformanceChart data={performance} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}