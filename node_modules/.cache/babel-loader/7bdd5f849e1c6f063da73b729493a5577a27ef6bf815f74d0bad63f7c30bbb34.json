{"ast":null,"code":"const BASE_URL = 'https://projet-12-oc.vercel.app';\nasync function fetchFromAPI(endpoint) {\n  const response = await fetch(`${BASE_URL}${endpoint}`);\n  if (!response.ok) {\n    const errorText = await response.text();\n    throw new Error(`Network response was not ok. Status: ${response.status}. Message: ${errorText}`);\n  }\n  return response.json();\n}\nexport async function fetchUserData(userId) {\n  return fetchFromAPI(`/users/${userId}`).then(mapUserData);\n}\nexport async function fetchUserActivity(userId) {\n  return fetchFromAPI(`/users/${userId}/activity`).then(mapUserActivity);\n}\nexport async function fetchUserAverageSessions(userId) {\n  return fetchFromAPI(`/users/${userId}/average-sessions`).then(mapUserAverageSessions);\n}\nexport async function fetchUserPerformance(userId) {\n  return fetchFromAPI(`/users/${userId}/performance`).then(mapUserPerformance);\n}\nfunction mapUserData(userData) {\n  return {\n    id: userData.id,\n    userInfos: {\n      firstName: userData.firstName,\n      lastName: userData.lastName\n    },\n    keyData: {\n      calorieCount: userData.calorieCount,\n      proteinCount: userData.proteinCount,\n      carbohydrateCount: userData.carbohydrateCount,\n      lipidCount: userData.lipidCount\n    },\n    score: userData.score\n  };\n}\nfunction mapUserActivity(userActivity) {\n  return {\n    userId: userActivity.userId,\n    sessions: userActivity.sessions.map(session => ({\n      day: session.day,\n      sessionLength: session.calories\n    }))\n  };\n}\nfunction mapUserAverageSessions(userAverageSessions) {\n  return {\n    userId: userAverageSessions.userId,\n    sessions: userAverageSessions.sessions.map(session => ({\n      day: session.day,\n      averageDuration: session.sessionLength\n    }))\n  };\n}\nfunction mapUserPerformance(userPerformance) {\n  return {\n    userId: userPerformance.userId,\n    data: userPerformance.data.map(item => ({\n      kind: item.kind,\n      value: item.value\n    }))\n  };\n}","map":{"version":3,"names":["BASE_URL","fetchFromAPI","endpoint","response","fetch","ok","errorText","text","Error","status","json","fetchUserData","userId","then","mapUserData","fetchUserActivity","mapUserActivity","fetchUserAverageSessions","mapUserAverageSessions","fetchUserPerformance","mapUserPerformance","userData","id","userInfos","firstName","lastName","keyData","calorieCount","proteinCount","carbohydrateCount","lipidCount","score","userActivity","sessions","map","session","day","sessionLength","calories","userAverageSessions","averageDuration","userPerformance","data","item","kind","value"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/service/api.js"],"sourcesContent":["const BASE_URL = 'https://projet-12-oc.vercel.app';\r\n\r\nasync function fetchFromAPI(endpoint) {\r\n  const response = await fetch(`${BASE_URL}${endpoint}`);\r\n  if (!response.ok) {\r\n    const errorText = await response.text();\r\n    throw new Error(`Network response was not ok. Status: ${response.status}. Message: ${errorText}`);\r\n  }\r\n  return response.json();\r\n}\r\n\r\nexport async function fetchUserData(userId) {\r\n  return fetchFromAPI(`/users/${userId}`).then(mapUserData);\r\n}\r\n\r\nexport async function fetchUserActivity(userId) {\r\n  return fetchFromAPI(`/users/${userId}/activity`).then(mapUserActivity);\r\n}\r\n\r\nexport async function fetchUserAverageSessions(userId) {\r\n  return fetchFromAPI(`/users/${userId}/average-sessions`).then(mapUserAverageSessions);\r\n}\r\n\r\nexport async function fetchUserPerformance(userId) {\r\n  return fetchFromAPI(`/users/${userId}/performance`).then(mapUserPerformance);\r\n}\r\n\r\nfunction mapUserData(userData) {\r\n  return {\r\n    id: userData.id,\r\n    userInfos: {\r\n      firstName: userData.firstName,\r\n      lastName: userData.lastName,\r\n    },\r\n    keyData: {\r\n      calorieCount: userData.calorieCount,\r\n      proteinCount: userData.proteinCount,\r\n      carbohydrateCount: userData.carbohydrateCount,\r\n      lipidCount: userData.lipidCount,\r\n    },\r\n    score: userData.score,\r\n  };\r\n}\r\n\r\nfunction mapUserActivity(userActivity) {\r\n  return {\r\n    userId: userActivity.userId,\r\n    sessions: userActivity.sessions.map(session => ({\r\n      day: session.day,\r\n      sessionLength: session.calories,\r\n    })),\r\n  };\r\n}\r\n\r\nfunction mapUserAverageSessions(userAverageSessions) {\r\n  return {\r\n    userId: userAverageSessions.userId,\r\n    sessions: userAverageSessions.sessions.map(session => ({\r\n      day: session.day,\r\n      averageDuration: session.sessionLength,\r\n    })),\r\n  };\r\n}\r\n\r\nfunction mapUserPerformance(userPerformance) {\r\n  return {\r\n    userId: userPerformance.userId,\r\n    data: userPerformance.data.map(item => ({\r\n      kind: item.kind,\r\n      value: item.value,\r\n    })),\r\n  };\r\n}\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,iCAAiC;AAElD,eAAeC,YAAYA,CAACC,QAAQ,EAAE;EACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,GAAGE,QAAQ,EAAE,CAAC;EACtD,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACvC,MAAM,IAAIC,KAAK,CAAC,wCAAwCL,QAAQ,CAACM,MAAM,cAAcH,SAAS,EAAE,CAAC;EACnG;EACA,OAAOH,QAAQ,CAACO,IAAI,CAAC,CAAC;AACxB;AAEA,OAAO,eAAeC,aAAaA,CAACC,MAAM,EAAE;EAC1C,OAAOX,YAAY,CAAC,UAAUW,MAAM,EAAE,CAAC,CAACC,IAAI,CAACC,WAAW,CAAC;AAC3D;AAEA,OAAO,eAAeC,iBAAiBA,CAACH,MAAM,EAAE;EAC9C,OAAOX,YAAY,CAAC,UAAUW,MAAM,WAAW,CAAC,CAACC,IAAI,CAACG,eAAe,CAAC;AACxE;AAEA,OAAO,eAAeC,wBAAwBA,CAACL,MAAM,EAAE;EACrD,OAAOX,YAAY,CAAC,UAAUW,MAAM,mBAAmB,CAAC,CAACC,IAAI,CAACK,sBAAsB,CAAC;AACvF;AAEA,OAAO,eAAeC,oBAAoBA,CAACP,MAAM,EAAE;EACjD,OAAOX,YAAY,CAAC,UAAUW,MAAM,cAAc,CAAC,CAACC,IAAI,CAACO,kBAAkB,CAAC;AAC9E;AAEA,SAASN,WAAWA,CAACO,QAAQ,EAAE;EAC7B,OAAO;IACLC,EAAE,EAAED,QAAQ,CAACC,EAAE;IACfC,SAAS,EAAE;MACTC,SAAS,EAAEH,QAAQ,CAACG,SAAS;MAC7BC,QAAQ,EAAEJ,QAAQ,CAACI;IACrB,CAAC;IACDC,OAAO,EAAE;MACPC,YAAY,EAAEN,QAAQ,CAACM,YAAY;MACnCC,YAAY,EAAEP,QAAQ,CAACO,YAAY;MACnCC,iBAAiB,EAAER,QAAQ,CAACQ,iBAAiB;MAC7CC,UAAU,EAAET,QAAQ,CAACS;IACvB,CAAC;IACDC,KAAK,EAAEV,QAAQ,CAACU;EAClB,CAAC;AACH;AAEA,SAASf,eAAeA,CAACgB,YAAY,EAAE;EACrC,OAAO;IACLpB,MAAM,EAAEoB,YAAY,CAACpB,MAAM;IAC3BqB,QAAQ,EAAED,YAAY,CAACC,QAAQ,CAACC,GAAG,CAACC,OAAO,KAAK;MAC9CC,GAAG,EAAED,OAAO,CAACC,GAAG;MAChBC,aAAa,EAAEF,OAAO,CAACG;IACzB,CAAC,CAAC;EACJ,CAAC;AACH;AAEA,SAASpB,sBAAsBA,CAACqB,mBAAmB,EAAE;EACnD,OAAO;IACL3B,MAAM,EAAE2B,mBAAmB,CAAC3B,MAAM;IAClCqB,QAAQ,EAAEM,mBAAmB,CAACN,QAAQ,CAACC,GAAG,CAACC,OAAO,KAAK;MACrDC,GAAG,EAAED,OAAO,CAACC,GAAG;MAChBI,eAAe,EAAEL,OAAO,CAACE;IAC3B,CAAC,CAAC;EACJ,CAAC;AACH;AAEA,SAASjB,kBAAkBA,CAACqB,eAAe,EAAE;EAC3C,OAAO;IACL7B,MAAM,EAAE6B,eAAe,CAAC7B,MAAM;IAC9B8B,IAAI,EAAED,eAAe,CAACC,IAAI,CAACR,GAAG,CAACS,IAAI,KAAK;MACtCC,IAAI,EAAED,IAAI,CAACC,IAAI;MACfC,KAAK,EAAEF,IAAI,CAACE;IACd,CAAC,CAAC;EACJ,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}