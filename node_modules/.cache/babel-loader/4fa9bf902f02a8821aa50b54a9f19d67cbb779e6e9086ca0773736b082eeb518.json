{"ast":null,"code":"export const fetchUserData = async userId => {\n  try {\n    const response = await fetch(`http://localhost:3000/user/${userId}`);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    console.log('User Data:', data); // Debug\n    return data;\n  } catch (error) {\n    console.error('Error fetching user data:', error);\n    throw error; // Propagate the error for handling in Profile.js\n  }\n};\nexport const fetchUserActivity = async userId => {\n  try {\n    const response = await fetch(`http://localhost:3000/user/${userId}/activity`);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    console.log('User Activity:', data); // Debug\n    return data;\n  } catch (error) {\n    console.error('Error fetching user activity:', error);\n    throw error;\n  }\n};\nexport const fetchUserAverageSessions = async userId => {\n  try {\n    const response = await fetch(`http://localhost:3000/user/${userId}/average-sessions`);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    console.log('User Average Sessions:', data); // Debug\n    return data;\n  } catch (error) {\n    console.error('Error fetching user average sessions:', error);\n    throw error;\n  }\n};\nexport const fetchUserPerformance = async userId => {\n  try {\n    const response = await fetch(`http://localhost:3000/user/${userId}/performance`);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    console.log('User Performance:', data); // Debug\n    return data;\n  } catch (error) {\n    console.error('Error fetching user performance:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["fetchUserData","userId","response","fetch","ok","Error","data","json","console","log","error","fetchUserActivity","fetchUserAverageSessions","fetchUserPerformance"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/services/api.js"],"sourcesContent":["export const fetchUserData = async (userId) => {\r\n  try {\r\n    const response = await fetch(`http://localhost:3000/user/${userId}`);\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    const data = await response.json();\r\n    console.log('User Data:', data); // Debug\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching user data:', error);\r\n    throw error; // Propagate the error for handling in Profile.js\r\n  }\r\n};\r\n\r\nexport const fetchUserActivity = async (userId) => {\r\n  try {\r\n    const response = await fetch(`http://localhost:3000/user/${userId}/activity`);\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    const data = await response.json();\r\n    console.log('User Activity:', data); // Debug\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching user activity:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchUserAverageSessions = async (userId) => {\r\n  try {\r\n    const response = await fetch(`http://localhost:3000/user/${userId}/average-sessions`);\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    const data = await response.json();\r\n    console.log('User Average Sessions:', data); // Debug\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching user average sessions:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchUserPerformance = async (userId) => {\r\n  try {\r\n    const response = await fetch(`http://localhost:3000/user/${userId}/performance`);\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    const data = await response.json();\r\n    console.log('User Performance:', data); // Debug\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching user performance:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,MAAOC,MAAM,IAAK;EAC7C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8BF,MAAM,EAAE,CAAC;IACpE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEH,IAAI,CAAC,CAAC,CAAC;IACjC,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAG,MAAOV,MAAM,IAAK;EACjD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8BF,MAAM,WAAW,CAAC;IAC7E,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,IAAI,CAAC,CAAC,CAAC;IACrC,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,wBAAwB,GAAG,MAAOX,MAAM,IAAK;EACxD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8BF,MAAM,mBAAmB,CAAC;IACrF,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEH,IAAI,CAAC,CAAC,CAAC;IAC7C,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC7D,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMG,oBAAoB,GAAG,MAAOZ,MAAM,IAAK;EACpD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8BF,MAAM,cAAc,CAAC;IAChF,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,IAAI,CAAC,CAAC,CAAC;IACxC,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}