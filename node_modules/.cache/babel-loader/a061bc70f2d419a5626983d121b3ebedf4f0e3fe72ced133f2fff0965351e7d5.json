{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elist\\\\OneDrive\\\\Documents\\\\GitHub\\\\Projet-12-OC\\\\src\\\\components\\\\Profile\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchUserData, fetchUserAverageSessions, fetchUserPerformance } from '../../services/api';\nimport SessionChart from '../SessionChart/SessionChart';\nimport CaloriesChart from '../CaloriesChart/CaloriesChart';\nimport AverageSessionChart from '../AverageSessionsChart/AverageSessionsChart';\nimport PerformanceChart from '../PerformanceChart/PerformanceChart';\nimport KeyInfoCards from '../KeyInfoCards/KeyInfoCards';\nimport { formatSessionData, formatCaloriesData, formatAverageSessionData, formatPerformanceData } from '../../uttils/dataFormatter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [sessions, setSessions] = useState([]);\n  const [calories, setCalories] = useState([]);\n  const [averageSessions, setAverageSessions] = useState([]);\n  const [performance, setPerformance] = useState([]);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    async function getData() {\n      try {\n        const userData = await fetchUserData();\n        setUser(userData.userInfos.firstName);\n        setSessions(formatSessionData(userData.sessions));\n        setCalories(formatCaloriesData(userData.calories));\n        const userAverageSessions = await fetchUserAverageSessions();\n        setAverageSessions(formatAverageSessionData(userAverageSessions));\n        const userPerformance = await fetchUserPerformance();\n        setPerformance(formatPerformanceData(userPerformance));\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    }\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Bonjour \", user]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SessionChart, {\n      data: sessions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CaloriesChart, {\n      data: calories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AverageSessionChart, {\n      data: averageSessions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PerformanceChart, {\n      data: performance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KeyInfoCards, {\n      data: userData.keyData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"6eirU6l4n1Wn/3+Ncf0BGmkzy9M=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","fetchUserData","fetchUserAverageSessions","fetchUserPerformance","SessionChart","CaloriesChart","AverageSessionChart","PerformanceChart","KeyInfoCards","formatSessionData","formatCaloriesData","formatAverageSessionData","formatPerformanceData","jsxDEV","_jsxDEV","Profile","_s","sessions","setSessions","calories","setCalories","averageSessions","setAverageSessions","performance","setPerformance","user","setUser","getData","userData","userInfos","firstName","userAverageSessions","userPerformance","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","data","keyData","_c","$RefreshReg$"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/components/Profile/Profile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchUserData, fetchUserAverageSessions, fetchUserPerformance } from '../../services/api';\r\nimport SessionChart from '../SessionChart/SessionChart';\r\nimport CaloriesChart from '../CaloriesChart/CaloriesChart';\r\nimport AverageSessionChart from '../AverageSessionsChart/AverageSessionsChart';\r\nimport PerformanceChart from '../PerformanceChart/PerformanceChart';\r\nimport KeyInfoCards from '../KeyInfoCards/KeyInfoCards';\r\nimport { formatSessionData, formatCaloriesData, formatAverageSessionData, formatPerformanceData } from '../../uttils/dataFormatter';\r\n\r\nconst Profile = () => {\r\n  const [sessions, setSessions] = useState([]);\r\n  const [calories, setCalories] = useState([]);\r\n  const [averageSessions, setAverageSessions] = useState([]);\r\n  const [performance, setPerformance] = useState([]);\r\n  const [user, setUser] = useState(null);  \r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      try {\r\n        const userData = await fetchUserData();\r\n        setUser(userData.userInfos.firstName);  \r\n        setSessions(formatSessionData(userData.sessions));\r\n        setCalories(formatCaloriesData(userData.calories));\r\n\r\n        const userAverageSessions = await fetchUserAverageSessions();\r\n        setAverageSessions(formatAverageSessionData(userAverageSessions));\r\n\r\n        const userPerformance = await fetchUserPerformance();\r\n        setPerformance(formatPerformanceData(userPerformance));\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n      }\r\n    }\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Bonjour {user}</h1>\r\n      <SessionChart data={sessions} />\r\n      <CaloriesChart data={calories} />\r\n      <AverageSessionChart data={averageSessions} />\r\n      <PerformanceChart data={performance} />\r\n      <KeyInfoCards data={userData.keyData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}