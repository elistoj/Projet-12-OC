{"ast":null,"code":"export async function fetchUserData(userId) {\n  try {\n    const response = await fetch(`http://localhost:3000/user/12`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch user data');\n    }\n    const userData = await response.json();\n    return userData;\n  } catch (error) {\n    console.error('Error fetching user data:', error);\n    throw error;\n  }\n}\nexport async function fetchUserActivity(userId) {\n  try {\n    const response = await fetch(`http://localhost:3000/user/12/activity`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch user data');\n    }\n    const userData = await response.json();\n    return userData;\n  } catch (error) {\n    console.error('Error fetching user data:', error);\n    throw error;\n  }\n}\nexport async function fetchUserAverageSessions(userId) {\n  try {\n    const response = await fetch(`http://localhost:3000/user/12}/average-sessions`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch user data');\n    }\n    const userData = await response.json();\n    return userData;\n  } catch (error) {\n    console.error('Error fetching user data:', error);\n    throw error;\n  }\n}\nexport async function fetchUserPerformance(userId) {\n  try {\n    const response = await fetch(`http://localhost:3000/user/12/performance`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch user data');\n    }\n    const userData = await response.json();\n    return userData;\n  } catch (error) {\n    console.error('Error fetching user data:', error);\n    throw error;\n  }\n}\nfunction mapUserData(userData) {\n  return {\n    id: userData.id,\n    userInfos: {\n      firstName: userData.name ? userData.name.split(' ')[0] : '',\n      lastName: userData.name ? userData.name.split(' ')[1] : ''\n    },\n    keyData: {\n      calorieCount: userData.public_repos,\n      proteinCount: userData.followers,\n      carbohydrateCount: userData.following,\n      lipidCount: userData.bio\n    },\n    score: userData.score\n  };\n}\nfunction mapUserActivity(userActivity) {\n  return {\n    userId: userActivity.userId,\n    sessions: userActivity.sessions.map(session => ({\n      day: session.day,\n      sessionLength: session.calories\n    }))\n  };\n}\nfunction mapUserAverageSessions(userAverageSessions) {\n  return {\n    userId: userAverageSessions.userId,\n    sessions: userAverageSessions.sessions.map(session => ({\n      day: session.day,\n      averageDuration: session.sessionLength\n    }))\n  };\n}\nfunction mapUserPerformance(userPerformance) {\n  return {\n    userId: userPerformance.userId,\n    data: userPerformance.data.map(item => ({\n      kind: item.kind,\n      value: item.value\n    }))\n  };\n}","map":{"version":3,"names":["fetchUserData","userId","response","fetch","ok","Error","userData","json","error","console","fetchUserActivity","fetchUserAverageSessions","fetchUserPerformance","mapUserData","id","userInfos","firstName","name","split","lastName","keyData","calorieCount","public_repos","proteinCount","followers","carbohydrateCount","following","lipidCount","bio","score","mapUserActivity","userActivity","sessions","map","session","day","sessionLength","calories","mapUserAverageSessions","userAverageSessions","averageDuration","mapUserPerformance","userPerformance","data","item","kind","value"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/service/api.js"],"sourcesContent":["\r\nexport async function fetchUserData(userId) {\r\n  try {\r\n    const response = await fetch(`http://localhost:3000/user/12`);\r\n  \r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch user data');\r\n    }\r\n\r\n    const userData = await response.json();\r\n    return userData;\r\n  } catch (error) {\r\n    console.error('Error fetching user data:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n\r\nexport async function fetchUserActivity(userId) {\r\n  try {\r\n    const response = await fetch(`http://localhost:3000/user/12/activity`)\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch user data');\r\n      }\r\n  \r\n      const userData = await response.json();\r\n      return userData;\r\n    } catch (error) {\r\n      console.error('Error fetching user data:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n\r\nexport async function fetchUserAverageSessions(userId) {\r\n  try {\r\n    const response = await fetch(`http://localhost:3000/user/12}/average-sessions`)\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch user data');\r\n      }\r\n  \r\n      const userData = await response.json();\r\n      return userData;\r\n    } catch (error) {\r\n      console.error('Error fetching user data:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n\r\nexport async function fetchUserPerformance(userId) {\r\n  try {\r\n    const response = await fetch(`http://localhost:3000/user/12/performance`)\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch user data');\r\n    }\r\n\r\n    const userData = await response.json();\r\n    return userData;\r\n  } catch (error) {\r\n    console.error('Error fetching user data:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nfunction mapUserData(userData) {\r\n  return {\r\n    id: userData.id,\r\n    userInfos: {\r\n      firstName: userData.name ? userData.name.split(' ')[0] : '',\r\n      lastName: userData.name ? userData.name.split(' ')[1] : '',\r\n    },\r\n    keyData: {\r\n      calorieCount: userData.public_repos,\r\n      proteinCount: userData.followers,\r\n      carbohydrateCount: userData.following,\r\n      lipidCount: userData.bio,\r\n    },\r\n    score: userData.score,\r\n  };\r\n}\r\n\r\nfunction mapUserActivity(userActivity) {\r\n  return {\r\n    userId: userActivity.userId,\r\n    sessions: userActivity.sessions.map(session => ({\r\n      day: session.day,\r\n      sessionLength: session.calories,\r\n    })),\r\n  };\r\n}\r\n\r\nfunction mapUserAverageSessions(userAverageSessions) {\r\n  return {\r\n    userId: userAverageSessions.userId,\r\n    sessions: userAverageSessions.sessions.map(session => ({\r\n      day: session.day,\r\n      averageDuration: session.sessionLength,\r\n    })),\r\n  };\r\n}\r\n\r\nfunction mapUserPerformance(userPerformance) {\r\n  return {\r\n    userId: userPerformance.userId,\r\n    data: userPerformance.data.map(item => ({\r\n      kind: item.kind,\r\n      value: item.value,\r\n    })),\r\n  };\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}