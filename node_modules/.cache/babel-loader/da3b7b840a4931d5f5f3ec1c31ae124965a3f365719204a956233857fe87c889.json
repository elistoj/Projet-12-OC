{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elist\\\\OneDrive\\\\Documents\\\\GitHub\\\\Projet-12-OC\\\\src\\\\Page\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Profile.css';\nimport VerticalNav from '../components/VerticalNav/VerticalNav';\nimport ActivityChart from '../components/charts/ActivityChart/ActivityChart';\nimport AverageSessionsChart from '../components/charts/AverageSessionsChart/AverageSessionsChart';\nimport NutritionalInfo from '../components/charts/NutritionalInfo/NutritionalInfo';\nimport RadarChart from '../components/charts/PerformanceChart/RadarChart';\nimport ScoreChart from '../components/charts/ScoreChart/ScoreChart';\nimport { fetchUserData as apiFetchUserData, fetchUserActivity as apiFetchUserActivity, fetchUserAverageSessions as apiFetchUserAverageSessions, fetchUserPerformance as apiFetchUserPerformance } from '../service/api';\nimport mockData from '../mockData.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [userId, setUserId] = useState('18');\n  const [userData, setUserData] = useState(null);\n  const [userActivity, setUserActivity] = useState(null);\n  const [userAverageSessions, setUserAverageSessions] = useState(null);\n  const [userPerformance, setUserPerformance] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isMocked, setIsMocked] = useState(false); // New state for tracking mock usage\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setIsMocked(false);\n      try {\n        const fetchedUserData = await apiFetchUserData(userId);\n        setUserData(fetchedUserData);\n        const fetchedUserActivity = await apiFetchUserActivity(userId);\n        setUserActivity(fetchedUserActivity);\n        const fetchedUserAverageSessions = await apiFetchUserAverageSessions(userId);\n        setUserAverageSessions(fetchedUserAverageSessions);\n        const fetchedUserPerformance = await apiFetchUserPerformance(userId);\n        setUserPerformance(fetchedUserPerformance);\n        setLoading(false);\n      } catch (error) {\n        console.error('Using mocked data due to fetch error');\n        setUserData(mapUserData(mockData.USER_MAIN_DATA.find(user => user.id === parseInt(userId))));\n        setUserActivity(mapUserActivity(mockData.USER_ACTIVITY.find(activity => activity.userId === parseInt(userId))));\n        setUserAverageSessions(mapUserAverageSessions(mockData.USER_AVERAGE_SESSIONS.find(session => session.userId === parseInt(userId))));\n        setUserPerformance(mapUserPerformance(mockData.USER_PERFORMANCE.find(performance => performance.userId === parseInt(userId))));\n        setIsMocked(true); // Indicate that mock data is being used\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [userId]);\n  const handleUserChange = newUserId => {\n    setUserId(newUserId);\n  };\n  if (loading || !userData || !userActivity || !userAverageSessions || !userPerformance) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }, this);\n  }\n  if (!userActivity.sessions || !userAverageSessions.sessions || !userPerformance.data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Donn\\xE9es non disponibles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    firstName\n  } = userData.userInfos;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(VerticalNav, {\n      userId: userId,\n      onUserChange: handleUserChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-header-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Bonjour \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"user-name\",\n            children: firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"F\\xE9licitation ! Vous avez explos\\xE9 vos objectifs hier \\uD83D\\uDC4F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), isMocked && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mocked-data-warning\",\n        children: \"Using mocked data due to fetch error.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-activity\",\n        children: /*#__PURE__*/_jsxDEV(ActivityChart, {\n          data: userActivity.sessions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trois-sections\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: /*#__PURE__*/_jsxDEV(AverageSessionsChart, {\n            data: userAverageSessions.sessions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: /*#__PURE__*/_jsxDEV(RadarChart, {\n            data: userPerformance.data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: /*#__PURE__*/_jsxDEV(ScoreChart, {\n            data: {\n              score: userData.score || userData.TodayScore\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sections\",\n      children: /*#__PURE__*/_jsxDEV(NutritionalInfo, {\n        calorieCount: userData.keyData.calorieCount,\n        proteinCount: userData.keyData.proteinCount,\n        carbohydrateCount: userData.keyData.carbohydrateCount,\n        lipidCount: userData.keyData.lipidCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"a4ibOHzDu1/6lfLUxhTrHx++Uzs=\");\n_c = Profile;\nexport default Profile;\nfunction mapUserData(userData) {\n  var _userData$TodayScore, _userData$userInfos$f, _userData$userInfos, _userData$userInfos$l, _userData$userInfos2, _userData$keyData$cal, _userData$keyData, _userData$keyData$pro, _userData$keyData2, _userData$keyData$car, _userData$keyData3, _userData$keyData$lip, _userData$keyData4;\n  const scoreToUse = userData.score !== undefined ? userData.score : (_userData$TodayScore = userData.TodayScore) !== null && _userData$TodayScore !== void 0 ? _userData$TodayScore : 0;\n  return {\n    id: userData.id,\n    userInfos: {\n      firstName: (_userData$userInfos$f = (_userData$userInfos = userData.userInfos) === null || _userData$userInfos === void 0 ? void 0 : _userData$userInfos.firstName) !== null && _userData$userInfos$f !== void 0 ? _userData$userInfos$f : '',\n      lastName: (_userData$userInfos$l = (_userData$userInfos2 = userData.userInfos) === null || _userData$userInfos2 === void 0 ? void 0 : _userData$userInfos2.lastName) !== null && _userData$userInfos$l !== void 0 ? _userData$userInfos$l : ''\n    },\n    keyData: {\n      calorieCount: (_userData$keyData$cal = (_userData$keyData = userData.keyData) === null || _userData$keyData === void 0 ? void 0 : _userData$keyData.calorieCount) !== null && _userData$keyData$cal !== void 0 ? _userData$keyData$cal : 0,\n      proteinCount: (_userData$keyData$pro = (_userData$keyData2 = userData.keyData) === null || _userData$keyData2 === void 0 ? void 0 : _userData$keyData2.proteinCount) !== null && _userData$keyData$pro !== void 0 ? _userData$keyData$pro : 0,\n      carbohydrateCount: (_userData$keyData$car = (_userData$keyData3 = userData.keyData) === null || _userData$keyData3 === void 0 ? void 0 : _userData$keyData3.carbohydrateCount) !== null && _userData$keyData$car !== void 0 ? _userData$keyData$car : 0,\n      lipidCount: (_userData$keyData$lip = (_userData$keyData4 = userData.keyData) === null || _userData$keyData4 === void 0 ? void 0 : _userData$keyData4.lipidCount) !== null && _userData$keyData$lip !== void 0 ? _userData$keyData$lip : 0\n    },\n    score: scoreToUse\n  };\n}\nfunction mapUserActivity(userActivity) {\n  if (!userActivity || !Array.isArray(userActivity.sessions)) {\n    return {\n      userId: '',\n      sessions: []\n    };\n  }\n  return {\n    userId: userActivity.userId,\n    sessions: userActivity.sessions.map(session => {\n      var _session$day, _session$kilogram, _session$calories;\n      return {\n        day: (_session$day = session.day) !== null && _session$day !== void 0 ? _session$day : '',\n        kilogram: (_session$kilogram = session.kilogram) !== null && _session$kilogram !== void 0 ? _session$kilogram : 0,\n        calories: (_session$calories = session.calories) !== null && _session$calories !== void 0 ? _session$calories : 0\n      };\n    })\n  };\n}\nfunction mapUserAverageSessions(userAverageSessions) {\n  if (!userAverageSessions || !Array.isArray(userAverageSessions.sessions)) {\n    return {\n      userId: '',\n      sessions: []\n    };\n  }\n  return {\n    userId: userAverageSessions.userId,\n    sessions: userAverageSessions.sessions.map(session => {\n      var _session$day2, _session$sessionLengt;\n      return {\n        day: (_session$day2 = session.day) !== null && _session$day2 !== void 0 ? _session$day2 : '',\n        sessionLength: (_session$sessionLengt = session.sessionLength) !== null && _session$sessionLengt !== void 0 ? _session$sessionLengt : 0\n      };\n    })\n  };\n}\nfunction mapUserPerformance(userPerformance) {\n  if (!userPerformance || !Array.isArray(userPerformance.data)) {\n    return {\n      userId: '',\n      data: []\n    };\n  }\n  return {\n    userId: userPerformance.userId,\n    data: userPerformance.data.map(item => {\n      var _item$kind, _item$value;\n      return {\n        kind: (_item$kind = item.kind) !== null && _item$kind !== void 0 ? _item$kind : '',\n        value: (_item$value = item.value) !== null && _item$value !== void 0 ? _item$value : 0\n      };\n    })\n  };\n}\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","VerticalNav","ActivityChart","AverageSessionsChart","NutritionalInfo","RadarChart","ScoreChart","fetchUserData","apiFetchUserData","fetchUserActivity","apiFetchUserActivity","fetchUserAverageSessions","apiFetchUserAverageSessions","fetchUserPerformance","apiFetchUserPerformance","mockData","jsxDEV","_jsxDEV","Profile","_s","userId","setUserId","userData","setUserData","userActivity","setUserActivity","userAverageSessions","setUserAverageSessions","userPerformance","setUserPerformance","loading","setLoading","isMocked","setIsMocked","fetchData","fetchedUserData","fetchedUserActivity","fetchedUserAverageSessions","fetchedUserPerformance","error","console","mapUserData","USER_MAIN_DATA","find","user","id","parseInt","mapUserActivity","USER_ACTIVITY","activity","mapUserAverageSessions","USER_AVERAGE_SESSIONS","session","mapUserPerformance","USER_PERFORMANCE","performance","handleUserChange","newUserId","children","fileName","_jsxFileName","lineNumber","columnNumber","sessions","data","firstName","userInfos","className","onUserChange","score","TodayScore","calorieCount","keyData","proteinCount","carbohydrateCount","lipidCount","_c","_userData$TodayScore","_userData$userInfos$f","_userData$userInfos","_userData$userInfos$l","_userData$userInfos2","_userData$keyData$cal","_userData$keyData","_userData$keyData$pro","_userData$keyData2","_userData$keyData$car","_userData$keyData3","_userData$keyData$lip","_userData$keyData4","scoreToUse","undefined","lastName","Array","isArray","map","_session$day","_session$kilogram","_session$calories","day","kilogram","calories","_session$day2","_session$sessionLengt","sessionLength","item","_item$kind","_item$value","kind","value","$RefreshReg$"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/Page/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Profile.css';\r\nimport VerticalNav from '../components/VerticalNav/VerticalNav';\r\nimport ActivityChart from '../components/charts/ActivityChart/ActivityChart';\r\nimport AverageSessionsChart from '../components/charts/AverageSessionsChart/AverageSessionsChart';\r\nimport NutritionalInfo from '../components/charts/NutritionalInfo/NutritionalInfo';\r\nimport RadarChart from '../components/charts/PerformanceChart/RadarChart';\r\nimport ScoreChart from '../components/charts/ScoreChart/ScoreChart';\r\nimport {\r\n  fetchUserData as apiFetchUserData,\r\n  fetchUserActivity as apiFetchUserActivity,\r\n  fetchUserAverageSessions as apiFetchUserAverageSessions,\r\n  fetchUserPerformance as apiFetchUserPerformance\r\n} from '../service/api';  \r\nimport mockData from '../mockData.json';\r\n\r\nconst Profile = () => {\r\n  const [userId, setUserId] = useState('18');\r\n  const [userData, setUserData] = useState(null);\r\n  const [userActivity, setUserActivity] = useState(null);\r\n  const [userAverageSessions, setUserAverageSessions] = useState(null);\r\n  const [userPerformance, setUserPerformance] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isMocked, setIsMocked] = useState(false); // New state for tracking mock usage\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      setIsMocked(false);\r\n\r\n      try {\r\n        const fetchedUserData = await apiFetchUserData(userId);\r\n        setUserData(fetchedUserData);\r\n\r\n        const fetchedUserActivity = await apiFetchUserActivity(userId);\r\n        setUserActivity(fetchedUserActivity);\r\n\r\n        const fetchedUserAverageSessions = await apiFetchUserAverageSessions(userId);\r\n        setUserAverageSessions(fetchedUserAverageSessions);\r\n\r\n        const fetchedUserPerformance = await apiFetchUserPerformance(userId);\r\n        setUserPerformance(fetchedUserPerformance);\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Using mocked data due to fetch error');\r\n        \r\n        setUserData(mapUserData(mockData.USER_MAIN_DATA.find(user => user.id === parseInt(userId))));\r\n        setUserActivity(mapUserActivity(mockData.USER_ACTIVITY.find(activity => activity.userId === parseInt(userId))));\r\n        setUserAverageSessions(mapUserAverageSessions(mockData.USER_AVERAGE_SESSIONS.find(session => session.userId === parseInt(userId))));\r\n        setUserPerformance(mapUserPerformance(mockData.USER_PERFORMANCE.find(performance => performance.userId === parseInt(userId))));\r\n        \r\n        setIsMocked(true); // Indicate that mock data is being used\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [userId]);\r\n\r\n  const handleUserChange = (newUserId) => {\r\n    setUserId(newUserId);  \r\n  };\r\n\r\n  if (loading || !userData || !userActivity || !userAverageSessions || !userPerformance) {\r\n    return <div>Chargement...</div>;  \r\n  }\r\n\r\n  if (!userActivity.sessions || !userAverageSessions.sessions || !userPerformance.data) {\r\n    return <div>Données non disponibles</div>;  \r\n  }\r\n\r\n  const { firstName } = userData.userInfos;\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <VerticalNav userId={userId} onUserChange={handleUserChange} />  \r\n\r\n      <div className=\"profile-header-section\">\r\n        <div className=\"profile-header\">\r\n          <h1>Bonjour <span className=\"user-name\">{firstName}</span></h1>\r\n          <p>Félicitation ! Vous avez explosé vos objectifs hier 👏</p>\r\n        </div>\r\n        \r\n        {isMocked && <div className=\"mocked-data-warning\">Using mocked data due to fetch error.</div>}\r\n\r\n        <div className=\"section-activity\">\r\n          <ActivityChart data={userActivity.sessions} />\r\n        </div>\r\n\r\n        <div className=\"trois-sections\">\r\n          <div className=\"section\">\r\n            <AverageSessionsChart data={userAverageSessions.sessions} />\r\n          </div>\r\n\r\n          <div className=\"section\">\r\n            <RadarChart data={userPerformance.data} />\r\n          </div>\r\n\r\n          <div className=\"section\">\r\n            <ScoreChart data={{ score: userData.score || userData.TodayScore }} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"sections\">\r\n        <NutritionalInfo\r\n          calorieCount={userData.keyData.calorieCount}\r\n          proteinCount={userData.keyData.proteinCount}\r\n          carbohydrateCount={userData.keyData.carbohydrateCount}\r\n          lipidCount={userData.keyData.lipidCount}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n\r\nfunction mapUserData(userData) {\r\n  const scoreToUse = userData.score !== undefined ? userData.score : userData.TodayScore ?? 0;\r\n\r\n  return {\r\n    id: userData.id,\r\n    userInfos: {\r\n      firstName: userData.userInfos?.firstName ?? '',\r\n      lastName: userData.userInfos?.lastName ?? '',\r\n    },\r\n    keyData: {\r\n      calorieCount: userData.keyData?.calorieCount ?? 0,\r\n      proteinCount: userData.keyData?.proteinCount ?? 0,\r\n      carbohydrateCount: userData.keyData?.carbohydrateCount ?? 0,\r\n      lipidCount: userData.keyData?.lipidCount ?? 0,\r\n    },\r\n    score: scoreToUse,\r\n  };\r\n}\r\n\r\nfunction mapUserActivity(userActivity) {\r\n  if (!userActivity || !Array.isArray(userActivity.sessions)) {\r\n    return { userId: '', sessions: [] };\r\n  }\r\n\r\n  return {\r\n    userId: userActivity.userId,\r\n    sessions: userActivity.sessions.map(session => ({\r\n      day: session.day ?? '',\r\n      kilogram: session.kilogram ?? 0,\r\n      calories: session.calories ?? 0,\r\n    })),\r\n  };\r\n}\r\n\r\nfunction mapUserAverageSessions(userAverageSessions) {\r\n  if (!userAverageSessions || !Array.isArray(userAverageSessions.sessions)) {\r\n    return { userId: '', sessions: [] };\r\n  }\r\n\r\n  return {\r\n    userId: userAverageSessions.userId,\r\n    sessions: userAverageSessions.sessions.map(session => ({\r\n      day: session.day ?? '',\r\n      sessionLength: session.sessionLength ?? 0,\r\n    })),\r\n  };\r\n}\r\n\r\nfunction mapUserPerformance(userPerformance) {\r\n  if (!userPerformance || !Array.isArray(userPerformance.data)) {\r\n    return { userId: '', data: [] };\r\n  }\r\n\r\n  return {\r\n    userId: userPerformance.userId,\r\n    data: userPerformance.data.map(item => ({\r\n      kind: item.kind ?? '',\r\n      value: item.value ?? 0,\r\n    })),\r\n  };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}