{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elist\\\\OneDrive\\\\Documents\\\\GitHub\\\\Projet-12-OC\\\\src\\\\components\\\\charts\\\\ActivityChart\\\\ActivityChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, CartesianGrid, Tooltip, Legend, XAxis, YAxis } from 'recharts';\nimport './ActivityChart.css';\nimport activityData from './activityData.json'; // Importovanje JSON podataka\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActivityChart = () => {\n  _s();\n  const [data, setData] = useState([]); // State za čuvanje podataka\n\n  useEffect(() => {\n    // Simulacija učitavanja podataka iz JSON-a\n    // U pravom okruženju, ovo bi trebalo zamijeniti pravim API pozivom ili importovanjem\n    setData(activityData);\n  }, []);\n  const days = [1, 2, 3, 4, 5, 6, 7]; // Definiranje brojeva dana\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Activit\\xE9 quotidienne\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart\",\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        width: 800,\n        height: 400,\n        data: data // Koristimo učitane podatke iz JSON-a\n        ,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"day\",\n          ticks: days,\n          label: {\n            value: 'Jour',\n            position: 'insideBottom'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          label: {\n            value: 'kg',\n            angle: -90,\n            position: 'insideLeft'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          verticalAlign: \"top\",\n          height: 36\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"kilogram\",\n          stackId: \"a\",\n          fill: \"black\",\n          name: \"Poids (kg)\",\n          barSize: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"calories\",\n          stackId: \"b\",\n          fill: \"red\",\n          name: \"Calories br\\xFBl\\xE9es (kCal)\",\n          barSize: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(ActivityChart, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = ActivityChart;\nexport default ActivityChart;\nvar _c;\n$RefreshReg$(_c, \"ActivityChart\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","CartesianGrid","Tooltip","Legend","XAxis","YAxis","activityData","jsxDEV","_jsxDEV","ActivityChart","_s","data","setData","days","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","ticks","label","value","position","angle","verticalAlign","stackId","fill","name","barSize","_c","$RefreshReg$"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/components/charts/ActivityChart/ActivityChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BarChart, Bar, CartesianGrid, Tooltip, Legend, XAxis, YAxis } from 'recharts';\r\nimport './ActivityChart.css';\r\nimport activityData from './activityData.json'; // Importovanje JSON podataka\r\n\r\nconst ActivityChart = () => {\r\n  const [data, setData] = useState([]); // State za čuvanje podataka\r\n\r\n  useEffect(() => {\r\n    // Simulacija učitavanja podataka iz JSON-a\r\n    // U pravom okruženju, ovo bi trebalo zamijeniti pravim API pozivom ili importovanjem\r\n    setData(activityData);\r\n  }, []);\r\n\r\n  const days = [1, 2, 3, 4, 5, 6, 7]; // Definiranje brojeva dana\r\n\r\n  return (\r\n    <div className=\"chart-container\">\r\n      <div className=\"chart-header\">\r\n        <h2>Activité quotidienne</h2>\r\n      </div>\r\n      <div className=\"chart\">\r\n        <BarChart\r\n          width={800}\r\n          height={400}\r\n          data={data} // Koristimo učitane podatke iz JSON-a\r\n          margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"day\" ticks={days} label={{ value: 'Jour', position: 'insideBottom' }} />\r\n          <YAxis label={{ value: 'kg', angle: -90, position: 'insideLeft' }} />\r\n          <Tooltip />\r\n          <Legend verticalAlign=\"top\" height={36} />\r\n          <Bar dataKey=\"kilogram\" stackId=\"a\" fill=\"black\" name=\"Poids (kg)\" barSize={30} />\r\n          <Bar dataKey=\"calories\" stackId=\"b\" fill=\"red\" name=\"Calories brûlées (kCal)\" barSize={30} />\r\n        </BarChart>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActivityChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}