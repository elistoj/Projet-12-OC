{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elist\\\\OneDrive\\\\Documents\\\\GitHub\\\\Projet-12-OC\\\\src\\\\components\\\\Profile\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Profile.css';\nimport ActivityChart from '../charts/ActivityChart/ActivityChart';\nimport AverageSessionsChart from '../charts/AverageSessionsChart/AverageSessionsChart';\nimport NutritionalInfo from '../charts/NutritionalInfo/NutritionalInfo';\nimport RadarChart from '../charts/PerformanceChart/RadarChart';\nimport ScoreChart from '../charts/ScoreChart/ScoreChart';\n\n// Importing mock data (adjust the path as needed)\nimport mockData from '../../mockData.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = ({\n  userId\n}) => {\n  _s();\n  // State hooks for storing user data\n  const [userData, setUserData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // useEffect to fetch user data\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        // Simulating fetching data from an API or using mock data\n        // Replace with your actual fetching logic\n        await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate loading delay\n\n        // Example mock data usage\n        const mockUserData = mockData.USER_MAIN_DATA.find(user => user.id === parseInt(userId));\n        const activityData = mockData.USER_ACTIVITY.find(activity => activity.userId === parseInt(userId));\n        const averageSessionsData = mockData.USER_AVERAGE_SESSIONS.find(session => session.userId === parseInt(userId));\n        const performanceData = mockData.USER_PERFORMANCE.find(performance => performance.userId === parseInt(userId));\n        if (mockUserData && activityData && averageSessionsData && performanceData) {\n          setUserData({\n            userInfos: {\n              firstName: mockUserData.userInfos.firstName\n            },\n            keyData: {\n              calorieCount: mockUserData.keyData.calorieCount,\n              proteinCount: mockUserData.keyData.proteinCount,\n              carbohydrateCount: mockUserData.keyData.carbohydrateCount,\n              lipidCount: mockUserData.keyData.lipidCount\n            },\n            score: mockUserData.score,\n            activity: activityData.sessions,\n            averageSessions: averageSessionsData.sessions,\n            performance: performanceData.data\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      } finally {\n        setLoading(false); // Set loading to false once data fetching is complete\n      }\n    };\n    fetchUserData();\n  }, [userId]);\n\n  // If data is still loading, display a loading message\n  if (loading || !userData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Destructure values for easier access in the JSX\n  const {\n    firstName\n  } = userData.userInfos;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-header-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Bonjour \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"user-name\",\n            children: firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"F\\xE9licitation ! Vous avez explos\\xE9 vos objectifs hier \\uD83D\\uDC4F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-activity\",\n        children: /*#__PURE__*/_jsxDEV(ActivityChart, {\n          data: userData.activity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trois-sections\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: /*#__PURE__*/_jsxDEV(AverageSessionsChart, {\n            data: userData.averageSessions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: /*#__PURE__*/_jsxDEV(RadarChart, {\n            data: userData.performance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: /*#__PURE__*/_jsxDEV(ScoreChart, {\n            data: {\n              score: userData.score\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sections\",\n      children: /*#__PURE__*/_jsxDEV(NutritionalInfo, {\n        calorieCount: userData.keyData.calorieCount,\n        proteinCount: userData.keyData.proteinCount,\n        carbohydrateCount: userData.keyData.carbohydrateCount,\n        lipidCount: userData.keyData.lipidCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"vhv7d1oa6lqjcjPHNBz2j0Rabdw=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","ActivityChart","AverageSessionsChart","NutritionalInfo","RadarChart","ScoreChart","mockData","jsxDEV","_jsxDEV","Profile","userId","_s","userData","setUserData","loading","setLoading","fetchUserData","Promise","resolve","setTimeout","mockUserData","USER_MAIN_DATA","find","user","id","parseInt","activityData","USER_ACTIVITY","activity","averageSessionsData","USER_AVERAGE_SESSIONS","session","performanceData","USER_PERFORMANCE","performance","userInfos","firstName","keyData","calorieCount","proteinCount","carbohydrateCount","lipidCount","score","sessions","averageSessions","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/components/Profile/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Profile.css';\r\nimport ActivityChart from '../charts/ActivityChart/ActivityChart';\r\nimport AverageSessionsChart from '../charts/AverageSessionsChart/AverageSessionsChart';\r\nimport NutritionalInfo from '../charts/NutritionalInfo/NutritionalInfo';\r\nimport RadarChart from '../charts/PerformanceChart/RadarChart';\r\nimport ScoreChart from '../charts/ScoreChart/ScoreChart';\r\n\r\n// Importing mock data (adjust the path as needed)\r\nimport mockData from '../../mockData.json';\r\n\r\nconst Profile = ({ userId }) => {\r\n  // State hooks for storing user data\r\n  const [userData, setUserData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // useEffect to fetch user data\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        // Simulating fetching data from an API or using mock data\r\n        // Replace with your actual fetching logic\r\n        await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate loading delay\r\n\r\n        // Example mock data usage\r\n        const mockUserData = mockData.USER_MAIN_DATA.find(user => user.id === parseInt(userId));\r\n        const activityData = mockData.USER_ACTIVITY.find(activity => activity.userId === parseInt(userId));\r\n        const averageSessionsData = mockData.USER_AVERAGE_SESSIONS.find(session => session.userId === parseInt(userId));\r\n        const performanceData = mockData.USER_PERFORMANCE.find(performance => performance.userId === parseInt(userId));\r\n\r\n        if (mockUserData && activityData && averageSessionsData && performanceData) {\r\n          setUserData({\r\n            userInfos: {\r\n              firstName: mockUserData.userInfos.firstName,\r\n            },\r\n            keyData: {\r\n              calorieCount: mockUserData.keyData.calorieCount,\r\n              proteinCount: mockUserData.keyData.proteinCount,\r\n              carbohydrateCount: mockUserData.keyData.carbohydrateCount,\r\n              lipidCount: mockUserData.keyData.lipidCount,\r\n            },\r\n            score: mockUserData.score,\r\n            activity: activityData.sessions,\r\n            averageSessions: averageSessionsData.sessions,\r\n            performance: performanceData.data,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n      } finally {\r\n        setLoading(false); // Set loading to false once data fetching is complete\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [userId]);\r\n\r\n  // If data is still loading, display a loading message\r\n  if (loading || !userData) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // Destructure values for easier access in the JSX\r\n  const { firstName } = userData.userInfos;\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <div className=\"profile-header-section\">\r\n        <div className=\"profile-header\">\r\n          <h1>Bonjour <span className=\"user-name\">{firstName}</span></h1>\r\n          <p>Félicitation ! Vous avez explosé vos objectifs hier 👏</p>\r\n        </div>\r\n        <div className=\"section-activity\">\r\n          <ActivityChart data={userData.activity} />\r\n        </div>\r\n        <div className=\"trois-sections\">\r\n          <div className=\"section\">\r\n            <AverageSessionsChart data={userData.averageSessions} />\r\n          </div>\r\n          <div className=\"section\">\r\n            <RadarChart data={userData.performance} />\r\n          </div>\r\n          <div className=\"section\">\r\n            <ScoreChart data={{ score: userData.score }} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"sections\">\r\n        <NutritionalInfo\r\n          calorieCount={userData.keyData.calorieCount}\r\n          proteinCount={userData.keyData.proteinCount}\r\n          carbohydrateCount={userData.keyData.carbohydrateCount}\r\n          lipidCount={userData.keyData.lipidCount}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}