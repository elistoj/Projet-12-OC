{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elist\\\\OneDrive\\\\Documents\\\\GitHub\\\\Projet-12-OC\\\\src\\\\components\\\\charts\\\\ScoreChart\\\\ScoreChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScoreChart = ({\n  data\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  const chartInstanceRef = useRef(null);\n  const textRef = useRef(null);\n  useEffect(() => {\n    const ctx = chartRef.current.getContext('2d');\n    if (chartInstanceRef.current) {\n      chartInstanceRef.current.destroy();\n    }\n    const remainingScore = 1 - data;\n    chartInstanceRef.current = new Chart(ctx, {\n      type: 'doughnut',\n      data: {\n        labels: ['Remaining', 'Achieved'],\n        datasets: [{\n          data: [remainingScore * 100, data * 100],\n          backgroundColor: ['rgba(251, 251, 251, 1)', 'rgba(255, 0, 0, 1)'],\n          borderColor: ['rgba(251, 251, 251, 1)', 'rgba(255, 0, 0, 1)'],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        cutout: '80%',\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            enabled: false\n          },\n          title: {\n            display: true,\n            text: 'Score',\n            font: {\n              weight: 'bold',\n              size: 16\n            },\n            position: 'top',\n            padding: 10,\n            lineHeight: 1.5,\n            align: 'start',\n            anchor: 'start',\n            offset: {\n              y: 60\n            }\n          },\n          backgroundPlugin: {\n            id: 'backgroundPlugin',\n            beforeDraw: chart => {\n              const {\n                ctx,\n                chartArea\n              } = chart;\n              ctx.save();\n              ctx.fillStyle = 'rgba(251, 251, 251, 1)';\n              ctx.fillRect(chartArea.left, chartArea.top, chartArea.width, chartArea.height);\n              ctx.restore();\n            }\n          }\n        }\n      }\n    });\n    if (textRef.current) {\n      textRef.current.innerHTML = `<span style=\"color: black\">${data * 100}%</span> <br/><span style=\"color: rgba(116, 121, 140, 1)\">de votre</span> <br/><span style=\"color: rgba(116, 121, 140, 1)\">objectif</span>`;\n      textRef.current.style.position = 'absolute'; // Postavljanje na apsolutnu poziciju\n      textRef.current.style.top = '50%'; // Centriranje vertikalno\n      textRef.current.style.left = '50%'; // Centriranje horizontalno\n      textRef.current.style.transform = 'translate(-50%, -50%)'; // Centriranje po sredini\n      textRef.current.style.fontFamily = 'Arial, sans-serif';\n      textRef.current.style.fontSize = '26px';\n      textRef.current.style.fontWeight = 'bold';\n      textRef.current.style.textAlign = 'center';\n      textRef.current.style.lineHeight = '1.2';\n      textRef.current.style.color = 'black';\n    }\n    return () => {\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n      }\n    };\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      width: '100%',\n      maxWidth: '450px',\n      height: '300',\n      maxHeight: '400px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef,\n      style: {\n        backgroundColor: 'rgba(251, 251, 251, 1)',\n        borderRadius: '8px',\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: textRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(ScoreChart, \"3xS4SnpEdinfMsdmEO9IjQ3HnUE=\");\n_c = ScoreChart;\nexport default ScoreChart;\nvar _c;\n$RefreshReg$(_c, \"ScoreChart\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","ScoreChart","data","_s","chartRef","chartInstanceRef","textRef","ctx","current","getContext","destroy","remainingScore","type","labels","datasets","backgroundColor","borderColor","borderWidth","options","cutout","responsive","maintainAspectRatio","plugins","legend","display","tooltip","enabled","title","text","font","weight","size","position","padding","lineHeight","align","anchor","offset","y","backgroundPlugin","id","beforeDraw","chart","chartArea","save","fillStyle","fillRect","left","top","width","height","restore","innerHTML","style","transform","fontFamily","fontSize","fontWeight","textAlign","color","maxWidth","maxHeight","margin","children","ref","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/components/charts/ScoreChart/ScoreChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport Chart from 'chart.js/auto';\r\n\r\nconst ScoreChart = ({ data }) => {\r\n  const chartRef = useRef(null);\r\n  const chartInstanceRef = useRef(null);\r\n  const textRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const ctx = chartRef.current.getContext('2d');\r\n\r\n    if (chartInstanceRef.current) {\r\n      chartInstanceRef.current.destroy();\r\n    }\r\n\r\n    const remainingScore = 1 - data;\r\n\r\n    chartInstanceRef.current = new Chart(ctx, {\r\n      type: 'doughnut',\r\n      data: {\r\n        labels: ['Remaining', 'Achieved'],\r\n        datasets: [{\r\n          data: [remainingScore * 100, data * 100],\r\n          backgroundColor: ['rgba(251, 251, 251, 1)', 'rgba(255, 0, 0, 1)'],\r\n          borderColor: ['rgba(251, 251, 251, 1)', 'rgba(255, 0, 0, 1)'],\r\n          borderWidth: 1\r\n        }]\r\n      },\r\n      options: {\r\n        cutout: '80%',\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: {\r\n          legend: {\r\n            display: false\r\n          },\r\n          tooltip: {\r\n            enabled: false\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: 'Score',\r\n            font: { weight: 'bold', size: 16 },\r\n            position: 'top',\r\n            padding: 10,\r\n            lineHeight: 1.5,\r\n            align: 'start',\r\n            anchor: 'start',\r\n            offset: {\r\n              y: 60\r\n            }\r\n          },\r\n          backgroundPlugin: {\r\n            id: 'backgroundPlugin',\r\n            beforeDraw: (chart) => {\r\n              const { ctx, chartArea } = chart;\r\n              ctx.save();\r\n              ctx.fillStyle = 'rgba(251, 251, 251, 1)';\r\n              ctx.fillRect(chartArea.left, chartArea.top, chartArea.width, chartArea.height);\r\n              ctx.restore();\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    if (textRef.current) {\r\n      textRef.current.innerHTML = `<span style=\"color: black\">${data * 100}%</span> <br/><span style=\"color: rgba(116, 121, 140, 1)\">de votre</span> <br/><span style=\"color: rgba(116, 121, 140, 1)\">objectif</span>`;\r\n      textRef.current.style.position = 'absolute'; // Postavljanje na apsolutnu poziciju\r\n      textRef.current.style.top = '50%'; // Centriranje vertikalno\r\n      textRef.current.style.left = '50%'; // Centriranje horizontalno\r\n      textRef.current.style.transform = 'translate(-50%, -50%)'; // Centriranje po sredini\r\n      textRef.current.style.fontFamily = 'Arial, sans-serif';\r\n      textRef.current.style.fontSize = '26px';\r\n      textRef.current.style.fontWeight = 'bold';\r\n      textRef.current.style.textAlign = 'center';\r\n      textRef.current.style.lineHeight = '1.2';\r\n      textRef.current.style.color = 'black';\r\n    }\r\n\r\n    return () => {\r\n      if (chartInstanceRef.current) {\r\n        chartInstanceRef.current.destroy();\r\n      }\r\n    };\r\n  }, [data]);\r\n\r\n  return (\r\n    <div style={{ position: 'relative', width: '100%', maxWidth: '450px', height: '300', maxHeight: '400px', margin: '0 auto' }}>\r\n      <canvas ref={chartRef} style={{ backgroundColor: 'rgba(251, 251, 251, 1)', borderRadius: '8px', width: '100%', height: '100%' }} />\r\n      <div ref={textRef}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScoreChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}