{"ast":null,"code":"import React from'react';import{BarChart,Bar,CartesianGrid,Tooltip,Legend,XAxis,YAxis,ResponsiveContainer}from'recharts';import'./ActivityChart.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CustomTooltip=_ref=>{let{active,payload}=_ref;if(active&&payload&&payload.length){return/*#__PURE__*/_jsxs(\"div\",{className:\"custom-tooltip-activity\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"label\",children:\"\".concat(payload[0].value,\"kg\")}),/*#__PURE__*/_jsx(\"p\",{className:\"label\",children:\"\".concat(payload[1].value,\"kCal\")})]});}return null;};const ActivityChart=_ref2=>{let{data}=_ref2;if(!data||data.length===0){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}// Transformacija podataka da sadrže samo dan meseca\nconst transformedData=data.map(item=>({...item,day:new Date(item.day).getDate()// Izvlači samo dan iz datuma\n}));const minKilogram=Math.min(...transformedData.map(item=>item.kilogram));return/*#__PURE__*/_jsxs(\"div\",{className:\"chart-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chart-header\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Activit\\xE9 quotidienne\"})}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:\"100%\",children:/*#__PURE__*/_jsxs(BarChart,{data:transformedData,margin:{top:20,right:30,left:20,bottom:20},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\",vertical:false}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"day\",tick:{fontSize:14,fontWeight:500,fontFamily:\"Roboto\",color:\"rgba(155, 158, 172, 1)\"},tickLine:false,stroke:\"#DEDEDE\"}),/*#__PURE__*/_jsx(YAxis,{yAxisId:\"left\",dataKey:\"kilogram\",orientation:\"right\",domain:[minKilogram-2,'auto'],allowDecimals:false,tick:{fontSize:14,fontWeight:500,fontFamily:\"Roboto\",color:\"rgba(155, 158, 172, 1)\"},tickLine:false,axisLine:false,stroke:\"#DEDEDE\"}),/*#__PURE__*/_jsx(YAxis,{yAxisId:\"right\",dataKey:\"calories\",orientation:\"left\",allowDecimals:false,hide:true}),/*#__PURE__*/_jsx(Tooltip,{content:/*#__PURE__*/_jsx(CustomTooltip,{})}),/*#__PURE__*/_jsx(Legend,{verticalAlign:\"top\",align:\"right\",iconType:\"circle\",height:36,iconSize:10,formatter:(value,entry,index)=>/*#__PURE__*/_jsx(\"span\",{style:{color:'rgba(155, 158, 172, 1)'},children:value==='kilogram'?'Poids (kg)':'Calories brûlées (kCal)'})}),/*#__PURE__*/_jsx(Bar,{yAxisId:\"left\",dataKey:\"kilogram\",fill:\"black\",name:\"Poids (kg)\",barSize:7,radius:[10,10,0,0]}),/*#__PURE__*/_jsx(Bar,{yAxisId:\"right\",dataKey:\"calories\",fill:\"red\",name:\"Calories br\\xFBl\\xE9es (kCal)\",barSize:7,radius:[10,10,0,0]})]})})]});};export default ActivityChart;","map":{"version":3,"names":["React","BarChart","Bar","CartesianGrid","Tooltip","Legend","XAxis","YAxis","ResponsiveContainer","jsx","_jsx","jsxs","_jsxs","CustomTooltip","_ref","active","payload","length","className","children","concat","value","ActivityChart","_ref2","data","transformedData","map","item","day","Date","getDate","minKilogram","Math","min","kilogram","width","height","margin","top","right","left","bottom","strokeDasharray","vertical","dataKey","tick","fontSize","fontWeight","fontFamily","color","tickLine","stroke","yAxisId","orientation","domain","allowDecimals","axisLine","hide","content","verticalAlign","align","iconType","iconSize","formatter","entry","index","style","fill","name","barSize","radius"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/components/charts/ActivityChart/ActivityChart.js"],"sourcesContent":["import React from 'react';\r\nimport { BarChart, Bar, CartesianGrid, Tooltip, Legend, XAxis, YAxis, ResponsiveContainer } from 'recharts';\r\nimport './ActivityChart.css';\r\n\r\nconst CustomTooltip = ({ active, payload }) => {\r\n  if (active && payload && payload.length) {\r\n    return (\r\n      <div className=\"custom-tooltip-activity\">\r\n        <p className=\"label\">{`${payload[0].value}kg`}</p>\r\n        <p className=\"label\">{`${payload[1].value}kCal`}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst ActivityChart = ({ data }) => {\r\n  if (!data || data.length === 0) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // Transformacija podataka da sadrže samo dan meseca\r\n  const transformedData = data.map(item => ({\r\n    ...item,\r\n    day: new Date(item.day).getDate() // Izvlači samo dan iz datuma\r\n  }));\r\n\r\n  const minKilogram = Math.min(...transformedData.map(item => item.kilogram));\r\n\r\n  return (\r\n    <div className=\"chart-container\">\r\n      <div className=\"chart-header\">\r\n        <h2>Activité quotidienne</h2>\r\n      </div>\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <BarChart data={transformedData} margin={{ top: 20, right: 30, left: 20, bottom: 20 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"day\" tick={{ fontSize: 14, fontWeight: 500, fontFamily: \"Roboto\", color: \"rgba(155, 158, 172, 1)\" }} tickLine={false} stroke=\"#DEDEDE\" />\r\n          <YAxis yAxisId=\"left\" dataKey=\"kilogram\" orientation='right' domain={[minKilogram - 2, 'auto']} allowDecimals={false} tick={{ fontSize: 14, fontWeight: 500, fontFamily: \"Roboto\", color: \"rgba(155, 158, 172, 1)\" }} tickLine={false} axisLine={false} stroke=\"#DEDEDE\" />\r\n          <YAxis yAxisId=\"right\" dataKey=\"calories\" orientation=\"left\" allowDecimals={false} hide />\r\n          <Tooltip content={<CustomTooltip />} />\r\n          <Legend verticalAlign=\"top\" align=\"right\" iconType=\"circle\" height={36} iconSize={10} formatter={(value, entry, index) => <span style={{ color: 'rgba(155, 158, 172, 1)' }}>{value === 'kilogram' ? 'Poids (kg)' : 'Calories brûlées (kCal)'}</span>} />\r\n          <Bar yAxisId=\"left\" dataKey=\"kilogram\" fill=\"black\" name=\"Poids (kg)\" barSize={7} radius={[10, 10, 0, 0]} />\r\n          <Bar yAxisId=\"right\" dataKey=\"calories\" fill=\"red\" name=\"Calories brûlées (kCal)\" barSize={7} radius={[10, 10, 0, 0]} />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActivityChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}