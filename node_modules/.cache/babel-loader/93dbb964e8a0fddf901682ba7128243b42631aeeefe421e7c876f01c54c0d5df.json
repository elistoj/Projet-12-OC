{"ast":null,"code":"// Пример за api.js со функции за земање на податоци од API\n\nconst BASE_URL = 'https://projet-12-oc.vercel.app'; // Променете го овој URL според вашиот API\n\nconst fetchUserData = async userId => {\n  const url = `${BASE_URL}/api/user/${userId}/data.js`;\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('Неуспешно земање на податоци за корисникот');\n    }\n    return await response.json();\n  } catch (error) {\n    throw new Error(`Грешка при земање на податоци за корисникот: ${error.message}`);\n  }\n};\nconst fetchUserActivity = async userId => {\n  const url = `${BASE_URL}/api/user/${userId}/activity.js`;\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('Неуспешно земање на активности за корисникот');\n    }\n    return await response.json();\n  } catch (error) {\n    throw new Error(`Грешка при земање на активности за корисникот: ${error.message}`);\n  }\n};\nconst fetchUserAverageSessions = async userId => {\n  const url = `${BASE_URL}/api/user/${userId}/average_sessions.js`;\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('Неуспешно земање на просечни сесии за корисникот');\n    }\n    return await response.json();\n  } catch (error) {\n    throw new Error(`Грешка при земање на просечни сесии за корисникот: ${error.message}`);\n  }\n};\nconst fetchUserPerformance = async userId => {\n  const url = `${BASE_URL}/api/user/${userId}/performance.js`;\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('Неуспешно земање на перформанси за корисникот');\n    }\n    return await response.json();\n  } catch (error) {\n    throw new Error(`Грешка при земање на перформанси за корисникот: ${error.message}`);\n  }\n};\nexport { fetchUserData, fetchUserActivity, fetchUserAverageSessions, fetchUserPerformance };","map":{"version":3,"names":["BASE_URL","fetchUserData","userId","url","response","fetch","ok","Error","json","error","message","fetchUserActivity","fetchUserAverageSessions","fetchUserPerformance"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/service/api.js"],"sourcesContent":["// Пример за api.js со функции за земање на податоци од API\r\n\r\nconst BASE_URL = 'https://projet-12-oc.vercel.app'; // Променете го овој URL според вашиот API\r\n\r\nconst fetchUserData = async (userId) => {\r\n    const url = `${BASE_URL}/api/user/${userId}/data.js`;\r\n    try {\r\n        const response = await fetch(url);\r\n        if (!response.ok) {\r\n            throw new Error('Неуспешно земање на податоци за корисникот');\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        throw new Error(`Грешка при земање на податоци за корисникот: ${error.message}`);\r\n    }\r\n};\r\n\r\nconst fetchUserActivity = async (userId) => {\r\n    const url = `${BASE_URL}/api/user/${userId}/activity.js`;\r\n    try {\r\n        const response = await fetch(url);\r\n        if (!response.ok) {\r\n            throw new Error('Неуспешно земање на активности за корисникот');\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        throw new Error(`Грешка при земање на активности за корисникот: ${error.message}`);\r\n    }\r\n};\r\n\r\nconst fetchUserAverageSessions = async (userId) => {\r\n    const url = `${BASE_URL}/api/user/${userId}/average_sessions.js`;\r\n    try {\r\n        const response = await fetch(url);\r\n        if (!response.ok) {\r\n            throw new Error('Неуспешно земање на просечни сесии за корисникот');\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        throw new Error(`Грешка при земање на просечни сесии за корисникот: ${error.message}`);\r\n    }\r\n};\r\n\r\nconst fetchUserPerformance = async (userId) => {\r\n    const url = `${BASE_URL}/api/user/${userId}/performance.js`;\r\n    try {\r\n        const response = await fetch(url);\r\n        if (!response.ok) {\r\n            throw new Error('Неуспешно земање на перформанси за корисникот');\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        throw new Error(`Грешка при земање на перформанси за корисникот: ${error.message}`);\r\n    }\r\n};\r\n\r\nexport { fetchUserData, fetchUserActivity, fetchUserAverageSessions, fetchUserPerformance };\r\n"],"mappings":"AAAA;;AAEA,MAAMA,QAAQ,GAAG,iCAAiC,CAAC,CAAC;;AAEpD,MAAMC,aAAa,GAAG,MAAOC,MAAM,IAAK;EACpC,MAAMC,GAAG,GAAG,GAAGH,QAAQ,aAAaE,MAAM,UAAU;EACpD,IAAI;IACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;IACjE;IACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIF,KAAK,CAAC,gDAAgDE,KAAK,CAACC,OAAO,EAAE,CAAC;EACpF;AACJ,CAAC;AAED,MAAMC,iBAAiB,GAAG,MAAOT,MAAM,IAAK;EACxC,MAAMC,GAAG,GAAG,GAAGH,QAAQ,aAAaE,MAAM,cAAc;EACxD,IAAI;IACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;IACnE;IACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIF,KAAK,CAAC,kDAAkDE,KAAK,CAACC,OAAO,EAAE,CAAC;EACtF;AACJ,CAAC;AAED,MAAME,wBAAwB,GAAG,MAAOV,MAAM,IAAK;EAC/C,MAAMC,GAAG,GAAG,GAAGH,QAAQ,aAAaE,MAAM,sBAAsB;EAChE,IAAI;IACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,kDAAkD,CAAC;IACvE;IACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIF,KAAK,CAAC,sDAAsDE,KAAK,CAACC,OAAO,EAAE,CAAC;EAC1F;AACJ,CAAC;AAED,MAAMG,oBAAoB,GAAG,MAAOX,MAAM,IAAK;EAC3C,MAAMC,GAAG,GAAG,GAAGH,QAAQ,aAAaE,MAAM,iBAAiB;EAC3D,IAAI;IACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;IACpE;IACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIF,KAAK,CAAC,mDAAmDE,KAAK,CAACC,OAAO,EAAE,CAAC;EACvF;AACJ,CAAC;AAED,SAAST,aAAa,EAAEU,iBAAiB,EAAEC,wBAAwB,EAAEC,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}