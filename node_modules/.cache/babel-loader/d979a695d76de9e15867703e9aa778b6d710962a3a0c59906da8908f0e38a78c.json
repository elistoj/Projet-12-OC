{"ast":null,"code":"const baseURL = 'http://localhost:3000';\nconst routes = {\n  id: '/user/:id',\n  activity: '/activity',\n  averageSession: '/average-sessions',\n  performance: '/performance'\n};\n\n/**\r\n * description: Fetches data from url\r\n * @param {string} url - The url to fetch data from\r\n * @return {object} - The data fetched\r\n * @throws {Error} - The error thrown by fetch\r\n * @async\r\n */\nconst fetchData = async url => {\n  try {\n    const response = await (await fetch(url)).json();\n    return response;\n  } catch (error) {\n    throw new Error(`Error fetching data: ${error}`);\n  }\n};\n\n/**\r\n * description: Fetches user data from the API\r\n * @param {number} id - The user id\r\n * @return {object} - The user data\r\n * @throws {Error} - The error thrown by fetchData\r\n * @async\r\n */\nconst getUser = async id => {\n  const url = `${baseURL}${routes.id.replace(':id', id)}`;\n  return fetchData(url);\n};\n\n/**\r\n * description: Fetches user activity data from the API\r\n * @param {number} id - The user id\r\n * @return {object} - The user activity data\r\n * @throws {Error} - The error thrown by fetchData\r\n * @async\r\n */\nconst getUserActivity = async id => {\n  const url = `${baseURL}${routes.id.replace(':id', id)}${routes.activity}`;\n  return fetchData(url);\n};\n\n/**\r\n * description: Fetches user average session data from the API\r\n * @param {number} id - The user id\r\n * @return {object} - The user average session data\r\n * @throws {Error} - The error thrown by fetchData\r\n * @async\r\n */\nconst getUserAverageSession = async id => {\n  const url = `${baseURL}${routes.id.replace(':id', id)}${routes.averageSession}`;\n  return fetchData(url);\n};\n\n/**\r\n * description: Fetches user performance data from the API\r\n * @param {number} id - The user id\r\n * @return {object} - The user performance data\r\n * @throws {Error} - The error thrown by fetchData\r\n * @async\r\n */\nconst getUserPerformance = async id => {\n  const url = `${baseURL}${routes.id.replace(':id', id)}${routes.performance}`;\n  return fetchData(url);\n};\nexport { getUser, getUserActivity, getUserAverageSession, getUserPerformance };","map":{"version":3,"names":["baseURL","routes","id","activity","averageSession","performance","fetchData","url","response","fetch","json","error","Error","getUser","replace","getUserActivity","getUserAverageSession","getUserPerformance"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/service/api.js"],"sourcesContent":["const baseURL = 'http://localhost:3000';\r\n\r\nconst routes = {\r\n  id: '/user/:id',\r\n  activity: '/activity',\r\n  averageSession: '/average-sessions',\r\n  performance: '/performance',\r\n};\r\n\r\n/**\r\n * description: Fetches data from url\r\n * @param {string} url - The url to fetch data from\r\n * @return {object} - The data fetched\r\n * @throws {Error} - The error thrown by fetch\r\n * @async\r\n */\r\nconst fetchData = async (url) => {\r\n  try {\r\n    const response = await (await fetch(url)).json();\r\n    return response;\r\n  } catch (error) {\r\n    throw new Error(`Error fetching data: ${error}`);\r\n  }\r\n};\r\n\r\n/**\r\n * description: Fetches user data from the API\r\n * @param {number} id - The user id\r\n * @return {object} - The user data\r\n * @throws {Error} - The error thrown by fetchData\r\n * @async\r\n */\r\nconst getUser = async (id) => {\r\n  const url = `${baseURL}${routes.id.replace(':id', id)}`;\r\n  return fetchData(url);\r\n};\r\n\r\n/**\r\n * description: Fetches user activity data from the API\r\n * @param {number} id - The user id\r\n * @return {object} - The user activity data\r\n * @throws {Error} - The error thrown by fetchData\r\n * @async\r\n */\r\nconst getUserActivity = async (id) => {\r\n  const url = `${baseURL}${routes.id.replace(':id', id)}${routes.activity}`;\r\n  return fetchData(url);\r\n};\r\n\r\n/**\r\n * description: Fetches user average session data from the API\r\n * @param {number} id - The user id\r\n * @return {object} - The user average session data\r\n * @throws {Error} - The error thrown by fetchData\r\n * @async\r\n */\r\nconst getUserAverageSession = async (id) => {\r\n  const url = `${baseURL}${routes.id.replace(':id', id)}${\r\n    routes.averageSession\r\n  }`;\r\n  return fetchData(url);\r\n};\r\n\r\n/**\r\n * description: Fetches user performance data from the API\r\n * @param {number} id - The user id\r\n * @return {object} - The user performance data\r\n * @throws {Error} - The error thrown by fetchData\r\n * @async\r\n */\r\nconst getUserPerformance = async (id) => {\r\n  const url = `${baseURL}${routes.id.replace(':id', id)}${routes.performance}`;\r\n  return fetchData(url);\r\n};\r\n\r\nexport { getUser, getUserActivity, getUserAverageSession, getUserPerformance };"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAuB;AAEvC,MAAMC,MAAM,GAAG;EACbC,EAAE,EAAE,WAAW;EACfC,QAAQ,EAAE,WAAW;EACrBC,cAAc,EAAE,mBAAmB;EACnCC,WAAW,EAAE;AACf,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,SAAS,GAAG,MAAOC,GAAG,IAAK;EAC/B,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACF,GAAG,CAAC,EAAEG,IAAI,CAAC,CAAC;IAChD,OAAOF,QAAQ;EACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,wBAAwBD,KAAK,EAAE,CAAC;EAClD;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,OAAO,GAAG,MAAOX,EAAE,IAAK;EAC5B,MAAMK,GAAG,GAAG,GAAGP,OAAO,GAAGC,MAAM,CAACC,EAAE,CAACY,OAAO,CAAC,KAAK,EAAEZ,EAAE,CAAC,EAAE;EACvD,OAAOI,SAAS,CAACC,GAAG,CAAC;AACvB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMQ,eAAe,GAAG,MAAOb,EAAE,IAAK;EACpC,MAAMK,GAAG,GAAG,GAAGP,OAAO,GAAGC,MAAM,CAACC,EAAE,CAACY,OAAO,CAAC,KAAK,EAAEZ,EAAE,CAAC,GAAGD,MAAM,CAACE,QAAQ,EAAE;EACzE,OAAOG,SAAS,CAACC,GAAG,CAAC;AACvB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMS,qBAAqB,GAAG,MAAOd,EAAE,IAAK;EAC1C,MAAMK,GAAG,GAAG,GAAGP,OAAO,GAAGC,MAAM,CAACC,EAAE,CAACY,OAAO,CAAC,KAAK,EAAEZ,EAAE,CAAC,GACnDD,MAAM,CAACG,cAAc,EACrB;EACF,OAAOE,SAAS,CAACC,GAAG,CAAC;AACvB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMU,kBAAkB,GAAG,MAAOf,EAAE,IAAK;EACvC,MAAMK,GAAG,GAAG,GAAGP,OAAO,GAAGC,MAAM,CAACC,EAAE,CAACY,OAAO,CAAC,KAAK,EAAEZ,EAAE,CAAC,GAAGD,MAAM,CAACI,WAAW,EAAE;EAC5E,OAAOC,SAAS,CAACC,GAAG,CAAC;AACvB,CAAC;AAED,SAASM,OAAO,EAAEE,eAAe,EAAEC,qBAAqB,EAAEC,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}