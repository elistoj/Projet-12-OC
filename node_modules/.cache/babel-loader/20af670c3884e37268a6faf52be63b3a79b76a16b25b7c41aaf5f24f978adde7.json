{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elist\\\\OneDrive\\\\Documents\\\\GitHub\\\\Projet-12-OC\\\\src\\\\Page\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Profile.css';\nimport VerticalNav from '../components/VerticalNav/VerticalNav';\nimport ScoreChart from '../components/charts/ScoreChart/ScoreChart'; // Uvezite ScoreChart komponentu\nimport { fetchUserData, fetchUserActivity, fetchUserAverageSessions, fetchUserPerformance } from '../service/api'; // Uvezite svoje funkcije za dohvaćanje podataka\nimport MockData from '../mockData.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [selectedProfile, setSelectedProfile] = useState('score'); // Početno odabrani profil\n  const [userId, setUserId] = useState('18'); // Default userId, adjust as needed\n  const [userData, setUserData] = useState(null);\n  const [userActivity, setUserActivity] = useState(null);\n  const [userAverageSessions, setUserAverageSessions] = useState(null);\n  const [userPerformance, setUserPerformance] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n\n        // Dohvati podatke o korisniku na temelju trenutnog userId-a\n        const fetchedUserData = await fetchUserData(userId);\n        const fetchedUserActivity = await fetchUserActivity(userId);\n        const fetchedUserAverageSessions = await fetchUserAverageSessions(userId);\n        const fetchedUserPerformance = await fetchUserPerformance(userId);\n        setUserData(fetchedUserData);\n        setUserActivity(fetchedUserActivity);\n        setUserAverageSessions(fetchedUserAverageSessions);\n        setUserPerformance(fetchedUserPerformance);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setLoading(false);\n\n        // Postavi podatke iz mockData ako dohvaćanje ne uspije\n        setUserData(mockData.USER_MAIN_DATA.find(user => user.id === parseInt(userId)) || null);\n        setUserActivity(mockData.USER_ACTIVITY.find(activity => activity.userId === parseInt(userId)) || null);\n        setUserAverageSessions(mockData.USER_AVERAGE_SESSIONS.find(session => session.userId === parseInt(userId)) || null);\n        setUserPerformance(mockData.USER_PERFORMANCE.find(performance => performance.userId === parseInt(userId)) || null);\n      }\n    };\n    fetchData();\n  }, [userId]);\n  const handleProfileChange = profileType => {\n    setSelectedProfile(profileType); // Ažuriraj odabrani profil\n  };\n  if (loading || !userData || !userActivity || !userAverageSessions || !userPerformance) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this); // Stanje učitavanja\n  }\n  if (!userActivity.sessions || !userAverageSessions.sessions || !userPerformance.data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Data not available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this); // Rukovanje nedostupnim podacima\n  }\n  const {\n    firstName\n  } = userData.userInfos;\n\n  // Možete ukloniti scoreData varijablu ako više nije potrebna\n  // let scoreData;\n  // if (selectedProfile === 'score') {\n  //   scoreData = userData.score; // Prikaži score podatke\n  // } else if (selectedProfile === 'todayScore') {\n  //   scoreData = userPerformance.todayScore; // Prikaži todayScore podatke\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(VerticalNav, {\n      onProfileChange: handleProfileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-header-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Hello \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"user-name\",\n            children: firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Congratulations! You smashed your goals yesterday \\uD83D\\uDC4F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScoreChart, {\n        data: selectedProfile === 'score' ? userData.score : userPerformance.todayScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"HX8/D5UgBgeahcfAxURBXk+hpho=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","VerticalNav","ScoreChart","fetchUserData","fetchUserActivity","fetchUserAverageSessions","fetchUserPerformance","MockData","jsxDEV","_jsxDEV","Profile","_s","selectedProfile","setSelectedProfile","userId","setUserId","userData","setUserData","userActivity","setUserActivity","userAverageSessions","setUserAverageSessions","userPerformance","setUserPerformance","loading","setLoading","fetchData","fetchedUserData","fetchedUserActivity","fetchedUserAverageSessions","fetchedUserPerformance","error","console","mockData","USER_MAIN_DATA","find","user","id","parseInt","USER_ACTIVITY","activity","USER_AVERAGE_SESSIONS","session","USER_PERFORMANCE","performance","handleProfileChange","profileType","children","fileName","_jsxFileName","lineNumber","columnNumber","sessions","data","firstName","userInfos","className","onProfileChange","score","todayScore","_c","$RefreshReg$"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/Page/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Profile.css';\r\nimport VerticalNav from '../components/VerticalNav/VerticalNav';\r\nimport ScoreChart from '../components/charts/ScoreChart/ScoreChart'; // Uvezite ScoreChart komponentu\r\nimport {\r\n  fetchUserData,\r\n  fetchUserActivity,\r\n  fetchUserAverageSessions,\r\n  fetchUserPerformance,\r\n} from '../service/api'; // Uvezite svoje funkcije za dohvaćanje podataka\r\nimport MockData from '../mockData.json'\r\n\r\nconst Profile = () => {\r\n  const [selectedProfile, setSelectedProfile] = useState('score'); // Početno odabrani profil\r\n  const [userId, setUserId] = useState('18'); // Default userId, adjust as needed\r\n  const [userData, setUserData] = useState(null);\r\n  const [userActivity, setUserActivity] = useState(null);\r\n  const [userAverageSessions, setUserAverageSessions] = useState(null);\r\n  const [userPerformance, setUserPerformance] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n\r\n        // Dohvati podatke o korisniku na temelju trenutnog userId-a\r\n        const fetchedUserData = await fetchUserData(userId);\r\n        const fetchedUserActivity = await fetchUserActivity(userId);\r\n        const fetchedUserAverageSessions = await fetchUserAverageSessions(userId);\r\n        const fetchedUserPerformance = await fetchUserPerformance(userId);\r\n\r\n        setUserData(fetchedUserData);\r\n        setUserActivity(fetchedUserActivity);\r\n        setUserAverageSessions(fetchedUserAverageSessions);\r\n        setUserPerformance(fetchedUserPerformance);\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setLoading(false);\r\n\r\n        // Postavi podatke iz mockData ako dohvaćanje ne uspije\r\n        setUserData(mockData.USER_MAIN_DATA.find(user => user.id === parseInt(userId)) || null);\r\n        setUserActivity(mockData.USER_ACTIVITY.find(activity => activity.userId === parseInt(userId)) || null);\r\n        setUserAverageSessions(mockData.USER_AVERAGE_SESSIONS.find(session => session.userId === parseInt(userId)) || null);\r\n        setUserPerformance(mockData.USER_PERFORMANCE.find(performance => performance.userId === parseInt(userId)) || null);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [userId]);\r\n\r\n  const handleProfileChange = (profileType) => {\r\n    setSelectedProfile(profileType); // Ažuriraj odabrani profil\r\n  };\r\n\r\n  if (loading || !userData || !userActivity || !userAverageSessions || !userPerformance) {\r\n    return <div>Loading...</div>; // Stanje učitavanja\r\n  }\r\n\r\n  if (!userActivity.sessions || !userAverageSessions.sessions || !userPerformance.data) {\r\n    return <div>Data not available</div>; // Rukovanje nedostupnim podacima\r\n  }\r\n\r\n  const { firstName } = userData.userInfos;\r\n\r\n  // Možete ukloniti scoreData varijablu ako više nije potrebna\r\n  // let scoreData;\r\n  // if (selectedProfile === 'score') {\r\n  //   scoreData = userData.score; // Prikaži score podatke\r\n  // } else if (selectedProfile === 'todayScore') {\r\n  //   scoreData = userPerformance.todayScore; // Prikaži todayScore podatke\r\n  // }\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <VerticalNav onProfileChange={handleProfileChange} /> {/* Proslijedi funkciju za promjenu profila */}\r\n      <div className=\"profile-header-section\">\r\n        <div className=\"profile-header\">\r\n          <h1>Hello <span className=\"user-name\">{firstName}</span></h1>\r\n          <p>Congratulations! You smashed your goals yesterday 👏</p>\r\n        </div>\r\n        {/* Prikaz ScoreChart komponente sa odgovarajućim podacima */}\r\n        <ScoreChart\r\n          data={selectedProfile === 'score' ? userData.score : userPerformance.todayScore}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}