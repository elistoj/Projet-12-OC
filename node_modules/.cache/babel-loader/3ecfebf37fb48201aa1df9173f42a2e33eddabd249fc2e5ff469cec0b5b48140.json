{"ast":null,"code":"export const fetchUserData = async userId => {\n  const response = await fetch(`http://localhost:3000/user/${userId}`);\n  const data = await response.json().catch(error => console.error('Error parsing JSON:', error));\n  console.log('User Data:', data); // Debug\n  return data;\n};\nexport const fetchUserActivity = async userId => {\n  const response = await fetch(`http://localhost:3000/user/${userId}/activity`);\n  const data = await response.json().catch(error => console.error('Error parsing JSON:', error));\n  console.log('User Activity:', data); // Debug\n  return data;\n};\nexport const fetchUserAverageSessions = async userId => {\n  const response = await fetch(`http://localhost:3000/user/${userId}/average-sessions`);\n  const data = await response.json().catch(error => console.error('Error parsing JSON:', error));\n  console.log('User Average Sessions:', data); // Debug\n  return data;\n};\nexport const fetchUserPerformance = async userId => {\n  const response = await fetch(`http://localhost:3000/user/${userId}/performance`);\n  const data = await response.json().catch(error => console.error('Error parsing JSON:', error));\n  console.log('User Performance:', data); // Debug\n  return data;\n};","map":{"version":3,"names":["fetchUserData","userId","response","fetch","data","json","catch","error","console","log","fetchUserActivity","fetchUserAverageSessions","fetchUserPerformance"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/services/api.js"],"sourcesContent":["export const fetchUserData = async (userId) => {\r\n  const response = await fetch(`http://localhost:3000/user/${userId}`);\r\n  const data = await response.json().catch(error => console.error('Error parsing JSON:', error));\r\n  console.log('User Data:', data); // Debug\r\n  return data;\r\n};\r\n\r\nexport const fetchUserActivity = async (userId) => {\r\n  const response = await fetch(`http://localhost:3000/user/${userId}/activity`);\r\n  const data = await response.json().catch(error => console.error('Error parsing JSON:', error));\r\n  console.log('User Activity:', data); // Debug\r\n  return data;\r\n};\r\n\r\nexport const fetchUserAverageSessions = async (userId) => {\r\n  const response = await fetch(`http://localhost:3000/user/${userId}/average-sessions`);\r\n  const data = await response.json().catch(error => console.error('Error parsing JSON:', error));\r\n  console.log('User Average Sessions:', data); // Debug\r\n  return data;\r\n};\r\n\r\nexport const fetchUserPerformance = async (userId) => {\r\n  const response = await fetch(`http://localhost:3000/user/${userId}/performance`);\r\n  const data = await response.json().catch(error => console.error('Error parsing JSON:', error));\r\n  console.log('User Performance:', data); // Debug\r\n  return data;\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,MAAOC,MAAM,IAAK;EAC7C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8BF,MAAM,EAAE,CAAC;EACpE,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC,CAAC;EAC9FC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEL,IAAI,CAAC,CAAC,CAAC;EACjC,OAAOA,IAAI;AACb,CAAC;AAED,OAAO,MAAMM,iBAAiB,GAAG,MAAOT,MAAM,IAAK;EACjD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8BF,MAAM,WAAW,CAAC;EAC7E,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC,CAAC;EAC9FC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEL,IAAI,CAAC,CAAC,CAAC;EACrC,OAAOA,IAAI;AACb,CAAC;AAED,OAAO,MAAMO,wBAAwB,GAAG,MAAOV,MAAM,IAAK;EACxD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8BF,MAAM,mBAAmB,CAAC;EACrF,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC,CAAC;EAC9FC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEL,IAAI,CAAC,CAAC,CAAC;EAC7C,OAAOA,IAAI;AACb,CAAC;AAED,OAAO,MAAMQ,oBAAoB,GAAG,MAAOX,MAAM,IAAK;EACpD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8BF,MAAM,cAAc,CAAC;EAChF,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC,CAAC;EAC9FC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEL,IAAI,CAAC,CAAC,CAAC;EACxC,OAAOA,IAAI;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}