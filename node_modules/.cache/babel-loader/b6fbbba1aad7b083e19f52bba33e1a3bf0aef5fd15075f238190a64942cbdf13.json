{"ast":null,"code":"const BASE_URL = 'https://projet-12-oc.vercel.app';\n\n// Функција за вчитување на податоци за корисникот\nexport const fetchUserData = async userId => {\n  try {\n    const response = await fetch(`${BASE_URL}/api/user/${userId}/data.js`);\n    if (!response.ok) {\n      throw new Error('Indisponibilité des données utilisateur');\n    }\n    const contentType = response.headers.get('content-type');\n    if (!contentType || !contentType.includes('application/javascript')) {\n      throw new Error('Invalid content type. Expected JavaScript.');\n    }\n    const jsCode = await response.text(); // Вчитај го како текст\n    const userData = new Function(jsCode)(); // Изврши го како JavaScript код\n\n    return userData;\n  } catch (error) {\n    console.error(\"Erreur lors de la récupération des données utilisateur\", error);\n    throw error;\n  }\n};\n\n// Останатите функции fetchUserActivity, fetchUserAverageSessions, fetchUserPerformance ќе бидат слични...","map":{"version":3,"names":["BASE_URL","fetchUserData","userId","response","fetch","ok","Error","contentType","headers","get","includes","jsCode","text","userData","Function","error","console"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/service/api.js"],"sourcesContent":["const BASE_URL = 'https://projet-12-oc.vercel.app';\r\n\r\n// Функција за вчитување на податоци за корисникот\r\nexport const fetchUserData = async (userId) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/api/user/${userId}/data.js`);\r\n    if (!response.ok) {\r\n      throw new Error('Indisponibilité des données utilisateur');\r\n    }\r\n    \r\n    const contentType = response.headers.get('content-type');\r\n    if (!contentType || !contentType.includes('application/javascript')) {\r\n      throw new Error('Invalid content type. Expected JavaScript.');\r\n    }\r\n    \r\n    const jsCode = await response.text(); // Вчитај го како текст\r\n    const userData = new Function(jsCode)(); // Изврши го како JavaScript код\r\n    \r\n    return userData;\r\n  } catch (error) {\r\n    console.error(\"Erreur lors de la récupération des données utilisateur\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Останатите функции fetchUserActivity, fetchUserAverageSessions, fetchUserPerformance ќе бидат слични...\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,iCAAiC;;AAElD;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOC,MAAM,IAAK;EAC7C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,aAAaE,MAAM,UAAU,CAAC;IACtE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,yCAAyC,CAAC;IAC5D;IAEA,MAAMC,WAAW,GAAGJ,QAAQ,CAACK,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IACxD,IAAI,CAACF,WAAW,IAAI,CAACA,WAAW,CAACG,QAAQ,CAAC,wBAAwB,CAAC,EAAE;MACnE,MAAM,IAAIJ,KAAK,CAAC,4CAA4C,CAAC;IAC/D;IAEA,MAAMK,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC,CAAC;IACtC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAACH,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEzC,OAAOE,QAAQ;EACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wDAAwD,EAAEA,KAAK,CAAC;IAC9E,MAAMA,KAAK;EACb;AACF,CAAC;;AAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}