{"ast":null,"code":"const BASE_URL = 'https://raw.githubusercontent.com/your-username/your-repo/main';\n\n// Fetch за земање на основни податоци за корисниците\nconst fetchUserMainData = async () => {\n  const url = `${BASE_URL}/api/user/main-data.js`;\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('Неуспешно земање на основни податоци за корисниците');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw new Error(`Грешка при земање на основни податоци за корисниците: ${error.message}`);\n  }\n};\n\n// Fetch за земање на активности за корисниците\nconst fetchUserActivity = async userId => {\n  const url = `${BASE_URL}/api/user/${userId}/activity.js`;\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('Неуспешно земање на активности за корисникот');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw new Error(`Грешка при земање на активности за корисникот: ${error.message}`);\n  }\n};\n\n// Fetch за земање на просечни сесии за корисниците\nconst fetchUserAverageSessions = async userId => {\n  const url = `${BASE_URL}/api/user/${userId}/average-sessions.js`;\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('Неуспешно земање на просечни сесии за корисникот');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw new Error(`Грешка при земање на просечни сесии за корисникот: ${error.message}`);\n  }\n};\n\n// Fetch за земање на перформанси за корисниците\nconst fetchUserPerformance = async userId => {\n  const url = `${BASE_URL}/api/user/${userId}/performance.js`;\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('Неуспешно земање на перформанси за корисникот');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw new Error(`Грешка при земање на перформанси за корисникот: ${error.message}`);\n  }\n};\n\n// Пример на користење на функциите за земање на податоци за корисник\nconst userId = 12; // Заменете со саканиот userId\nfetchUserMainData().then(data => {\n  console.log('Основни податоци за корисниците:', data);\n  // Тука можете да ги обработите податоците како што е потребно\n}).catch(error => {\n  console.error('Грешка:', error.message);\n});\nfetchUserActivity(userId).then(data => {\n  console.log('Активности за корисникот:', data);\n  // Тука можете да ги обработите податоците како што е потребно\n}).catch(error => {\n  console.error('Грешка:', error.message);\n});\nfetchUserAverageSessions(userId).then(data => {\n  console.log('Просечни сесии за корисникот:', data);\n  // Тука можете да ги обработите податоците како што е потребно\n}).catch(error => {\n  console.error('Грешка:', error.message);\n});\nfetchUserPerformance(userId).then(data => {\n  console.log('Перформанси за корисникот:', data);\n  // Тука можете да ги обработите податоците како што е потребно\n}).catch(error => {\n  console.error('Грешка:', error.message);\n});","map":{"version":3,"names":["BASE_URL","fetchUserMainData","url","response","fetch","ok","Error","data","json","error","message","fetchUserActivity","userId","fetchUserAverageSessions","fetchUserPerformance","then","console","log","catch"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/service/api.js"],"sourcesContent":["const BASE_URL = 'https://raw.githubusercontent.com/your-username/your-repo/main';\r\n\r\n// Fetch за земање на основни податоци за корисниците\r\nconst fetchUserMainData = async () => {\r\n    const url = `${BASE_URL}/api/user/main-data.js`;\r\n    try {\r\n        const response = await fetch(url);\r\n        if (!response.ok) {\r\n            throw new Error('Неуспешно земање на основни податоци за корисниците');\r\n        }\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        throw new Error(`Грешка при земање на основни податоци за корисниците: ${error.message}`);\r\n    }\r\n};\r\n\r\n// Fetch за земање на активности за корисниците\r\nconst fetchUserActivity = async (userId) => {\r\n    const url = `${BASE_URL}/api/user/${userId}/activity.js`;\r\n    try {\r\n        const response = await fetch(url);\r\n        if (!response.ok) {\r\n            throw new Error('Неуспешно земање на активности за корисникот');\r\n        }\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        throw new Error(`Грешка при земање на активности за корисникот: ${error.message}`);\r\n    }\r\n};\r\n\r\n// Fetch за земање на просечни сесии за корисниците\r\nconst fetchUserAverageSessions = async (userId) => {\r\n    const url = `${BASE_URL}/api/user/${userId}/average-sessions.js`;\r\n    try {\r\n        const response = await fetch(url);\r\n        if (!response.ok) {\r\n            throw new Error('Неуспешно земање на просечни сесии за корисникот');\r\n        }\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        throw new Error(`Грешка при земање на просечни сесии за корисникот: ${error.message}`);\r\n    }\r\n};\r\n\r\n// Fetch за земање на перформанси за корисниците\r\nconst fetchUserPerformance = async (userId) => {\r\n    const url = `${BASE_URL}/api/user/${userId}/performance.js`;\r\n    try {\r\n        const response = await fetch(url);\r\n        if (!response.ok) {\r\n            throw new Error('Неуспешно земање на перформанси за корисникот');\r\n        }\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        throw new Error(`Грешка при земање на перформанси за корисникот: ${error.message}`);\r\n    }\r\n};\r\n\r\n// Пример на користење на функциите за земање на податоци за корисник\r\nconst userId = 12; // Заменете со саканиот userId\r\nfetchUserMainData()\r\n    .then(data => {\r\n        console.log('Основни податоци за корисниците:', data);\r\n        // Тука можете да ги обработите податоците како што е потребно\r\n    })\r\n    .catch(error => {\r\n        console.error('Грешка:', error.message);\r\n    });\r\n\r\nfetchUserActivity(userId)\r\n    .then(data => {\r\n        console.log('Активности за корисникот:', data);\r\n        // Тука можете да ги обработите податоците како што е потребно\r\n    })\r\n    .catch(error => {\r\n        console.error('Грешка:', error.message);\r\n    });\r\n\r\nfetchUserAverageSessions(userId)\r\n    .then(data => {\r\n        console.log('Просечни сесии за корисникот:', data);\r\n        // Тука можете да ги обработите податоците како што е потребно\r\n    })\r\n    .catch(error => {\r\n        console.error('Грешка:', error.message);\r\n    });\r\n\r\nfetchUserPerformance(userId)\r\n    .then(data => {\r\n        console.log('Перформанси за корисникот:', data);\r\n        // Тука можете да ги обработите податоците како што е потребно\r\n    })\r\n    .catch(error => {\r\n        console.error('Грешка:', error.message);\r\n    });\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}