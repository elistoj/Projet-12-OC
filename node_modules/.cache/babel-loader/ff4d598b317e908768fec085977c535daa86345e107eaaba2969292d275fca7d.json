{"ast":null,"code":"import { mockedUserData, mockedUserActivity, mockedUserAverageSessions, mockedUserPerformance } from './mockData';\nconst BASE_URL = 'http://localhost:3000/user';\nasync function checkResponse(response) {\n  if (!response.ok) {\n    const errorText = await response.text();\n    throw new Error(`Network response was not ok. Status: ${response.status}. Message: ${errorText}`);\n  }\n  return response.json();\n}\nexport async function fetchUserData(userId) {\n  try {\n    const response = await fetch(`${BASE_URL}/${userId}`);\n    const userData = await checkResponse(response);\n    return mapUserData(userData.data);\n  } catch (error) {\n    console.warn('Using mocked user data due to fetch error.');\n    return mapUserData(mockedUserData);\n  }\n}\nexport async function fetchUserActivity(userId) {\n  try {\n    const response = await fetch(`${BASE_URL}/${userId}/activity`);\n    const userActivity = await checkResponse(response);\n    return mapUserActivity(userActivity.data);\n  } catch (error) {\n    console.warn('Using mocked user activity data due to fetch error.');\n    return mapUserActivity(mockedUserActivity);\n  }\n}\nexport async function fetchUserAverageSessions(userId) {\n  try {\n    const response = await fetch(`${BASE_URL}/${userId}/average-sessions`);\n    const userAverageSessions = await checkResponse(response);\n    return mapUserAverageSessions(userAverageSessions.data);\n  } catch (error) {\n    console.warn('Using mocked user average sessions data due to fetch error.');\n    return mapUserAverageSessions(mockedUserAverageSessions);\n  }\n}\nexport async function fetchUserPerformance(userId) {\n  try {\n    const response = await fetch(`${BASE_URL}/${userId}/performance`);\n    const userPerformance = await checkResponse(response);\n    return mapUserPerformance(userPerformance.data);\n  } catch (error) {\n    console.warn('Using mocked user performance data due to fetch error.');\n    return mapUserPerformance(mockedUserPerformance);\n  }\n}\nfunction mapUserData(userData) {\n  var _userData$TodayScore, _userData$userInfos$f, _userData$userInfos, _userData$userInfos$l, _userData$userInfos2, _userData$keyData$cal, _userData$keyData, _userData$keyData$pro, _userData$keyData2, _userData$keyData$car, _userData$keyData3, _userData$keyData$lip, _userData$keyData4;\n  const scoreToUse = userData.score !== undefined ? userData.score : (_userData$TodayScore = userData.TodayScore) !== null && _userData$TodayScore !== void 0 ? _userData$TodayScore : 0;\n  return {\n    id: userData.id,\n    userInfos: {\n      firstName: (_userData$userInfos$f = (_userData$userInfos = userData.userInfos) === null || _userData$userInfos === void 0 ? void 0 : _userData$userInfos.firstName) !== null && _userData$userInfos$f !== void 0 ? _userData$userInfos$f : '',\n      lastName: (_userData$userInfos$l = (_userData$userInfos2 = userData.userInfos) === null || _userData$userInfos2 === void 0 ? void 0 : _userData$userInfos2.lastName) !== null && _userData$userInfos$l !== void 0 ? _userData$userInfos$l : ''\n    },\n    keyData: {\n      calorieCount: (_userData$keyData$cal = (_userData$keyData = userData.keyData) === null || _userData$keyData === void 0 ? void 0 : _userData$keyData.calorieCount) !== null && _userData$keyData$cal !== void 0 ? _userData$keyData$cal : 0,\n      proteinCount: (_userData$keyData$pro = (_userData$keyData2 = userData.keyData) === null || _userData$keyData2 === void 0 ? void 0 : _userData$keyData2.proteinCount) !== null && _userData$keyData$pro !== void 0 ? _userData$keyData$pro : 0,\n      carbohydrateCount: (_userData$keyData$car = (_userData$keyData3 = userData.keyData) === null || _userData$keyData3 === void 0 ? void 0 : _userData$keyData3.carbohydrateCount) !== null && _userData$keyData$car !== void 0 ? _userData$keyData$car : 0,\n      lipidCount: (_userData$keyData$lip = (_userData$keyData4 = userData.keyData) === null || _userData$keyData4 === void 0 ? void 0 : _userData$keyData4.lipidCount) !== null && _userData$keyData$lip !== void 0 ? _userData$keyData$lip : 0\n    },\n    score: scoreToUse\n  };\n}\nfunction mapUserActivity(userActivity) {\n  if (!userActivity || !Array.isArray(userActivity.sessions)) {\n    return {\n      userId: '',\n      sessions: []\n    };\n  }\n  return {\n    userId: userActivity.userId,\n    sessions: userActivity.sessions.map(session => {\n      var _session$day, _session$kilogram, _session$calories;\n      return {\n        day: (_session$day = session.day) !== null && _session$day !== void 0 ? _session$day : '',\n        kilogram: (_session$kilogram = session.kilogram) !== null && _session$kilogram !== void 0 ? _session$kilogram : 0,\n        calories: (_session$calories = session.calories) !== null && _session$calories !== void 0 ? _session$calories : 0\n      };\n    })\n  };\n}\nfunction mapUserAverageSessions(userAverageSessions) {\n  if (!userAverageSessions || !Array.isArray(userAverageSessions.sessions)) {\n    return {\n      userId: '',\n      sessions: []\n    };\n  }\n  return {\n    userId: userAverageSessions.userId,\n    sessions: userAverageSessions.sessions.map(session => {\n      var _session$day2, _session$sessionLengt;\n      return {\n        day: (_session$day2 = session.day) !== null && _session$day2 !== void 0 ? _session$day2 : '',\n        sessionLength: (_session$sessionLengt = session.sessionLength) !== null && _session$sessionLengt !== void 0 ? _session$sessionLengt : 0\n      };\n    })\n  };\n}\nfunction mapUserPerformance(userPerformance) {\n  if (!userPerformance || !Array.isArray(userPerformance.data)) {\n    return {\n      userId: '',\n      data: []\n    };\n  }\n  return {\n    userId: userPerformance.userId,\n    data: userPerformance.data.map(item => {\n      var _item$kind, _item$value;\n      return {\n        kind: (_item$kind = item.kind) !== null && _item$kind !== void 0 ? _item$kind : '',\n        value: (_item$value = item.value) !== null && _item$value !== void 0 ? _item$value : 0\n      };\n    })\n  };\n}","map":{"version":3,"names":["mockedUserData","mockedUserActivity","mockedUserAverageSessions","mockedUserPerformance","BASE_URL","checkResponse","response","ok","errorText","text","Error","status","json","fetchUserData","userId","fetch","userData","mapUserData","data","error","console","warn","fetchUserActivity","userActivity","mapUserActivity","fetchUserAverageSessions","userAverageSessions","mapUserAverageSessions","fetchUserPerformance","userPerformance","mapUserPerformance","_userData$TodayScore","_userData$userInfos$f","_userData$userInfos","_userData$userInfos$l","_userData$userInfos2","_userData$keyData$cal","_userData$keyData","_userData$keyData$pro","_userData$keyData2","_userData$keyData$car","_userData$keyData3","_userData$keyData$lip","_userData$keyData4","scoreToUse","score","undefined","TodayScore","id","userInfos","firstName","lastName","keyData","calorieCount","proteinCount","carbohydrateCount","lipidCount","Array","isArray","sessions","map","session","_session$day","_session$kilogram","_session$calories","day","kilogram","calories","_session$day2","_session$sessionLengt","sessionLength","item","_item$kind","_item$value","kind","value"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/service/api.js"],"sourcesContent":["import { mockedUserData, mockedUserActivity, mockedUserAverageSessions, mockedUserPerformance } from './mockData';\r\n\r\nconst BASE_URL = 'http://localhost:3000/user';\r\n\r\nasync function checkResponse(response) {\r\n  if (!response.ok) {\r\n    const errorText = await response.text();\r\n    throw new Error(`Network response was not ok. Status: ${response.status}. Message: ${errorText}`);\r\n  }\r\n  return response.json();\r\n}\r\n\r\nexport async function fetchUserData(userId) {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/${userId}`);\r\n    const userData = await checkResponse(response);\r\n    return mapUserData(userData.data);  \r\n  } catch (error) {\r\n    console.warn('Using mocked user data due to fetch error.');\r\n    return mapUserData(mockedUserData);\r\n  }\r\n}\r\n\r\nexport async function fetchUserActivity(userId) {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/${userId}/activity`);\r\n    const userActivity = await checkResponse(response);\r\n    return mapUserActivity(userActivity.data);\r\n  } catch (error) {\r\n    console.warn('Using mocked user activity data due to fetch error.');\r\n    return mapUserActivity(mockedUserActivity);\r\n  }\r\n}\r\n\r\nexport async function fetchUserAverageSessions(userId) {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/${userId}/average-sessions`);\r\n    const userAverageSessions = await checkResponse(response);\r\n    return mapUserAverageSessions(userAverageSessions.data);\r\n  } catch (error) {\r\n    console.warn('Using mocked user average sessions data due to fetch error.');\r\n    return mapUserAverageSessions(mockedUserAverageSessions);\r\n  }\r\n}\r\n\r\nexport async function fetchUserPerformance(userId) {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/${userId}/performance`);\r\n    const userPerformance = await checkResponse(response);\r\n    return mapUserPerformance(userPerformance.data);\r\n  } catch (error) {\r\n    console.warn('Using mocked user performance data due to fetch error.');\r\n    return mapUserPerformance(mockedUserPerformance);\r\n  }\r\n}\r\n\r\nfunction mapUserData(userData) {\r\n  const scoreToUse = userData.score !== undefined ? userData.score : userData.TodayScore ?? 0;\r\n\r\n  return {\r\n    id: userData.id,\r\n    userInfos: {\r\n      firstName: userData.userInfos?.firstName ?? '',\r\n      lastName: userData.userInfos?.lastName ?? '',\r\n    },\r\n    keyData: {\r\n      calorieCount: userData.keyData?.calorieCount ?? 0,\r\n      proteinCount: userData.keyData?.proteinCount ?? 0,\r\n      carbohydrateCount: userData.keyData?.carbohydrateCount ?? 0,\r\n      lipidCount: userData.keyData?.lipidCount ?? 0,\r\n    },\r\n    score: scoreToUse,\r\n  };\r\n}\r\n\r\nfunction mapUserActivity(userActivity) {\r\n  if (!userActivity || !Array.isArray(userActivity.sessions)) {\r\n    return { userId: '', sessions: [] };\r\n  }\r\n\r\n  return {\r\n    userId: userActivity.userId,\r\n    sessions: userActivity.sessions.map(session => ({\r\n      day: session.day ?? '',\r\n      kilogram: session.kilogram ?? 0,\r\n      calories: session.calories ?? 0,\r\n    })),\r\n  };\r\n}\r\n\r\nfunction mapUserAverageSessions(userAverageSessions) {\r\n  if (!userAverageSessions || !Array.isArray(userAverageSessions.sessions)) {\r\n    return { userId: '', sessions: [] };\r\n  }\r\n\r\n  return {\r\n    userId: userAverageSessions.userId,\r\n    sessions: userAverageSessions.sessions.map(session => ({\r\n      day: session.day ?? '',\r\n      sessionLength: session.sessionLength ?? 0,\r\n    })),\r\n  };\r\n}\r\n\r\nfunction mapUserPerformance(userPerformance) {\r\n  if (!userPerformance || !Array.isArray(userPerformance.data)) {\r\n    return { userId: '', data: [] };\r\n  }\r\n\r\n  return {\r\n    userId: userPerformance.userId,\r\n    data: userPerformance.data.map(item => ({\r\n      kind: item.kind ?? '',\r\n      value: item.value ?? 0,\r\n    })),\r\n  };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}