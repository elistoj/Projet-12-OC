{"ast":null,"code":"const BASE_URL = 'https://projet-12-o939grqns-elis-projects-d6a7030e.vercel.app/';\n\n// Пример за автентикација со примерен токен (token)\nconst authToken = 'ваш_токен';\n\n// Функција за вчитување на податоци за корисникот\nexport const fetchUserData = async userId => {\n  try {\n    const response = await fetch(`${BASE_URL}/api/user/${userId}/data.js`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Indisponibilité des données utilisateur');\n    }\n    const text = await response.text();\n    const userData = new Function(text)();\n    return userData;\n  } catch (error) {\n    console.error(\"Erreur lors de la récupération des données utilisateur\", error);\n    throw error;\n  }\n};\n\n// Функција за вчитување на податоци за активност на корисникот\nexport const fetchUserActivity = async userId => {\n  try {\n    const response = await fetch(`${BASE_URL}/api/user/${userId}/activity.js`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Indisponibilité des données d\\'activité utilisateur');\n    }\n    const text = await response.text();\n    const userActivity = new Function(text)();\n    return userActivity;\n  } catch (error) {\n    console.error(\"Erreur lors de la récupération des données d'activité utilisateur\", error);\n    throw error;\n  }\n};\n\n// Функција за вчитување на податоци за просечни сесии на корисникот\nexport const fetchUserAverageSessions = async userId => {\n  try {\n    const response = await fetch(`${BASE_URL}/api/user/${userId}/average-sessions.js`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Indisponibilité des sessions moyennes utilisateur');\n    }\n    const text = await response.text();\n    const averageSessions = new Function(text)();\n    return averageSessions;\n  } catch (error) {\n    console.error(\"Erreur lors de la récupération des sessions moyennes utilisateur\", error);\n    throw error;\n  }\n};\n\n// Функција за вчитување на податоци за перформанси на корисникот\nexport const fetchUserPerformance = async userId => {\n  try {\n    const response = await fetch(`${BASE_URL}/api/user/${userId}/performance.js`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Indisponibilité des données de performance utilisateur');\n    }\n    const text = await response.text();\n    const userPerformance = new Function(text)();\n    return userPerformance;\n  } catch (error) {\n    console.error(\"Erreur lors de la récupération des données de performance utilisateur\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["BASE_URL","authToken","fetchUserData","userId","response","fetch","headers","Authorization","ok","Error","text","userData","Function","error","console","fetchUserActivity","userActivity","fetchUserAverageSessions","averageSessions","fetchUserPerformance","userPerformance"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/service/api.js"],"sourcesContent":["const BASE_URL = 'https://projet-12-o939grqns-elis-projects-d6a7030e.vercel.app/';\r\n\r\n// Пример за автентикација со примерен токен (token)\r\nconst authToken = 'ваш_токен';\r\n\r\n// Функција за вчитување на податоци за корисникот\r\nexport const fetchUserData = async (userId) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/api/user/${userId}/data.js`, {\r\n      headers: {\r\n        Authorization: `Bearer ${authToken}`\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Indisponibilité des données utilisateur');\r\n    }\r\n\r\n    const text = await response.text();\r\n    const userData = new Function(text)();\r\n\r\n    return userData;\r\n  } catch (error) {\r\n    console.error(\"Erreur lors de la récupération des données utilisateur\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Функција за вчитување на податоци за активност на корисникот\r\nexport const fetchUserActivity = async (userId) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/api/user/${userId}/activity.js`, {\r\n      headers: {\r\n        Authorization: `Bearer ${authToken}`\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Indisponibilité des données d\\'activité utilisateur');\r\n    }\r\n\r\n    const text = await response.text();\r\n    const userActivity = new Function(text)();\r\n\r\n    return userActivity;\r\n  } catch (error) {\r\n    console.error(\"Erreur lors de la récupération des données d'activité utilisateur\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Функција за вчитување на податоци за просечни сесии на корисникот\r\nexport const fetchUserAverageSessions = async (userId) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/api/user/${userId}/average-sessions.js`, {\r\n      headers: {\r\n        Authorization: `Bearer ${authToken}`\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Indisponibilité des sessions moyennes utilisateur');\r\n    }\r\n\r\n    const text = await response.text();\r\n    const averageSessions = new Function(text)();\r\n\r\n    return averageSessions;\r\n  } catch (error) {\r\n    console.error(\"Erreur lors de la récupération des sessions moyennes utilisateur\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Функција за вчитување на податоци за перформанси на корисникот\r\nexport const fetchUserPerformance = async (userId) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/api/user/${userId}/performance.js`, {\r\n      headers: {\r\n        Authorization: `Bearer ${authToken}`\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Indisponibilité des données de performance utilisateur');\r\n    }\r\n\r\n    const text = await response.text();\r\n    const userPerformance = new Function(text)();\r\n\r\n    return userPerformance;\r\n  } catch (error) {\r\n    console.error(\"Erreur lors de la récupération des données de performance utilisateur\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,gEAAgE;;AAEjF;AACA,MAAMC,SAAS,GAAG,WAAW;;AAE7B;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOC,MAAM,IAAK;EAC7C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,aAAaG,MAAM,UAAU,EAAE;MACrEG,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUN,SAAS;MACpC;IACF,CAAC,CAAC;IAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,yCAAyC,CAAC;IAC5D;IAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAACF,IAAI,CAAC,CAAC,CAAC;IAErC,OAAOC,QAAQ;EACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wDAAwD,EAAEA,KAAK,CAAC;IAC9E,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,iBAAiB,GAAG,MAAOZ,MAAM,IAAK;EACjD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,aAAaG,MAAM,cAAc,EAAE;MACzEG,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUN,SAAS;MACpC;IACF,CAAC,CAAC;IAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,qDAAqD,CAAC;IACxE;IAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC,MAAMM,YAAY,GAAG,IAAIJ,QAAQ,CAACF,IAAI,CAAC,CAAC,CAAC;IAEzC,OAAOM,YAAY;EACrB,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mEAAmE,EAAEA,KAAK,CAAC;IACzF,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,wBAAwB,GAAG,MAAOd,MAAM,IAAK;EACxD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,aAAaG,MAAM,sBAAsB,EAAE;MACjFG,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUN,SAAS;MACpC;IACF,CAAC,CAAC;IAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,mDAAmD,CAAC;IACtE;IAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC,MAAMQ,eAAe,GAAG,IAAIN,QAAQ,CAACF,IAAI,CAAC,CAAC,CAAC;IAE5C,OAAOQ,eAAe;EACxB,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kEAAkE,EAAEA,KAAK,CAAC;IACxF,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,oBAAoB,GAAG,MAAOhB,MAAM,IAAK;EACpD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,aAAaG,MAAM,iBAAiB,EAAE;MAC5EG,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUN,SAAS;MACpC;IACF,CAAC,CAAC;IAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,wDAAwD,CAAC;IAC3E;IAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC,MAAMU,eAAe,GAAG,IAAIR,QAAQ,CAACF,IAAI,CAAC,CAAC,CAAC;IAE5C,OAAOU,eAAe;EACxB,CAAC,CAAC,OAAOP,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uEAAuE,EAAEA,KAAK,CAAC;IAC7F,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}