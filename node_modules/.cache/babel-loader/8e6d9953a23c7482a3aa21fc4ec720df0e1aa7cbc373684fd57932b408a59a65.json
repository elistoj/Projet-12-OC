{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elist\\\\OneDrive\\\\Documents\\\\GitHub\\\\Projet-12-OC\\\\src\\\\Page\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Profile.css';\nimport ActivityChart from '../components/charts/ActivityChart/ActivityChart';\nimport AverageSessionsChart from '../components/charts/AverageSessionsChart/AverageSessionsChart';\nimport NutritionalInfo from '../components/charts/NutritionalInfo/NutritionalInfo';\nimport RadarChart from '../components/charts/PerformanceChart/RadarChart';\nimport ScoreChart from '../components/charts/ScoreChart/ScoreChart';\n\n// Mock data for fallback\nimport mockData from '../mockData.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = ({\n  userId\n}) => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [userActivity, setUserActivity] = useState(null);\n  const [userAverageSessions, setUserAverageSessions] = useState(null);\n  const [userPerformance, setUserPerformance] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const responseUserData = await fetch(`/api/users/${userId}`);\n        if (!responseUserData.ok) {\n          throw new Error(`HTTP error! Status: ${responseUserData.status}`);\n        }\n        const userDataJson = await responseUserData.json();\n\n        // Fetch other necessary data\n        const responseUserActivity = await fetch(`/api/users/${userId}/activity`);\n        if (!responseUserActivity.ok) {\n          throw new Error(`HTTP error! Status: ${responseUserActivity.status}`);\n        }\n        const userActivityJson = await responseUserActivity.json();\n        const responseUserAverageSessions = await fetch(`/api/users/${userId}/average-sessions`);\n        if (!responseUserAverageSessions.ok) {\n          throw new Error(`HTTP error! Status: ${responseUserAverageSessions.status}`);\n        }\n        const userAverageSessionsJson = await responseUserAverageSessions.json();\n        const responseUserPerformance = await fetch(`/api/users/${userId}/performance`);\n        if (!responseUserPerformance.ok) {\n          throw new Error(`HTTP error! Status: ${responseUserPerformance.status}`);\n        }\n        const userPerformanceJson = await responseUserPerformance.json();\n\n        // Set state with fetched data\n        setUserData(userDataJson);\n        setUserActivity(userActivityJson);\n        setUserAverageSessions(userAverageSessionsJson);\n        setUserPerformance(userPerformanceJson);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setLoading(false);\n\n        // Handle errors gracefully\n        // For demo purposes, fallback to mock data\n        setUserData(mockData.USER_MAIN_DATA.find(user => user.id === parseInt(userId)));\n        setUserActivity(mockData.USER_ACTIVITY.find(activity => activity.userId === parseInt(userId)));\n        setUserAverageSessions(mockData.USER_AVERAGE_SESSIONS.find(session => session.userId === parseInt(userId)));\n        setUserPerformance(mockData.USER_PERFORMANCE.find(performance => performance.userId === parseInt(userId)));\n      }\n    };\n    fetchData();\n  }, [userId]);\n  if (loading || !userData || !userActivity || !userAverageSessions || !userPerformance) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Destructure userInfos only if it exists\n  const {\n    firstName\n  } = userData.userInfos || {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-header-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Hello \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"user-name\",\n            children: firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Congratulations! You smashed your goals yesterday \\uD83D\\uDC4F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-activity\",\n        children: /*#__PURE__*/_jsxDEV(ActivityChart, {\n          data: userActivity.sessions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trois-sections\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: /*#__PURE__*/_jsxDEV(AverageSessionsChart, {\n            data: userAverageSessions.sessions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: /*#__PURE__*/_jsxDEV(RadarChart, {\n            data: userPerformance.data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: /*#__PURE__*/_jsxDEV(ScoreChart, {\n            data: {\n              score: userData.score\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sections\",\n      children: /*#__PURE__*/_jsxDEV(NutritionalInfo, {\n        calorieCount: userData.keyData.calorieCount,\n        proteinCount: userData.keyData.proteinCount,\n        carbohydrateCount: userData.keyData.carbohydrateCount,\n        lipidCount: userData.keyData.lipidCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"azwH9P+kvzcqqydt8OiE3Ly7GkM=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","ActivityChart","AverageSessionsChart","NutritionalInfo","RadarChart","ScoreChart","mockData","jsxDEV","_jsxDEV","Profile","userId","_s","userData","setUserData","userActivity","setUserActivity","userAverageSessions","setUserAverageSessions","userPerformance","setUserPerformance","loading","setLoading","fetchData","responseUserData","fetch","ok","Error","status","userDataJson","json","responseUserActivity","userActivityJson","responseUserAverageSessions","userAverageSessionsJson","responseUserPerformance","userPerformanceJson","error","console","USER_MAIN_DATA","find","user","id","parseInt","USER_ACTIVITY","activity","USER_AVERAGE_SESSIONS","session","USER_PERFORMANCE","performance","children","fileName","_jsxFileName","lineNumber","columnNumber","firstName","userInfos","className","data","sessions","score","calorieCount","keyData","proteinCount","carbohydrateCount","lipidCount","_c","$RefreshReg$"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/Page/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Profile.css';\r\nimport ActivityChart from '../components/charts/ActivityChart/ActivityChart';\r\nimport AverageSessionsChart from '../components/charts/AverageSessionsChart/AverageSessionsChart';\r\nimport NutritionalInfo from '../components/charts/NutritionalInfo/NutritionalInfo';\r\nimport RadarChart from '../components/charts/PerformanceChart/RadarChart';\r\nimport ScoreChart from '../components/charts/ScoreChart/ScoreChart';\r\n\r\n// Mock data for fallback\r\nimport mockData from '../mockData.json';\r\n\r\nconst Profile = ({ userId }) => {\r\n  const [userData, setUserData] = useState(null);\r\n  const [userActivity, setUserActivity] = useState(null);\r\n  const [userAverageSessions, setUserAverageSessions] = useState(null);\r\n  const [userPerformance, setUserPerformance] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n\r\n        const responseUserData = await fetch(`/api/users/${userId}`);\r\n\r\n        if (!responseUserData.ok) {\r\n          throw new Error(`HTTP error! Status: ${responseUserData.status}`);\r\n        }\r\n\r\n        const userDataJson = await responseUserData.json();\r\n\r\n        // Fetch other necessary data\r\n        const responseUserActivity = await fetch(`/api/users/${userId}/activity`);\r\n        if (!responseUserActivity.ok) {\r\n          throw new Error(`HTTP error! Status: ${responseUserActivity.status}`);\r\n        }\r\n        const userActivityJson = await responseUserActivity.json();\r\n\r\n        const responseUserAverageSessions = await fetch(`/api/users/${userId}/average-sessions`);\r\n        if (!responseUserAverageSessions.ok) {\r\n          throw new Error(`HTTP error! Status: ${responseUserAverageSessions.status}`);\r\n        }\r\n        const userAverageSessionsJson = await responseUserAverageSessions.json();\r\n\r\n        const responseUserPerformance = await fetch(`/api/users/${userId}/performance`);\r\n        if (!responseUserPerformance.ok) {\r\n          throw new Error(`HTTP error! Status: ${responseUserPerformance.status}`);\r\n        }\r\n        const userPerformanceJson = await responseUserPerformance.json();\r\n\r\n        // Set state with fetched data\r\n        setUserData(userDataJson);\r\n        setUserActivity(userActivityJson);\r\n        setUserAverageSessions(userAverageSessionsJson);\r\n        setUserPerformance(userPerformanceJson);\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setLoading(false);\r\n\r\n        // Handle errors gracefully\r\n        // For demo purposes, fallback to mock data\r\n        setUserData(mockData.USER_MAIN_DATA.find(user => user.id === parseInt(userId)));\r\n        setUserActivity(mockData.USER_ACTIVITY.find(activity => activity.userId === parseInt(userId)));\r\n        setUserAverageSessions(mockData.USER_AVERAGE_SESSIONS.find(session => session.userId === parseInt(userId)));\r\n        setUserPerformance(mockData.USER_PERFORMANCE.find(performance => performance.userId === parseInt(userId)));\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [userId]);\r\n\r\n  if (loading || !userData || !userActivity || !userAverageSessions || !userPerformance) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // Destructure userInfos only if it exists\r\n  const { firstName } = userData.userInfos || {};\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <div className=\"profile-header-section\">\r\n        <div className=\"profile-header\">\r\n          <h1>Hello <span className=\"user-name\">{firstName}</span></h1>\r\n          <p>Congratulations! You smashed your goals yesterday 👏</p>\r\n        </div>\r\n        <div className=\"section-activity\">\r\n          <ActivityChart data={userActivity.sessions} />\r\n        </div>\r\n        <div className=\"trois-sections\">\r\n          <div className=\"section\">\r\n            <AverageSessionsChart data={userAverageSessions.sessions} />\r\n          </div>\r\n          <div className=\"section\">\r\n            <RadarChart data={userPerformance.data} />\r\n          </div>\r\n          <div className=\"section\">\r\n            <ScoreChart data={{ score: userData.score }} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"sections\">\r\n        <NutritionalInfo\r\n          calorieCount={userData.keyData.calorieCount}\r\n          proteinCount={userData.keyData.proteinCount}\r\n          carbohydrateCount={userData.keyData.carbohydrateCount}\r\n          lipidCount={userData.keyData.lipidCount}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}