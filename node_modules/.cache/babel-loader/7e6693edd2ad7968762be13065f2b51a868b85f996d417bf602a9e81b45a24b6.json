{"ast":null,"code":"const fetchUserDataFromGitHub = async () => {\n  try {\n    // Земање на основни податоци за корисниците\n    const mainDataResponse = await fetch('http://localhost:3000');\n    if (!mainDataResponse.ok) {\n      throw new Error(`Failed to fetch main data: ${mainDataResponse.status}`);\n    }\n    const mainData = await mainDataResponse.text(); // Користиме .text() за читање на чист текст\n\n    // Земање на активности на корисниците, просечни сесии и перформанси - истото се прави како за mainData\n\n    return {\n      mainData\n      // activityData: ..., // додадете ги и другите податоци како што треба\n    };\n  } catch (error) {\n    throw new Error(`Error fetching data from GitHub: ${error.message}`);\n  }\n};\nfetchUserDataFromGitHub().then(data => {\n  console.log('Fetched Data:', data);\n  // Овде може да ги користите податоците како што ви требаат\n}).catch(error => {\n  console.error('Error fetching data from GitHub:', error.message);\n});","map":{"version":3,"names":["fetchUserDataFromGitHub","mainDataResponse","fetch","ok","Error","status","mainData","text","error","message","then","data","console","log","catch"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/service/api.js"],"sourcesContent":["const fetchUserDataFromGitHub = async () => {\r\n  try {\r\n    // Земање на основни податоци за корисниците\r\n    const mainDataResponse = await fetch('http://localhost:3000');\r\n    if (!mainDataResponse.ok) {\r\n      throw new Error(`Failed to fetch main data: ${mainDataResponse.status}`);\r\n    }\r\n    const mainData = await mainDataResponse.text(); // Користиме .text() за читање на чист текст\r\n\r\n    // Земање на активности на корисниците, просечни сесии и перформанси - истото се прави како за mainData\r\n\r\n    return {\r\n      mainData,\r\n      // activityData: ..., // додадете ги и другите податоци како што треба\r\n    };\r\n  } catch (error) {\r\n    throw new Error(`Error fetching data from GitHub: ${error.message}`);\r\n  }\r\n};\r\n\r\nfetchUserDataFromGitHub()\r\n  .then(data => {\r\n    console.log('Fetched Data:', data);\r\n    // Овде може да ги користите податоците како што ви требаат\r\n  })\r\n  .catch(error => {\r\n    console.error('Error fetching data from GitHub:', error.message);\r\n  });\r\n"],"mappings":"AAAA,MAAMA,uBAAuB,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IACF;IACA,MAAMC,gBAAgB,GAAG,MAAMC,KAAK,CAAC,uBAAuB,CAAC;IAC7D,IAAI,CAACD,gBAAgB,CAACE,EAAE,EAAE;MACxB,MAAM,IAAIC,KAAK,CAAC,8BAA8BH,gBAAgB,CAACI,MAAM,EAAE,CAAC;IAC1E;IACA,MAAMC,QAAQ,GAAG,MAAML,gBAAgB,CAACM,IAAI,CAAC,CAAC,CAAC,CAAC;;IAEhD;;IAEA,OAAO;MACLD;MACA;IACF,CAAC;EACH,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAM,IAAIJ,KAAK,CAAC,oCAAoCI,KAAK,CAACC,OAAO,EAAE,CAAC;EACtE;AACF,CAAC;AAEDT,uBAAuB,CAAC,CAAC,CACtBU,IAAI,CAACC,IAAI,IAAI;EACZC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAAC;EAClC;AACF,CAAC,CAAC,CACDG,KAAK,CAACN,KAAK,IAAI;EACdI,OAAO,CAACJ,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAACC,OAAO,CAAC;AAClE,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}