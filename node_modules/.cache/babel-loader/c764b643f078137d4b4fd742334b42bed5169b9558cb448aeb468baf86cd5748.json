{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./Profile.css';import VerticalNav from'../components/VerticalNav/VerticalNav';import ActivityChart from'../components/charts/ActivityChart/ActivityChart';import AverageSessionsChart from'../components/charts/AverageSessionsChart/AverageSessionsChart';import NutritionalInfo from'../components/charts/NutritionalInfo/NutritionalInfo';import RadarChart from'../components/charts/PerformanceChart/RadarChart';import ScoreChart from'../components/charts/ScoreChart/ScoreChart';import{fetchUserData as apiFetchUserData,fetchUserActivity as apiFetchUserActivity,fetchUserAverageSessions as apiFetchUserAverageSessions,fetchUserPerformance as apiFetchUserPerformance}from'../service/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Profile=()=>{const[userId,setUserId]=useState('18');const[userData,setUserData]=useState(null);const[userActivity,setUserActivity]=useState(null);const[userAverageSessions,setUserAverageSessions]=useState(null);const[userPerformance,setUserPerformance]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{const fetchData=async()=>{try{setLoading(true);const fetchedUserData=await apiFetchUserData(userId);const fetchedUserActivity=await apiFetchUserActivity(userId);const fetchedUserAverageSessions=await apiFetchUserAverageSessions(userId);const fetchedUserPerformance=await apiFetchUserPerformance(userId);setUserData(fetchedUserData);setUserActivity(fetchedUserActivity);setUserAverageSessions(fetchedUserAverageSessions);setUserPerformance(fetchedUserPerformance);setLoading(false);}catch(error){console.error('Error fetching data:',error);setLoading(false);}};fetchData();},[userId]);const handleUserChange=newUserId=>{setUserId(newUserId);};if(loading||!userData||!userActivity||!userAverageSessions||!userPerformance){return/*#__PURE__*/_jsx(\"div\",{children:\"Chargement...\"});}if(!userActivity.sessions||!userAverageSessions.sessions||!userPerformance.data){return/*#__PURE__*/_jsx(\"div\",{children:\"Donn\\xE9es non disponibles\"});}const{firstName}=userData.userInfos;return/*#__PURE__*/_jsxs(\"div\",{className:\"profile-container\",children:[/*#__PURE__*/_jsx(VerticalNav,{userId:userId,onUserChange:handleUserChange}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-header-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"profile-header\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Bonjour \",/*#__PURE__*/_jsx(\"span\",{className:\"user-name\",children:firstName})]}),/*#__PURE__*/_jsx(\"p\",{children:\"F\\xE9licitation ! Vous avez explos\\xE9 vos objectifs hier \\uD83D\\uDC4F\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"section-activity\",children:/*#__PURE__*/_jsx(ActivityChart,{data:userActivity.sessions})}),/*#__PURE__*/_jsxs(\"div\",{className:\"trois-sections\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"section\",children:/*#__PURE__*/_jsx(AverageSessionsChart,{data:userAverageSessions.sessions})}),/*#__PURE__*/_jsx(\"div\",{className:\"section\",children:/*#__PURE__*/_jsx(RadarChart,{data:userPerformance.data})}),/*#__PURE__*/_jsx(\"div\",{className:\"section\",children:/*#__PURE__*/_jsx(ScoreChart,{data:{score:userData.score||userData.TodayScore}})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"sections\",children:/*#__PURE__*/_jsx(NutritionalInfo,{calorieCount:userData.keyData.calorieCount,proteinCount:userData.keyData.proteinCount,carbohydrateCount:userData.keyData.carbohydrateCount,lipidCount:userData.keyData.lipidCount})})]});};export default Profile;","map":{"version":3,"names":["React","useState","useEffect","VerticalNav","ActivityChart","AverageSessionsChart","NutritionalInfo","RadarChart","ScoreChart","fetchUserData","apiFetchUserData","fetchUserActivity","apiFetchUserActivity","fetchUserAverageSessions","apiFetchUserAverageSessions","fetchUserPerformance","apiFetchUserPerformance","jsx","_jsx","jsxs","_jsxs","Profile","userId","setUserId","userData","setUserData","userActivity","setUserActivity","userAverageSessions","setUserAverageSessions","userPerformance","setUserPerformance","loading","setLoading","fetchData","fetchedUserData","fetchedUserActivity","fetchedUserAverageSessions","fetchedUserPerformance","error","console","handleUserChange","newUserId","children","sessions","data","firstName","userInfos","className","onUserChange","score","TodayScore","calorieCount","keyData","proteinCount","carbohydrateCount","lipidCount"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/Page/Profile.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport './Profile.css';\r\nimport VerticalNav from '../components/VerticalNav/VerticalNav';\r\nimport ActivityChart from '../components/charts/ActivityChart/ActivityChart';\r\nimport AverageSessionsChart from '../components/charts/AverageSessionsChart/AverageSessionsChart';\r\nimport NutritionalInfo from '../components/charts/NutritionalInfo/NutritionalInfo';\r\nimport RadarChart from '../components/charts/PerformanceChart/RadarChart';\r\nimport ScoreChart from '../components/charts/ScoreChart/ScoreChart';\r\nimport {\r\n  fetchUserData as apiFetchUserData,\r\n  fetchUserActivity as apiFetchUserActivity,\r\n  fetchUserAverageSessions as apiFetchUserAverageSessions,\r\n  fetchUserPerformance as apiFetchUserPerformance\r\n} from '../service/api';  \r\n\r\nconst Profile = () => {\r\n  const [userId, setUserId] = useState('18');\r\n  const [userData, setUserData] = useState(null);\r\n  const [userActivity, setUserActivity] = useState(null);\r\n  const [userAverageSessions, setUserAverageSessions] = useState(null);\r\n  const [userPerformance, setUserPerformance] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n\r\n        const fetchedUserData = await apiFetchUserData(userId);\r\n        const fetchedUserActivity = await apiFetchUserActivity(userId);\r\n        const fetchedUserAverageSessions = await apiFetchUserAverageSessions(userId);\r\n        const fetchedUserPerformance = await apiFetchUserPerformance(userId);\r\n\r\n        setUserData(fetchedUserData);\r\n        setUserActivity(fetchedUserActivity);\r\n        setUserAverageSessions(fetchedUserAverageSessions);\r\n        setUserPerformance(fetchedUserPerformance);\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [userId]);\r\n\r\n  const handleUserChange = (newUserId) => {\r\n    setUserId(newUserId);  \r\n  };\r\n\r\n  if (loading || !userData || !userActivity || !userAverageSessions || !userPerformance) {\r\n    return <div>Chargement...</div>;  \r\n  }\r\n\r\n  if (!userActivity.sessions || !userAverageSessions.sessions || !userPerformance.data) {\r\n    return <div>Donn√©es non disponibles</div>;  \r\n  }\r\n\r\n  const { firstName } = userData.userInfos;\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <VerticalNav userId={userId} onUserChange={handleUserChange} />  \r\n\r\n      <div className=\"profile-header-section\">\r\n        <div className=\"profile-header\">\r\n          <h1>Bonjour <span className=\"user-name\">{firstName}</span></h1>\r\n          <p>F√©licitation ! Vous avez explos√© vos objectifs hier üëè</p>\r\n        </div>\r\n        \r\n        <div className=\"section-activity\">\r\n          <ActivityChart data={userActivity.sessions} />\r\n        </div>\r\n\r\n        <div className=\"trois-sections\">\r\n          <div className=\"section\">\r\n            <AverageSessionsChart data={userAverageSessions.sessions} />\r\n          </div>\r\n\r\n          <div className=\"section\">\r\n            <RadarChart data={userPerformance.data} />\r\n          </div>\r\n\r\n          <div className=\"section\">\r\n            <ScoreChart data={{ score: userData.score || userData.TodayScore }} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"sections\">\r\n        <NutritionalInfo\r\n          calorieCount={userData.keyData.calorieCount}\r\n          proteinCount={userData.keyData.proteinCount}\r\n          carbohydrateCount={userData.keyData.carbohydrateCount}\r\n          lipidCount={userData.keyData.lipidCount}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}