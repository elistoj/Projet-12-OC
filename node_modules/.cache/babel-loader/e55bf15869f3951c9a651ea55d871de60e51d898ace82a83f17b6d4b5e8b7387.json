{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elist\\\\OneDrive\\\\Documents\\\\GitHub\\\\Projet-12-OC\\\\src\\\\components\\\\Profile\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchUserData, fetchUserActivity, fetchUserAverageSessions, fetchUserPerformance } from '../fetchFunctions/fetchFunctions';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = ({\n  userId\n}) => {\n  _s();\n  var _userActivity$userId;\n  const [userData, setUserData] = useState(null);\n  const [userActivity, setUserActivity] = useState(null);\n  const [userAverageSessions, setUserAverageSessions] = useState(null);\n  const [userPerformance, setUserPerformance] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const userDataResponse = await fetchUserData(userId);\n        setUserData(userDataResponse);\n        const userActivityResponse = await fetchUserActivity(userId);\n        setUserActivity(userActivityResponse);\n        const userAverageSessionsResponse = await fetchUserAverageSessions(userId);\n        setUserAverageSessions(userAverageSessionsResponse);\n        const userPerformanceResponse = await fetchUserPerformance(userId);\n        setUserPerformance(userPerformanceResponse);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        // Handle error states if needed\n      }\n    };\n    fetchData();\n  }, [userId]);\n  if (!userData || !userActivity || !userAverageSessions || !userPerformance) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Check if userActivity for userId exists and has sessions\n  const activityChartData = ((_userActivity$userId = userActivity[userId]) === null || _userActivity$userId === void 0 ? void 0 : _userActivity$userId.sessions.map(session => ({\n    day: session.day,\n    calories: session.calories\n  }))) || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: userData.userInfos.firstName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Age: \", userData.userInfos.age]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Activity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: activityChartData,\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"calories\",\n          stroke: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Average Sessions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(userAverageSessions[userId], null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Performance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(userPerformance[userId], null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"IATTRuvat0J+5uRQ2DfsgJtV43A=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","fetchUserData","fetchUserActivity","fetchUserAverageSessions","fetchUserPerformance","LineChart","Line","XAxis","YAxis","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","Profile","userId","_s","_userActivity$userId","userData","setUserData","userActivity","setUserActivity","userAverageSessions","setUserAverageSessions","userPerformance","setUserPerformance","fetchData","userDataResponse","userActivityResponse","userAverageSessionsResponse","userPerformanceResponse","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","activityChartData","sessions","map","session","day","calories","userInfos","firstName","age","width","height","data","dataKey","type","stroke","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/components/Profile/Profile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  fetchUserData,\r\n  fetchUserActivity,\r\n  fetchUserAverageSessions,\r\n  fetchUserPerformance,\r\n} from '../fetchFunctions/fetchFunctions';\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\nconst Profile = ({ userId }) => {\r\n  const [userData, setUserData] = useState(null);\r\n  const [userActivity, setUserActivity] = useState(null);\r\n  const [userAverageSessions, setUserAverageSessions] = useState(null);\r\n  const [userPerformance, setUserPerformance] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const userDataResponse = await fetchUserData(userId);\r\n        setUserData(userDataResponse);\r\n\r\n        const userActivityResponse = await fetchUserActivity(userId);\r\n        setUserActivity(userActivityResponse);\r\n\r\n        const userAverageSessionsResponse = await fetchUserAverageSessions(userId);\r\n        setUserAverageSessions(userAverageSessionsResponse);\r\n\r\n        const userPerformanceResponse = await fetchUserPerformance(userId);\r\n        setUserPerformance(userPerformanceResponse);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        // Handle error states if needed\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [userId]);\r\n\r\n  if (!userData || !userActivity || !userAverageSessions || !userPerformance) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // Check if userActivity for userId exists and has sessions\r\n  const activityChartData = userActivity[userId]?.sessions.map(session => ({\r\n    day: session.day,\r\n    calories: session.calories,\r\n  })) || [];\r\n\r\n  return (\r\n    <div>\r\n      <h1>{userData.userInfos.firstName}</h1>\r\n      <p>Age: {userData.userInfos.age}</p>\r\n\r\n      {/* Render Recharts LineChart for Activity */}\r\n      <h2>Activity</h2>\r\n      <ResponsiveContainer width=\"100%\" height={400}>\r\n        <LineChart data={activityChartData}>\r\n          <XAxis dataKey=\"day\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line type=\"monotone\" dataKey=\"calories\" stroke=\"#8884d8\" />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n\r\n      {/* Render Average Sessions */}\r\n      <h2>Average Sessions</h2>\r\n      <pre>{JSON.stringify(userAverageSessions[userId], null, 2)}</pre>\r\n\r\n      {/* Render Performance */}\r\n      <h2>Performance</h2>\r\n      <pre>{JSON.stringify(userPerformance[userId], null, 2)}</pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SACEC,aAAa,EACbC,iBAAiB,EACjBC,wBAAwB,EACxBC,oBAAoB,QACf,kCAAkC;AACzC,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,mBAAmB,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/F,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,oBAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACsB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EACpE,MAAM,CAACwB,eAAe,EAAEC,kBAAkB,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAE5DD,SAAS,CAAC,MAAM;IACd,MAAM2B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,gBAAgB,GAAG,MAAM1B,aAAa,CAACc,MAAM,CAAC;QACpDI,WAAW,CAACQ,gBAAgB,CAAC;QAE7B,MAAMC,oBAAoB,GAAG,MAAM1B,iBAAiB,CAACa,MAAM,CAAC;QAC5DM,eAAe,CAACO,oBAAoB,CAAC;QAErC,MAAMC,2BAA2B,GAAG,MAAM1B,wBAAwB,CAACY,MAAM,CAAC;QAC1EQ,sBAAsB,CAACM,2BAA2B,CAAC;QAEnD,MAAMC,uBAAuB,GAAG,MAAM1B,oBAAoB,CAACW,MAAM,CAAC;QAClEU,kBAAkB,CAACK,uBAAuB,CAAC;MAC7C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5C;MACF;IACF,CAAC;IAEDL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACX,MAAM,CAAC,CAAC;EAEZ,IAAI,CAACG,QAAQ,IAAI,CAACE,YAAY,IAAI,CAACE,mBAAmB,IAAI,CAACE,eAAe,EAAE;IAC1E,oBAAOX,OAAA;MAAAoB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;;EAEA;EACA,MAAMC,iBAAiB,GAAG,EAAArB,oBAAA,GAAAG,YAAY,CAACL,MAAM,CAAC,cAAAE,oBAAA,uBAApBA,oBAAA,CAAsBsB,QAAQ,CAACC,GAAG,CAACC,OAAO,KAAK;IACvEC,GAAG,EAAED,OAAO,CAACC,GAAG;IAChBC,QAAQ,EAAEF,OAAO,CAACE;EACpB,CAAC,CAAC,CAAC,KAAI,EAAE;EAET,oBACE9B,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAKf,QAAQ,CAAC0B,SAAS,CAACC;IAAS;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvCxB,OAAA;MAAAoB,QAAA,GAAG,OAAK,EAACf,QAAQ,CAAC0B,SAAS,CAACE,GAAG;IAAA;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGpCxB,OAAA;MAAAoB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBxB,OAAA,CAACF,mBAAmB;MAACoC,KAAK,EAAC,MAAM;MAACC,MAAM,EAAE,GAAI;MAAAf,QAAA,eAC5CpB,OAAA,CAACR,SAAS;QAAC4C,IAAI,EAAEX,iBAAkB;QAAAL,QAAA,gBACjCpB,OAAA,CAACN,KAAK;UAAC2C,OAAO,EAAC;QAAK;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvBxB,OAAA,CAACL,KAAK;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACTxB,OAAA,CAACJ,OAAO;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACXxB,OAAA,CAACH,MAAM;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACVxB,OAAA,CAACP,IAAI;UAAC6C,IAAI,EAAC,UAAU;UAACD,OAAO,EAAC,UAAU;UAACE,MAAM,EAAC;QAAS;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC,eAGtBxB,OAAA;MAAAoB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBxB,OAAA;MAAAoB,QAAA,EAAMoB,IAAI,CAACC,SAAS,CAAChC,mBAAmB,CAACP,MAAM,CAAC,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAGjExB,OAAA;MAAAoB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBxB,OAAA;MAAAoB,QAAA,EAAMoB,IAAI,CAACC,SAAS,CAAC9B,eAAe,CAACT,MAAM,CAAC,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEV,CAAC;AAACrB,EAAA,CAjEIF,OAAO;AAAAyC,EAAA,GAAPzC,OAAO;AAmEb,eAAeA,OAAO;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}