{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elist\\\\OneDrive\\\\Documents\\\\GitHub\\\\Projet-12-OC\\\\src\\\\components\\\\Profile\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchUserData } from '../services/apiService'; // Importiranje funkcije za dohvaćanje podataka s API-ja\nimport SessionChart from '../SessionChart'; // Importiranje komponente za prikaz grafa sesija\nimport CaloriesChart from '../CaloriesChart'; // Importiranje komponente za prikaz grafa potrošenih kalorija\nimport { formatSessionData, formatCaloriesData } from './utils/dataFormatter'; // Importiranje funkcija za formatiranje podataka\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [sessions, setSessions] = useState([]); // Stanje za pohranu podataka o sesijama\n  const [calories, setCalories] = useState([]); // Stanje za pohranu podataka o kalorijama\n\n  useEffect(() => {\n    async function getData() {\n      try {\n        const data = await fetchUserData(); // Dohvaćanje podataka o korisniku s API-ja\n        setSessions(formatSessionData(data.sessions)); // Formatiranje i pohrana podataka o sesijama\n        setCalories(formatCaloriesData(data.calories)); // Formatiranje i pohrana podataka o kalorijama\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    }\n    getData(); // Pozivanje funkcije za dohvaćanje podataka prilikom prvog renderiranja komponente\n  }, []); // Prazan niz kao drugi argument useEffect hook-a osigurava da se funkcija izvrši samo jednom\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Profil Utilisateur\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(SessionChart, {\n      data: sessions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(CaloriesChart, {\n      data: calories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"g1nYpEz/v7UCV7QOgbLTjSx1Dr4=\");\n_c = Profile;\nexport default Profile; // Izvoz komponente za uporabu u drugim dijelovima aplikacije\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","fetchUserData","SessionChart","CaloriesChart","formatSessionData","formatCaloriesData","jsxDEV","_jsxDEV","Profile","_s","sessions","setSessions","calories","setCalories","getData","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/components/Profile/Profile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchUserData } from '../services/apiService'; // Importiranje funkcije za dohvaćanje podataka s API-ja\r\nimport SessionChart from '../SessionChart'; // Importiranje komponente za prikaz grafa sesija\r\nimport CaloriesChart from '../CaloriesChart'; // Importiranje komponente za prikaz grafa potrošenih kalorija\r\nimport { formatSessionData, formatCaloriesData } from './utils/dataFormatter'; // Importiranje funkcija za formatiranje podataka\r\n\r\nconst Profile = () => {\r\n  const [sessions, setSessions] = useState([]); // Stanje za pohranu podataka o sesijama\r\n  const [calories, setCalories] = useState([]); // Stanje za pohranu podataka o kalorijama\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      try {\r\n        const data = await fetchUserData(); // Dohvaćanje podataka o korisniku s API-ja\r\n        setSessions(formatSessionData(data.sessions)); // Formatiranje i pohrana podataka o sesijama\r\n        setCalories(formatCaloriesData(data.calories)); // Formatiranje i pohrana podataka o kalorijama\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n      }\r\n    }\r\n    getData(); // Pozivanje funkcije za dohvaćanje podataka prilikom prvog renderiranja komponente\r\n  }, []); // Prazan niz kao drugi argument useEffect hook-a osigurava da se funkcija izvrši samo jednom\r\n\r\n  return (\r\n    <div>\r\n      <h1>Profil Utilisateur</h1> {/* Naslov stranice */}\r\n      <SessionChart data={sessions} /> {/* Prikaz grafa sesija s podacima iz stanja */}\r\n      <CaloriesChart data={calories} /> {/* Prikaz grafa kalorija s podacima iz stanja */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile; // Izvoz komponente za uporabu u drugim dijelovima aplikacije\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,wBAAwB,CAAC,CAAC;AACxD,OAAOC,YAAY,MAAM,iBAAiB,CAAC,CAAC;AAC5C,OAAOC,aAAa,MAAM,kBAAkB,CAAC,CAAC;AAC9C,SAASC,iBAAiB,EAAEC,kBAAkB,QAAQ,uBAAuB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/E,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9CD,SAAS,CAAC,MAAM;IACd,eAAee,OAAOA,CAAA,EAAG;MACvB,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMd,aAAa,CAAC,CAAC,CAAC,CAAC;QACpCU,WAAW,CAACP,iBAAiB,CAACW,IAAI,CAACL,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC/CG,WAAW,CAACR,kBAAkB,CAACU,IAAI,CAACH,QAAQ,CAAC,CAAC,CAAC,CAAC;MAClD,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF;IACAF,OAAO,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEP,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,KAAC,eAC5Bf,OAAA,CAACL,YAAY;MAACa,IAAI,EAAEL;IAAS;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC,eACjCf,OAAA,CAACJ,aAAa;MAACY,IAAI,EAAEH;IAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEV,CAAC;AAACb,EAAA,CAxBID,OAAO;AAAAe,EAAA,GAAPf,OAAO;AA0Bb,eAAeA,OAAO,CAAC,CAAC;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}