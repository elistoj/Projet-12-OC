{"ast":null,"code":"const API_URL = 'http://localhost:3000';\nexport const fetchUserData = async userId => {\n  try {\n    const response = await fetch(`${API_URL}/user/${userId}`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch user data');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching user data\", error);\n    return null;\n  }\n};\nexport const fetchUserActivity = async userId => {\n  try {\n    const response = await fetch(`${API_URL}/user/${userId}/activity`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch user activity');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching user activity\", error);\n    return null;\n  }\n};\nexport const fetchUserAverageSessions = async userId => {\n  try {\n    const response = await fetch(`${API_URL}/user/${userId}/average-sessions`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch user average sessions');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching user average sessions\", error);\n    return null;\n  }\n};\nexport const fetchUserPerformance = async userId => {\n  try {\n    const response = await fetch(`${API_URL}/user/${userId}/performance`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch user performance');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching user performance\", error);\n    return null;\n  }\n};","map":{"version":3,"names":["API_URL","fetchUserData","userId","response","fetch","ok","Error","json","error","console","fetchUserActivity","fetchUserAverageSessions","fetchUserPerformance"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/components/fetchFunctions/fetchFunctions.js"],"sourcesContent":["const API_URL = 'http://localhost:3000';\r\n\r\nexport const fetchUserData = async (userId) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/user/${userId}`);\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch user data');\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error fetching user data\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const fetchUserActivity = async (userId) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/user/${userId}/activity`);\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch user activity');\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error fetching user activity\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const fetchUserAverageSessions = async (userId) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/user/${userId}/average-sessions`);\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch user average sessions');\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error fetching user average sessions\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const fetchUserPerformance = async (userId) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/user/${userId}/performance`);\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch user performance');\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error fetching user performance\", error);\r\n    return null;\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAuB;AAEvC,OAAO,MAAMC,aAAa,GAAG,MAAOC,MAAM,IAAK;EAC7C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,SAASE,MAAM,EAAE,CAAC;IACzD,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;IAC9C;IACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAME,iBAAiB,GAAG,MAAOR,MAAM,IAAK;EACjD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,SAASE,MAAM,WAAW,CAAC;IAClE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;IAClD;IACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAMG,wBAAwB,GAAG,MAAOT,MAAM,IAAK;EACxD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,SAASE,MAAM,mBAAmB,CAAC;IAC1E,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uCAAuC,CAAC;IAC1D;IACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC5D,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAMI,oBAAoB,GAAG,MAAOV,MAAM,IAAK;EACpD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,SAASE,MAAM,cAAc,CAAC;IACrE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;IACrD;IACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}