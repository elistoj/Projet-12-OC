{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elist\\\\OneDrive\\\\Documents\\\\GitHub\\\\Projet-12-OC\\\\src\\\\Page\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Profile.css';\nimport { fetchUserData, fetchUserActivity, fetchUserAverageSessions, fetchUserPerformance } from '../service/api'; // Uvezite funkcije za pozivanje API-ja\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = ({\n  username\n}) => {\n  _s();\n  // Prilagodite prop-u username umesto userId ako koristite username\n  const [userData, setUserData] = useState(null);\n  const [userActivity, setUserActivity] = useState(null);\n  const [userAverageSessions, setUserAverageSessions] = useState(null);\n  const [userPerformance, setUserPerformance] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n\n        // Pozivamo API-je za dohvat podataka\n        const fetchedUserData = await fetchUserData(username);\n        const fetchedUserActivity = await fetchUserActivity(username);\n        const fetchedUserAverageSessions = await fetchUserAverageSessions(username);\n        const fetchedUserPerformance = await fetchUserPerformance(username);\n\n        // Postavljamo stanje sa dobijenim podacima\n        setUserData(fetchedUserData);\n        setUserActivity(fetchedUserActivity);\n        setUserAverageSessions(fetchedUserAverageSessions);\n        setUserPerformance(fetchedUserPerformance);\n        setLoading(false); // Postavljamo loading na false po završetku\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setLoading(false); // Postavljamo loading na false u slučaju greške\n      }\n    };\n    fetchData(); // Pozivamo funkciju za dohvat podataka\n  }, [username]); // Slušamo promene username-a za re-render komponente\n\n  // Proveravamo loading stanje ili nedostatak podataka\n  if (loading || !userData || !userActivity || !userAverageSessions || !userPerformance) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this); // Vraćamo loader dok se podaci učitavaju\n  }\n\n  // Proveravamo da li su podaci dostupni pre renderovanja komponente\n  if (!userActivity.sessions || !userAverageSessions.sessions || !userPerformance.data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Data not available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this); // Prikazujemo poruku ako podaci nisu dostupni\n  }\n\n  // Dohvatimo ime korisnika\n  const {\n    firstName\n  } = userData.userInfos;\n\n  // Renderovanje komponente sa prikazom podataka\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Bonjour \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"user-name\",\n        children: firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"azwH9P+kvzcqqydt8OiE3Ly7GkM=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","fetchUserData","fetchUserActivity","fetchUserAverageSessions","fetchUserPerformance","jsxDEV","_jsxDEV","Profile","username","_s","userData","setUserData","userActivity","setUserActivity","userAverageSessions","setUserAverageSessions","userPerformance","setUserPerformance","loading","setLoading","fetchData","fetchedUserData","fetchedUserActivity","fetchedUserAverageSessions","fetchedUserPerformance","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","sessions","data","firstName","userInfos","className","_c","$RefreshReg$"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/Page/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Profile.css';\r\nimport {\r\n  fetchUserData,\r\n  fetchUserActivity,\r\n  fetchUserAverageSessions,\r\n  fetchUserPerformance,\r\n} from '../service/api'; // Uvezite funkcije za pozivanje API-ja\r\n\r\nconst Profile = ({ username }) => { // Prilagodite prop-u username umesto userId ako koristite username\r\n  const [userData, setUserData] = useState(null);\r\n  const [userActivity, setUserActivity] = useState(null);\r\n  const [userAverageSessions, setUserAverageSessions] = useState(null);\r\n  const [userPerformance, setUserPerformance] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n\r\n        // Pozivamo API-je za dohvat podataka\r\n        const fetchedUserData = await fetchUserData(username);\r\n        const fetchedUserActivity = await fetchUserActivity(username);\r\n        const fetchedUserAverageSessions = await fetchUserAverageSessions(username);\r\n        const fetchedUserPerformance = await fetchUserPerformance(username);\r\n\r\n        // Postavljamo stanje sa dobijenim podacima\r\n        setUserData(fetchedUserData);\r\n        setUserActivity(fetchedUserActivity);\r\n        setUserAverageSessions(fetchedUserAverageSessions);\r\n        setUserPerformance(fetchedUserPerformance);\r\n\r\n        setLoading(false); // Postavljamo loading na false po završetku\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setLoading(false); // Postavljamo loading na false u slučaju greške\r\n      }\r\n    };\r\n\r\n    fetchData(); // Pozivamo funkciju za dohvat podataka\r\n  }, [username]); // Slušamo promene username-a za re-render komponente\r\n\r\n  // Proveravamo loading stanje ili nedostatak podataka\r\n  if (loading || !userData || !userActivity || !userAverageSessions || !userPerformance) {\r\n    return <div>Loading...</div>; // Vraćamo loader dok se podaci učitavaju\r\n  }\r\n\r\n  // Proveravamo da li su podaci dostupni pre renderovanja komponente\r\n  if (!userActivity.sessions || !userAverageSessions.sessions || !userPerformance.data) {\r\n    return <div>Data not available</div>; // Prikazujemo poruku ako podaci nisu dostupni\r\n  }\r\n\r\n  // Dohvatimo ime korisnika\r\n  const { firstName } = userData.userInfos;\r\n\r\n  // Renderovanje komponente sa prikazom podataka\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <h1>Bonjour <span className=\"user-name\">{firstName}</span></h1>\r\n      {/* Dodajte ostale komponente za prikaz podataka (npr. grafikoni, informacije o ishrani) */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}