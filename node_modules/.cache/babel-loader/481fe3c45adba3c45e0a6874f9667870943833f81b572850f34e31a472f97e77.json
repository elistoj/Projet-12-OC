{"ast":null,"code":"const BASE_URL = 'http://localhost:3000/user';\nconst API_KEY = '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';\nasync function checkResponse(response) {\n  if (!response.ok) {\n    const errorText = await response.text();\n    throw new Error(`Network response was not ok. Status: ${response.status}. Message: ${errorText}`);\n  }\n  return response.json();\n}\nexport async function fetchUserData(userId) {\n  try {\n    const response = await fetch(`${BASE_URL}/${userId}`, {\n      headers: {\n        'Authorization': `token ${API_KEY}`\n      }\n    });\n    const userData = await checkResponse(response);\n    return mapUserData(userData);\n  } catch (error) {\n    console.error('Error fetching user data:', error);\n    throw error;\n  }\n}\nexport async function fetchUserActivity(userId) {\n  try {\n    const response = await fetch(`${BASE_URL}/${userId}/activity`, {\n      headers: {\n        'Authorization': `token ${API_KEY}`\n      }\n    });\n    const userActivity = await checkResponse(response);\n    return mapUserActivity(userActivity);\n  } catch (error) {\n    console.error('Error fetching user activity:', error);\n    throw error;\n  }\n}\nexport async function fetchUserAverageSessions(userId) {\n  try {\n    const response = await fetch(`${BASE_URL}/${userId}/average-sessions`, {\n      headers: {\n        'Authorization': `token ${API_KEY}`\n      }\n    });\n    const userAverageSessions = await checkResponse(response);\n    return mapUserAverageSessions(userAverageSessions);\n  } catch (error) {\n    console.error('Error fetching user average sessions:', error);\n    throw error;\n  }\n}\nexport async function fetchUserPerformance(userId) {\n  try {\n    const response = await fetch(`${BASE_URL}/${userId}/performance`, {\n      headers: {\n        'Authorization': `token ${API_KEY}`\n      }\n    });\n    const userPerformance = await checkResponse(response);\n    return mapUserPerformance(userPerformance);\n  } catch (error) {\n    console.error('Error fetching user performance:', error);\n    throw error;\n  }\n}","map":{"version":3,"names":["BASE_URL","API_KEY","checkResponse","response","ok","errorText","text","Error","status","json","fetchUserData","userId","fetch","headers","userData","mapUserData","error","console","fetchUserActivity","userActivity","mapUserActivity","fetchUserAverageSessions","userAverageSessions","mapUserAverageSessions","fetchUserPerformance","userPerformance","mapUserPerformance"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/Page/Profile.js"],"sourcesContent":["const BASE_URL = 'http://localhost:3000/user';\r\nconst API_KEY = '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';\r\n\r\nasync function checkResponse(response) {\r\n  if (!response.ok) {\r\n    const errorText = await response.text();\r\n    throw new Error(`Network response was not ok. Status: ${response.status}. Message: ${errorText}`);\r\n  }\r\n  return response.json();\r\n}\r\n\r\nexport async function fetchUserData(userId) {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/${userId}`, {\r\n      headers: {\r\n        'Authorization': `token ${API_KEY}`\r\n      }\r\n    });\r\n    const userData = await checkResponse(response);\r\n    return mapUserData(userData);\r\n  } catch (error) {\r\n    console.error('Error fetching user data:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function fetchUserActivity(userId) {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/${userId}/activity`, {\r\n      headers: {\r\n        'Authorization': `token ${API_KEY}`\r\n      }\r\n    });\r\n    const userActivity = await checkResponse(response);\r\n    return mapUserActivity(userActivity);\r\n  } catch (error) {\r\n    console.error('Error fetching user activity:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function fetchUserAverageSessions(userId) {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/${userId}/average-sessions`, {\r\n      headers: {\r\n        'Authorization': `token ${API_KEY}`\r\n      }\r\n    });\r\n    const userAverageSessions = await checkResponse(response);\r\n    return mapUserAverageSessions(userAverageSessions);\r\n  } catch (error) {\r\n    console.error('Error fetching user average sessions:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function fetchUserPerformance(userId) {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/${userId}/performance`, {\r\n      headers: {\r\n        'Authorization': `token ${API_KEY}`\r\n      }\r\n    });\r\n    const userPerformance = await checkResponse(response);\r\n    return mapUserPerformance(userPerformance);\r\n  } catch (error) {\r\n    console.error('Error fetching user performance:', error);\r\n    throw error;\r\n  }\r\n}\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,4BAA4B;AAC7C,MAAMC,OAAO,GAAG,0CAA0C;AAE1D,eAAeC,aAAaA,CAACC,QAAQ,EAAE;EACrC,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;IAChB,MAAMC,SAAS,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACvC,MAAM,IAAIC,KAAK,CAAC,wCAAwCJ,QAAQ,CAACK,MAAM,cAAcH,SAAS,EAAE,CAAC;EACnG;EACA,OAAOF,QAAQ,CAACM,IAAI,CAAC,CAAC;AACxB;AAEA,OAAO,eAAeC,aAAaA,CAACC,MAAM,EAAE;EAC1C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMS,KAAK,CAAC,GAAGZ,QAAQ,IAAIW,MAAM,EAAE,EAAE;MACpDE,OAAO,EAAE;QACP,eAAe,EAAE,SAASZ,OAAO;MACnC;IACF,CAAC,CAAC;IACF,MAAMa,QAAQ,GAAG,MAAMZ,aAAa,CAACC,QAAQ,CAAC;IAC9C,OAAOY,WAAW,CAACD,QAAQ,CAAC;EAC9B,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF;AAEA,OAAO,eAAeE,iBAAiBA,CAACP,MAAM,EAAE;EAC9C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMS,KAAK,CAAC,GAAGZ,QAAQ,IAAIW,MAAM,WAAW,EAAE;MAC7DE,OAAO,EAAE;QACP,eAAe,EAAE,SAASZ,OAAO;MACnC;IACF,CAAC,CAAC;IACF,MAAMkB,YAAY,GAAG,MAAMjB,aAAa,CAACC,QAAQ,CAAC;IAClD,OAAOiB,eAAe,CAACD,YAAY,CAAC;EACtC,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK;EACb;AACF;AAEA,OAAO,eAAeK,wBAAwBA,CAACV,MAAM,EAAE;EACrD,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMS,KAAK,CAAC,GAAGZ,QAAQ,IAAIW,MAAM,mBAAmB,EAAE;MACrEE,OAAO,EAAE;QACP,eAAe,EAAE,SAASZ,OAAO;MACnC;IACF,CAAC,CAAC;IACF,MAAMqB,mBAAmB,GAAG,MAAMpB,aAAa,CAACC,QAAQ,CAAC;IACzD,OAAOoB,sBAAsB,CAACD,mBAAmB,CAAC;EACpD,CAAC,CAAC,OAAON,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC7D,MAAMA,KAAK;EACb;AACF;AAEA,OAAO,eAAeQ,oBAAoBA,CAACb,MAAM,EAAE;EACjD,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMS,KAAK,CAAC,GAAGZ,QAAQ,IAAIW,MAAM,cAAc,EAAE;MAChEE,OAAO,EAAE;QACP,eAAe,EAAE,SAASZ,OAAO;MACnC;IACF,CAAC,CAAC;IACF,MAAMwB,eAAe,GAAG,MAAMvB,aAAa,CAACC,QAAQ,CAAC;IACrD,OAAOuB,kBAAkB,CAACD,eAAe,CAAC;EAC5C,CAAC,CAAC,OAAOT,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,MAAMA,KAAK;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}