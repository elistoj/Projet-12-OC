{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elist\\\\OneDrive\\\\Documents\\\\GitHub\\\\Projet-12-OC\\\\src\\\\Page\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Profile.css';\nimport ActivityChart from '../components/charts/ActivityChart/ActivityChart';\nimport AverageSessionsChart from '../components/charts/AverageSessionsChart/AverageSessionsChart';\nimport NutritionalInfo from '../components/charts/NutritionalInfo/NutritionalInfo';\nimport RadarChart from '../components/charts/PerformanceChart/RadarChart';\nimport ScoreChart from '../components/charts/ScoreChart/ScoreChart';\nimport { fetchUserData, fetchUserActivity, fetchUserAverageSessions, fetchUserPerformance } from '../service/api';\nimport mockData from '../mockData.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = ({\n  userId\n}) => {\n  _s();\n  var _userData$userInfos, _userData$keyData, _userData$keyData2, _userData$keyData3, _userData$keyData4;\n  const [userData, setUserData] = useState(null);\n  const [userActivity, setUserActivity] = useState([]);\n  const [userAverageSessions, setUserAverageSessions] = useState([]);\n  const [userPerformance, setUserPerformance] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const fetchedUserData = await fetchUserData(userId);\n        setUserData(fetchedUserData);\n        const fetchedUserActivity = await fetchUserActivity(userId);\n        setUserActivity(fetchedUserActivity);\n        const fetchedUserAverageSessions = await fetchUserAverageSessions(userId);\n        setUserAverageSessions(fetchedUserAverageSessions);\n        const fetchedUserPerformance = await fetchUserPerformance(userId);\n        setUserPerformance(fetchedUserPerformance);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setLoading(false);\n\n        // Handle setting default/mock data or error state\n        setUserData(mockData.USER_MAIN_DATA.find(user => user.id === parseInt(userId)) || {});\n        setUserActivity(mockData.USER_ACTIVITY.find(activity => activity.userId === parseInt(userId)) || {});\n        setUserAverageSessions(mockData.USER_AVERAGE_SESSIONS.find(session => session.userId === parseInt(userId)) || {});\n        setUserPerformance(mockData.USER_PERFORMANCE.find(performance => performance.userId === parseInt(userId)) || {});\n      }\n    };\n    fetchData();\n  }, [userId]);\n  if (loading || !userData || !userActivity || !userAverageSessions || !userPerformance) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-header-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Bonjour \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"user-name\",\n            children: (_userData$userInfos = userData.userInfos) === null || _userData$userInfos === void 0 ? void 0 : _userData$userInfos.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"F\\xE9licitation ! Vous avez explos\\xE9 vos objectifs hier \\uD83D\\uDC4F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-activity\",\n        children: /*#__PURE__*/_jsxDEV(ActivityChart, {\n          data: userActivity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trois-sections\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: /*#__PURE__*/_jsxDEV(AverageSessionsChart, {\n            data: userAverageSessions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: /*#__PURE__*/_jsxDEV(RadarChart, {\n            data: userPerformance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: /*#__PURE__*/_jsxDEV(ScoreChart, {\n            data: {\n              score: userData.score\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sections\",\n      children: /*#__PURE__*/_jsxDEV(NutritionalInfo, {\n        calorieCount: (_userData$keyData = userData.keyData) === null || _userData$keyData === void 0 ? void 0 : _userData$keyData.calorieCount,\n        proteinCount: (_userData$keyData2 = userData.keyData) === null || _userData$keyData2 === void 0 ? void 0 : _userData$keyData2.proteinCount,\n        carbohydrateCount: (_userData$keyData3 = userData.keyData) === null || _userData$keyData3 === void 0 ? void 0 : _userData$keyData3.carbohydrateCount,\n        lipidCount: (_userData$keyData4 = userData.keyData) === null || _userData$keyData4 === void 0 ? void 0 : _userData$keyData4.lipidCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"FfacUZH8MBfl34d/O1M1nuZdn64=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","ActivityChart","AverageSessionsChart","NutritionalInfo","RadarChart","ScoreChart","fetchUserData","fetchUserActivity","fetchUserAverageSessions","fetchUserPerformance","mockData","jsxDEV","_jsxDEV","Profile","userId","_s","_userData$userInfos","_userData$keyData","_userData$keyData2","_userData$keyData3","_userData$keyData4","userData","setUserData","userActivity","setUserActivity","userAverageSessions","setUserAverageSessions","userPerformance","setUserPerformance","loading","setLoading","fetchData","fetchedUserData","fetchedUserActivity","fetchedUserAverageSessions","fetchedUserPerformance","error","console","USER_MAIN_DATA","find","user","id","parseInt","USER_ACTIVITY","activity","USER_AVERAGE_SESSIONS","session","USER_PERFORMANCE","performance","children","fileName","_jsxFileName","lineNumber","columnNumber","className","userInfos","firstName","data","score","calorieCount","keyData","proteinCount","carbohydrateCount","lipidCount","_c","$RefreshReg$"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/Page/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Profile.css';\r\nimport ActivityChart from '../components/charts/ActivityChart/ActivityChart';\r\nimport AverageSessionsChart from '../components/charts/AverageSessionsChart/AverageSessionsChart';\r\nimport NutritionalInfo from '../components/charts/NutritionalInfo/NutritionalInfo';\r\nimport RadarChart from '../components/charts/PerformanceChart/RadarChart';\r\nimport ScoreChart from '../components/charts/ScoreChart/ScoreChart';\r\nimport {\r\n  fetchUserData,\r\n  fetchUserActivity,\r\n  fetchUserAverageSessions,\r\n  fetchUserPerformance,\r\n} from '../service/api';\r\nimport mockData from '../mockData.json';\r\n\r\nconst Profile = ({ userId }) => {\r\n  const [userData, setUserData] = useState(null);\r\n  const [userActivity, setUserActivity] = useState([]);\r\n  const [userAverageSessions, setUserAverageSessions] = useState([]);\r\n  const [userPerformance, setUserPerformance] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n\r\n        const fetchedUserData = await fetchUserData(userId);\r\n        setUserData(fetchedUserData);\r\n\r\n        const fetchedUserActivity = await fetchUserActivity(userId);\r\n        setUserActivity(fetchedUserActivity);\r\n\r\n        const fetchedUserAverageSessions = await fetchUserAverageSessions(userId);\r\n        setUserAverageSessions(fetchedUserAverageSessions);\r\n\r\n        const fetchedUserPerformance = await fetchUserPerformance(userId);\r\n        setUserPerformance(fetchedUserPerformance);\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setLoading(false);\r\n\r\n        // Handle setting default/mock data or error state\r\n        setUserData(mockData.USER_MAIN_DATA.find(user => user.id === parseInt(userId)) || {});\r\n        setUserActivity(mockData.USER_ACTIVITY.find(activity => activity.userId === parseInt(userId)) || {});\r\n        setUserAverageSessions(mockData.USER_AVERAGE_SESSIONS.find(session => session.userId === parseInt(userId)) || {});\r\n        setUserPerformance(mockData.USER_PERFORMANCE.find(performance => performance.userId === parseInt(userId)) || {});\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [userId]);\r\n\r\n  if (loading || !userData || !userActivity || !userAverageSessions || !userPerformance) {\r\n    return <div>Chargement...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <div className=\"profile-header-section\">\r\n        <div className=\"profile-header\">\r\n          <h1>Bonjour <span className=\"user-name\">{userData.userInfos?.firstName}</span></h1>\r\n          <p>Félicitation ! Vous avez explosé vos objectifs hier 👏</p>\r\n        </div>\r\n        <div className=\"section-activity\">\r\n          <ActivityChart data={userActivity} />\r\n        </div>\r\n        <div className=\"trois-sections\">\r\n          <div className=\"section\">\r\n            <AverageSessionsChart data={userAverageSessions} />\r\n          </div>\r\n          <div className=\"section\">\r\n            <RadarChart data={userPerformance} />\r\n          </div>\r\n          <div className=\"section\">\r\n            <ScoreChart data={{ score: userData.score }} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"sections\">\r\n        <NutritionalInfo\r\n          calorieCount={userData.keyData?.calorieCount}\r\n          proteinCount={userData.keyData?.proteinCount}\r\n          carbohydrateCount={userData.keyData?.carbohydrateCount}\r\n          lipidCount={userData.keyData?.lipidCount}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}