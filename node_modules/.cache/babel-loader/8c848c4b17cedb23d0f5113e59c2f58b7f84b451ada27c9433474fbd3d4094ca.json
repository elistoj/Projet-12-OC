{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elist\\\\OneDrive\\\\Documents\\\\GitHub\\\\Projet-12-OC\\\\src\\\\components\\\\Profile\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Profile.css';\nimport ActivityChart from '../charts/ActivityChart/ActivityChart';\nimport AverageSessionsChart from '../charts/AverageSessionsChart/AverageSessionsChart';\nimport NutritionalInfo from '../charts/NutritionalInfo/NutritionalInfo';\nimport RadarChart from '../charts/PerformanceChart/RadarChart';\nimport ScoreChart from '../charts/ScoreChart/ScoreChart';\n\n// Дефинираме празен објект за мокираните податоци, што се користи кога API не е достапен\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emptyUserData = {\n  userInfos: {\n    firstName: 'John' // Додадете име по избор\n  },\n  keyData: {\n    calorieCount: 0,\n    proteinCount: 0,\n    carbohydrateCount: 0,\n    lipidCount: 0\n  },\n  score: 0\n};\nconst Profile = ({\n  userId\n}) => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [userActivity, setUserActivity] = useState(null);\n  const [userAverageSessions, setUserAverageSessions] = useState(null);\n  const [userPerformance, setUserPerformance] = useState(null);\n\n  // Симулирање на земање на податоци од API\n  useEffect(() => {\n    // Вашиот API endpoint за земање на податоци\n    const fetchUserData = async () => {\n      try {\n        // Симулирање на време за вчитување\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        // Апирајте на сервер за корисникот со даденото userId\n        // На пример, може да користите fetch или axios\n        // const response = await fetch(`/api/user/${userId}`);\n        // const data = await response.json();\n\n        // Пример на како би изгледало повикот до реален API\n        // За сега, користиме мокирани податоци (emptyUserData) кога немаме реален API\n        const mockUserData = {\n          ...emptyUserData,\n          userInfos: {\n            ...emptyUserData.userInfos,\n            firstName: 'Jane' // Пример на мокирано име\n          },\n          keyData: {\n            calorieCount: 1800,\n            proteinCount: 120,\n            carbohydrateCount: 250,\n            lipidCount: 70\n          },\n          score: 85\n        };\n        setUserData(mockUserData);\n        setUserActivity(mockData.USER_ACTIVITY.find(activity => activity.userId === parseInt(userId)));\n        setUserAverageSessions(mockData.USER_AVERAGE_SESSIONS.find(session => session.userId === parseInt(userId)));\n        setUserPerformance(mockData.USER_PERFORMANCE.find(performance => performance.userId === parseInt(userId)));\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    };\n    fetchUserData();\n  }, [userId]);\n  if (!userData || !userActivity || !userAverageSessions || !userPerformance) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-header-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Bonjour \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"user-name\",\n            children: userData.userInfos.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"F\\xE9licitation ! Vous avez explos\\xE9 vos objectifs hier \\uD83D\\uDC4F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-activity\",\n        children: /*#__PURE__*/_jsxDEV(ActivityChart, {\n          data: userActivity.sessions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trois-sections\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: /*#__PURE__*/_jsxDEV(AverageSessionsChart, {\n            data: userAverageSessions.sessions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: /*#__PURE__*/_jsxDEV(RadarChart, {\n            data: userPerformance.data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: /*#__PURE__*/_jsxDEV(ScoreChart, {\n            data: {\n              score: userData.score\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sections\",\n      children: /*#__PURE__*/_jsxDEV(NutritionalInfo, {\n        calorieCount: userData.keyData.calorieCount,\n        proteinCount: userData.keyData.proteinCount,\n        carbohydrateCount: userData.keyData.carbohydrateCount,\n        lipidCount: userData.keyData.lipidCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"IATTRuvat0J+5uRQ2DfsgJtV43A=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","ActivityChart","AverageSessionsChart","NutritionalInfo","RadarChart","ScoreChart","jsxDEV","_jsxDEV","emptyUserData","userInfos","firstName","keyData","calorieCount","proteinCount","carbohydrateCount","lipidCount","score","Profile","userId","_s","userData","setUserData","userActivity","setUserActivity","userAverageSessions","setUserAverageSessions","userPerformance","setUserPerformance","fetchUserData","Promise","resolve","setTimeout","mockUserData","mockData","USER_ACTIVITY","find","activity","parseInt","USER_AVERAGE_SESSIONS","session","USER_PERFORMANCE","performance","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","data","sessions","_c","$RefreshReg$"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/components/Profile/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Profile.css';\r\nimport ActivityChart from '../charts/ActivityChart/ActivityChart';\r\nimport AverageSessionsChart from '../charts/AverageSessionsChart/AverageSessionsChart';\r\nimport NutritionalInfo from '../charts/NutritionalInfo/NutritionalInfo';\r\nimport RadarChart from '../charts/PerformanceChart/RadarChart';\r\nimport ScoreChart from '../charts/ScoreChart/ScoreChart';\r\n\r\n// Дефинираме празен објект за мокираните податоци, што се користи кога API не е достапен\r\nconst emptyUserData = {\r\n  userInfos: {\r\n    firstName: 'John', // Додадете име по избор\r\n  },\r\n  keyData: {\r\n    calorieCount: 0,\r\n    proteinCount: 0,\r\n    carbohydrateCount: 0,\r\n    lipidCount: 0,\r\n  },\r\n  score: 0,\r\n};\r\n\r\nconst Profile = ({ userId }) => {\r\n  const [userData, setUserData] = useState(null);\r\n  const [userActivity, setUserActivity] = useState(null);\r\n  const [userAverageSessions, setUserAverageSessions] = useState(null);\r\n  const [userPerformance, setUserPerformance] = useState(null);\r\n\r\n  // Симулирање на земање на податоци од API\r\n  useEffect(() => {\r\n    // Вашиот API endpoint за земање на податоци\r\n    const fetchUserData = async () => {\r\n      try {\r\n        // Симулирање на време за вчитување\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        // Апирајте на сервер за корисникот со даденото userId\r\n        // На пример, може да користите fetch или axios\r\n        // const response = await fetch(`/api/user/${userId}`);\r\n        // const data = await response.json();\r\n\r\n        // Пример на како би изгледало повикот до реален API\r\n        // За сега, користиме мокирани податоци (emptyUserData) кога немаме реален API\r\n        const mockUserData = {\r\n          ...emptyUserData,\r\n          userInfos: {\r\n            ...emptyUserData.userInfos,\r\n            firstName: 'Jane', // Пример на мокирано име\r\n          },\r\n          keyData: {\r\n            calorieCount: 1800,\r\n            proteinCount: 120,\r\n            carbohydrateCount: 250,\r\n            lipidCount: 70,\r\n          },\r\n          score: 85,\r\n        };\r\n\r\n        setUserData(mockUserData);\r\n        setUserActivity(mockData.USER_ACTIVITY.find(activity => activity.userId === parseInt(userId)));\r\n        setUserAverageSessions(mockData.USER_AVERAGE_SESSIONS.find(session => session.userId === parseInt(userId)));\r\n        setUserPerformance(mockData.USER_PERFORMANCE.find(performance => performance.userId === parseInt(userId)));\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [userId]);\r\n\r\n  if (!userData || !userActivity || !userAverageSessions || !userPerformance) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <div className='profile-header-section'>\r\n        <div className=\"profile-header\">\r\n          <h1>Bonjour <span className=\"user-name\">{userData.userInfos.firstName}</span></h1>\r\n          <p>Félicitation ! Vous avez explosé vos objectifs hier 👏</p>\r\n        </div>\r\n        <div className=\"section-activity\">\r\n          <ActivityChart data={userActivity.sessions} />\r\n        </div>\r\n        <div className='trois-sections'>\r\n          <div className=\"section\">\r\n            <AverageSessionsChart data={userAverageSessions.sessions} />\r\n          </div>\r\n          <div className=\"section\">\r\n            <RadarChart data={userPerformance.data} />\r\n          </div>\r\n          <div className=\"section\">\r\n            <ScoreChart data={{ score: userData.score }} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"sections\">\r\n        <NutritionalInfo\r\n          calorieCount={userData.keyData.calorieCount}\r\n          proteinCount={userData.keyData.proteinCount}\r\n          carbohydrateCount={userData.keyData.carbohydrateCount}\r\n          lipidCount={userData.keyData.lipidCount}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}