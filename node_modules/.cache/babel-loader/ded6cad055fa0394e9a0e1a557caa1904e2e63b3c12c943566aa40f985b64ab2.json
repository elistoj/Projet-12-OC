{"ast":null,"code":"import { fetchUserData, fetchUserActivity, fetchUserAverageSessions, fetchUserPerformance } from './api'; // Заменете со точната патека до вашиот API модул\n\n/**\r\n * Fetch activity data from API or local JSON file\r\n * @param {string} id\r\n * @param {boolean} setup\r\n * @returns {object}\r\n */\nexport const getActivityData = async (id, setup) => {\n  if (setup) {\n    try {\n      const data = await fetchUserActivity(id);\n      return data;\n    } catch (error) {\n      console.error('Error fetching activity data:', error);\n      throw error;\n    }\n  } else {\n    try {\n      const response = await fetch(`../data/${id}/activity.json`);\n      const data = await checkResponse(response);\n      return data;\n    } catch (error) {\n      console.error('Error fetching local activity data:', error);\n      throw error;\n    }\n  }\n};\n\n/**\r\n * Fetch average session data from API or local JSON file\r\n * @param {String} id\r\n * @param {Boolean} setup\r\n * @returns {Object}\r\n */\nexport const getAverageData = async (id, setup) => {\n  if (setup) {\n    try {\n      const data = await fetchUserAverageSessions(id);\n      return data;\n    } catch (error) {\n      console.error('Error fetching average session data:', error);\n      throw error;\n    }\n  } else {\n    try {\n      const response = await fetch(`../data/${id}/average.json`);\n      const data = await checkResponse(response);\n      return data;\n    } catch (error) {\n      console.error('Error fetching local average session data:', error);\n      throw error;\n    }\n  }\n};\n\n/**\r\n * Fetch performance data from API or local JSON file\r\n * @param {String} id\r\n * @param {Boolean} setup\r\n * @returns {Object}\r\n */\nexport const getPerformanceData = async (id, setup) => {\n  if (setup) {\n    try {\n      const data = await fetchUserPerformance(id);\n      return data;\n    } catch (error) {\n      console.error('Error fetching performance data:', error);\n      throw error;\n    }\n  } else {\n    try {\n      const response = await fetch(`../data/${id}/performance.json`);\n      const data = await checkResponse(response);\n      return data;\n    } catch (error) {\n      console.error('Error fetching local performance data:', error);\n      throw error;\n    }\n  }\n};\nfunction mapUserData(userData) {\n  return {\n    id: userData.id,\n    userInfos: {\n      firstName: userData.firstName,\n      lastName: userData.lastName\n    },\n    keyData: {\n      calorieCount: userData.calorieCount,\n      proteinCount: userData.proteinCount,\n      carbohydrateCount: userData.carbohydrateCount,\n      lipidCount: userData.lipidCount\n    },\n    score: userData.score\n  };\n}\nfunction mapUserActivity(userActivity) {\n  return {\n    userId: userActivity.userId,\n    sessions: userActivity.map(session => ({\n      day: session.created_at,\n      sessionLength: session.sessionLength // Assuming `sessionLength` is a valid field\n    }))\n  };\n}\nfunction mapUserAverageSessions(userAverageSessions) {\n  return {\n    userId: userAverageSessions.userId,\n    sessions: userAverageSessions.sessions.map(session => ({\n      day: session.day,\n      averageDuration: session.sessionLength\n    }))\n  };\n}\nfunction mapUserPerformance(userPerformance) {\n  return {\n    userId: userPerformance.userId,\n    data: userPerformance.data.map(item => ({\n      kind: item.kind,\n      value: item.value\n    }))\n  };\n}","map":{"version":3,"names":["fetchUserData","fetchUserActivity","fetchUserAverageSessions","fetchUserPerformance","getActivityData","id","setup","data","error","console","response","fetch","checkResponse","getAverageData","getPerformanceData","mapUserData","userData","userInfos","firstName","lastName","keyData","calorieCount","proteinCount","carbohydrateCount","lipidCount","score","mapUserActivity","userActivity","userId","sessions","map","session","day","created_at","sessionLength","mapUserAverageSessions","userAverageSessions","averageDuration","mapUserPerformance","userPerformance","item","kind","value"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/service/api.js"],"sourcesContent":["import { fetchUserData, fetchUserActivity, fetchUserAverageSessions, fetchUserPerformance } from './api'; // Заменете со точната патека до вашиот API модул\r\n\r\n/**\r\n * Fetch activity data from API or local JSON file\r\n * @param {string} id\r\n * @param {boolean} setup\r\n * @returns {object}\r\n */\r\nexport const getActivityData = async (id, setup) => {\r\n  if (setup) {\r\n    try {\r\n      const data = await fetchUserActivity(id);\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching activity data:', error);\r\n      throw error;\r\n    }\r\n  } else {\r\n    try {\r\n      const response = await fetch(`../data/${id}/activity.json`);\r\n      const data = await checkResponse(response);\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching local activity data:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Fetch average session data from API or local JSON file\r\n * @param {String} id\r\n * @param {Boolean} setup\r\n * @returns {Object}\r\n */\r\nexport const getAverageData = async (id, setup) => {\r\n  if (setup) {\r\n    try {\r\n      const data = await fetchUserAverageSessions(id);\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching average session data:', error);\r\n      throw error;\r\n    }\r\n  } else {\r\n    try {\r\n      const response = await fetch(`../data/${id}/average.json`);\r\n      const data = await checkResponse(response);\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching local average session data:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Fetch performance data from API or local JSON file\r\n * @param {String} id\r\n * @param {Boolean} setup\r\n * @returns {Object}\r\n */\r\nexport const getPerformanceData = async (id, setup) => {\r\n  if (setup) {\r\n    try {\r\n      const data = await fetchUserPerformance(id);\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching performance data:', error);\r\n      throw error;\r\n    }\r\n  } else {\r\n    try {\r\n      const response = await fetch(`../data/${id}/performance.json`);\r\n      const data = await checkResponse(response);\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching local performance data:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\n\r\nfunction mapUserData(userData) {\r\n  return {\r\n    id: userData.id,\r\n    userInfos: {\r\n      firstName: userData.firstName,\r\n      lastName: userData.lastName,\r\n    },\r\n    keyData: {\r\n      calorieCount: userData.calorieCount,\r\n      proteinCount: userData.proteinCount,\r\n      carbohydrateCount: userData.carbohydrateCount,\r\n      lipidCount: userData.lipidCount,\r\n    },\r\n    score: userData.score,\r\n  };\r\n}\r\n\r\nfunction mapUserActivity(userActivity) {\r\n  return {\r\n    userId: userActivity.userId,\r\n    sessions: userActivity.map(session => ({\r\n      day: session.created_at,\r\n      sessionLength: session.sessionLength,  // Assuming `sessionLength` is a valid field\r\n    })),\r\n  };\r\n}\r\n\r\nfunction mapUserAverageSessions(userAverageSessions) {\r\n  return {\r\n    userId: userAverageSessions.userId,\r\n    sessions: userAverageSessions.sessions.map(session => ({\r\n      day: session.day,\r\n      averageDuration: session.sessionLength,\r\n    })),\r\n  };\r\n}\r\n\r\nfunction mapUserPerformance(userPerformance) {\r\n  return {\r\n    userId: userPerformance.userId,\r\n    data: userPerformance.data.map(item => ({\r\n      kind: item.kind,\r\n      value: item.value,\r\n    })),\r\n  };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}