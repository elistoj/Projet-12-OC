{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elist\\\\OneDrive\\\\Documents\\\\GitHub\\\\Projet-12-OC\\\\src\\\\components\\\\charts\\\\ActivityChart\\\\ActivityChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Profile.css';\nimport ActivityChart from '../charts/ActivityChart/ActivityChart';\nimport AverageSessionsChart from '../charts/AverageSessionsChart/AverageSessionsChart';\nimport NutritionalInfo from '../charts/NutritionalInfo/NutritionalInfo';\nimport RadarChart from '../charts/PerformanceChart/RadarChart';\nimport ScoreChart from '../charts/ScoreChart/ScoreChart';\n\n// Импортирање на мок податоци\nimport mockData from '../../mockData.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = ({\n  userId\n}) => {\n  _s();\n  // Дефинирање на состојбите за корисничките податоци и активности\n  const [userData, setUserData] = useState(null);\n  const [userActivity, setUserActivity] = useState(null);\n  const [userAverageSessions, setUserAverageSessions] = useState(null);\n  const [userPerformance, setUserPerformance] = useState(null);\n\n  // Извршување на ефект за вчитување на податоците од мок податоците\n  useEffect(() => {\n    // Симулација на асинхрона функциска вчитка\n    const fetchData = async () => {\n      try {\n        // Пребарување на податоци за корисникот, користејќи го userId\n        const profileData = mockData.USER_MAIN_DATA.find(user => user.id === parseInt(userId));\n        const activityData = mockData.USER_ACTIVITY.find(activity => activity.userId === parseInt(userId));\n        const averageSessionsData = mockData.USER_AVERAGE_SESSIONS.find(session => session.userId === parseInt(userId));\n        const performanceData = mockData.USER_PERFORMANCE.find(performance => performance.userId === parseInt(userId));\n\n        // Поставување на состојбите со вчитаните податоци\n        setUserData(profileData);\n        setUserActivity(activityData);\n        setUserAverageSessions(averageSessionsData);\n        setUserPerformance(performanceData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        // Обработка на грешки ако е потребно\n      }\n    };\n\n    // Повик на функцијата за вчитување на податоците\n    fetchData();\n  }, [userId]); // Зависност од userId, за да се повика useEffect повторно при промена на userId\n\n  // Прикажување на \"Loading...\" додека податоците се вчитуваат\n  if (!userData || !userActivity || !userAverageSessions || !userPerformance) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Враќање на компонентата за профилот\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-header-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Bonjour \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"user-name\",\n            children: userData.userInfos.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"F\\xE9licitation ! Vous avez explos\\xE9 vos objectifs hier \\uD83D\\uDC4F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-activity\",\n        children: /*#__PURE__*/_jsxDEV(ActivityChart, {\n          data: userActivity.sessions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trois-sections\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: /*#__PURE__*/_jsxDEV(AverageSessionsChart, {\n            data: userAverageSessions.sessions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: /*#__PURE__*/_jsxDEV(RadarChart, {\n            data: userPerformance.data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: /*#__PURE__*/_jsxDEV(ScoreChart, {\n            data: userData.todayScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sections\",\n      children: /*#__PURE__*/_jsxDEV(NutritionalInfo, {\n        calorieCount: userData.keyData.calorieCount,\n        proteinCount: userData.keyData.proteinCount,\n        carbohydrateCount: userData.keyData.carbohydrateCount,\n        lipidCount: userData.keyData.lipidCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"IATTRuvat0J+5uRQ2DfsgJtV43A=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","ActivityChart","AverageSessionsChart","NutritionalInfo","RadarChart","ScoreChart","mockData","jsxDEV","_jsxDEV","Profile","userId","_s","userData","setUserData","userActivity","setUserActivity","userAverageSessions","setUserAverageSessions","userPerformance","setUserPerformance","fetchData","profileData","USER_MAIN_DATA","find","user","id","parseInt","activityData","USER_ACTIVITY","activity","averageSessionsData","USER_AVERAGE_SESSIONS","session","performanceData","USER_PERFORMANCE","performance","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","userInfos","firstName","data","sessions","todayScore","calorieCount","keyData","proteinCount","carbohydrateCount","lipidCount","_c","$RefreshReg$"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/components/charts/ActivityChart/ActivityChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './Profile.css';\r\nimport ActivityChart from '../charts/ActivityChart/ActivityChart';\r\nimport AverageSessionsChart from '../charts/AverageSessionsChart/AverageSessionsChart';\r\nimport NutritionalInfo from '../charts/NutritionalInfo/NutritionalInfo';\r\nimport RadarChart from '../charts/PerformanceChart/RadarChart';\r\nimport ScoreChart from '../charts/ScoreChart/ScoreChart';\r\n\r\n// Импортирање на мок податоци\r\nimport mockData from '../../mockData.json';\r\n\r\nconst Profile = ({ userId }) => {\r\n  // Дефинирање на состојбите за корисничките податоци и активности\r\n  const [userData, setUserData] = useState(null);\r\n  const [userActivity, setUserActivity] = useState(null);\r\n  const [userAverageSessions, setUserAverageSessions] = useState(null);\r\n  const [userPerformance, setUserPerformance] = useState(null);\r\n\r\n  // Извршување на ефект за вчитување на податоците од мок податоците\r\n  useEffect(() => {\r\n    // Симулација на асинхрона функциска вчитка\r\n    const fetchData = async () => {\r\n      try {\r\n        // Пребарување на податоци за корисникот, користејќи го userId\r\n        const profileData = mockData.USER_MAIN_DATA.find(user => user.id === parseInt(userId));\r\n        const activityData = mockData.USER_ACTIVITY.find(activity => activity.userId === parseInt(userId));\r\n        const averageSessionsData = mockData.USER_AVERAGE_SESSIONS.find(session => session.userId === parseInt(userId));\r\n        const performanceData = mockData.USER_PERFORMANCE.find(performance => performance.userId === parseInt(userId));\r\n\r\n        // Поставување на состојбите со вчитаните податоци\r\n        setUserData(profileData);\r\n        setUserActivity(activityData);\r\n        setUserAverageSessions(averageSessionsData);\r\n        setUserPerformance(performanceData);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        // Обработка на грешки ако е потребно\r\n      }\r\n    };\r\n\r\n    // Повик на функцијата за вчитување на податоците\r\n    fetchData();\r\n  }, [userId]); // Зависност од userId, за да се повика useEffect повторно при промена на userId\r\n\r\n  // Прикажување на \"Loading...\" додека податоците се вчитуваат\r\n  if (!userData || !userActivity || !userAverageSessions || !userPerformance) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // Враќање на компонентата за профилот\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <div className='profile-header-section'>\r\n        <div className=\"profile-header\">\r\n          <h1>Bonjour <span className=\"user-name\">{userData.userInfos.firstName}</span></h1>\r\n          <p>Félicitation ! Vous avez explosé vos objectifs hier 👏</p>\r\n        </div>\r\n        <div className=\"section-activity\">\r\n          <ActivityChart data={userActivity.sessions} />\r\n        </div>\r\n        <div className='trois-sections'>\r\n          <div className=\"section\">\r\n            <AverageSessionsChart data={userAverageSessions.sessions} />\r\n          </div>\r\n          <div className=\"section\">\r\n            <RadarChart data={userPerformance.data} />\r\n          </div>\r\n          <div className=\"section\">\r\n            <ScoreChart data={userData.todayScore} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"sections\">\r\n        <NutritionalInfo\r\n          calorieCount={userData.keyData.calorieCount}\r\n          proteinCount={userData.keyData.proteinCount}\r\n          carbohydrateCount={userData.keyData.carbohydrateCount}\r\n          lipidCount={userData.keyData.lipidCount}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}