{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elist\\\\OneDrive\\\\Documents\\\\GitHub\\\\Projet-12-OC\\\\src\\\\components\\\\Profile\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ActivitiesChart } from '../charts/ActivityChart/ActivityChart';\nimport mockData from '../../mockData.json'; // Import the JSON data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfilePage({\n  userId\n}) {\n  _s();\n  const [userProfile, setUserProfile] = useState(null);\n  const [userActivity, setUserActivity] = useState(null);\n  const [userAverageSessions, setUserAverageSessions] = useState(null);\n  const [userPerformance, setUserPerformance] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Use the imported JSON data\n    try {\n      const profileData = mockData.USER_MAIN_DATA.find(user => user.id === parseInt(userId));\n      const activityData = mockData.USER_ACTIVITY.find(activity => activity.userId === parseInt(userId));\n      const averageSessionsData = mockData.USER_AVERAGE_SESSIONS.find(session => session.userId === parseInt(userId));\n      const performanceData = mockData.USER_PERFORMANCE.find(performance => performance.userId === parseInt(userId));\n      setUserProfile(profileData);\n      setUserActivity(activityData);\n      setUserAverageSessions(averageSessionsData);\n      setUserPerformance(performanceData);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [userId]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error loading profile data\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Profile of \", userProfile.userInfos.firstName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ActivitiesChart, {\n      userId: userProfile.id,\n      mockData: userPerformance.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(ProfilePage, \"Y5YXVLROcv1F2b91xG3PWq0Ki/Y=\");\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","ActivitiesChart","mockData","jsxDEV","_jsxDEV","ProfilePage","userId","_s","userProfile","setUserProfile","userActivity","setUserActivity","userAverageSessions","setUserAverageSessions","userPerformance","setUserPerformance","isLoading","setIsLoading","error","setError","profileData","USER_MAIN_DATA","find","user","id","parseInt","activityData","USER_ACTIVITY","activity","averageSessionsData","USER_AVERAGE_SESSIONS","session","performanceData","USER_PERFORMANCE","performance","children","fileName","_jsxFileName","lineNumber","columnNumber","userInfos","firstName","data","_c","$RefreshReg$"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/components/Profile/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ActivitiesChart } from '../charts/ActivityChart/ActivityChart';\r\nimport mockData from '../../mockData.json'; // Import the JSON data\r\n\r\nfunction ProfilePage({ userId }) {\r\n  const [userProfile, setUserProfile] = useState(null);\r\n  const [userActivity, setUserActivity] = useState(null);\r\n  const [userAverageSessions, setUserAverageSessions] = useState(null);\r\n  const [userPerformance, setUserPerformance] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Use the imported JSON data\r\n    try {\r\n      const profileData = mockData.USER_MAIN_DATA.find(user => user.id === parseInt(userId));\r\n      const activityData = mockData.USER_ACTIVITY.find(activity => activity.userId === parseInt(userId));\r\n      const averageSessionsData = mockData.USER_AVERAGE_SESSIONS.find(session => session.userId === parseInt(userId));\r\n      const performanceData = mockData.USER_PERFORMANCE.find(performance => performance.userId === parseInt(userId));\r\n\r\n      setUserProfile(profileData);\r\n      setUserActivity(activityData);\r\n      setUserAverageSessions(averageSessionsData);\r\n      setUserPerformance(performanceData);\r\n    } catch (error) {\r\n      setError(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [userId]);\r\n\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (error) return <div>Error loading profile data</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Profile of {userProfile.userInfos.firstName}</h1>\r\n      <ActivitiesChart userId={userProfile.id} mockData={userPerformance.data} />\r\n      {/* Add more components for other data */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfilePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,uCAAuC;AACvE,OAAOC,QAAQ,MAAM,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,WAAWA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC/B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACa,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACpE,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACA,IAAI;MACF,MAAMoB,WAAW,GAAGlB,QAAQ,CAACmB,cAAc,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKC,QAAQ,CAACnB,MAAM,CAAC,CAAC;MACtF,MAAMoB,YAAY,GAAGxB,QAAQ,CAACyB,aAAa,CAACL,IAAI,CAACM,QAAQ,IAAIA,QAAQ,CAACtB,MAAM,KAAKmB,QAAQ,CAACnB,MAAM,CAAC,CAAC;MAClG,MAAMuB,mBAAmB,GAAG3B,QAAQ,CAAC4B,qBAAqB,CAACR,IAAI,CAACS,OAAO,IAAIA,OAAO,CAACzB,MAAM,KAAKmB,QAAQ,CAACnB,MAAM,CAAC,CAAC;MAC/G,MAAM0B,eAAe,GAAG9B,QAAQ,CAAC+B,gBAAgB,CAACX,IAAI,CAACY,WAAW,IAAIA,WAAW,CAAC5B,MAAM,KAAKmB,QAAQ,CAACnB,MAAM,CAAC,CAAC;MAE9GG,cAAc,CAACW,WAAW,CAAC;MAC3BT,eAAe,CAACe,YAAY,CAAC;MAC7Bb,sBAAsB,CAACgB,mBAAmB,CAAC;MAC3Cd,kBAAkB,CAACiB,eAAe,CAAC;IACrC,CAAC,CAAC,OAAOd,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,SAAS;MACRD,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,CAACX,MAAM,CAAC,CAAC;EAEZ,IAAIU,SAAS,EAAE,oBAAOZ,OAAA;IAAA+B,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC3C,IAAIrB,KAAK,EAAE,oBAAOd,OAAA;IAAA+B,QAAA,EAAK;EAA0B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEvD,oBACEnC,OAAA;IAAA+B,QAAA,gBACE/B,OAAA;MAAA+B,QAAA,GAAI,aAAW,EAAC3B,WAAW,CAACgC,SAAS,CAACC,SAAS;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrDnC,OAAA,CAACH,eAAe;MAACK,MAAM,EAAEE,WAAW,CAACgB,EAAG;MAACtB,QAAQ,EAAEY,eAAe,CAAC4B;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAExE,CAAC;AAEV;AAAChC,EAAA,CArCQF,WAAW;AAAAsC,EAAA,GAAXtC,WAAW;AAuCpB,eAAeA,WAAW;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}