{"ast":null,"code":"const fetchUserDataFromGitHub = async () => {\n  try {\n    // Земање на основни податоци за корисниците\n    const mainDataResponse = await fetch('https://raw.githubusercontent.com/elistoj/Projet-12-OC/main/data/data.js');\n    if (!mainDataResponse.ok) {\n      throw new Error(`Failed to fetch main data: ${mainDataResponse.status}`);\n    }\n    const mainData = await mainDataResponse.json();\n\n    // Земање на активности на корисниците\n    const activityDataResponse = await fetch('https://raw.githubusercontent.com/elistoj/Projet-12-OC/main/data/data.js');\n    if (!activityDataResponse.ok) {\n      throw new Error(`Failed to fetch activity data: ${activityDataResponse.status}`);\n    }\n    const activityData = await activityDataResponse.json();\n\n    // Земање на просечни сесии на корисниците\n    const averageSessionsResponse = await fetch('https://raw.githubusercontent.com/elistoj/Projet-12-OC/main/data/data.js');\n    if (!averageSessionsResponse.ok) {\n      throw new Error(`Failed to fetch average sessions data: ${averageSessionsResponse.status}`);\n    }\n    const averageSessionsData = await averageSessionsResponse.json();\n\n    // Земање на перформанси на корисниците\n    const performanceDataResponse = await fetch('https://raw.githubusercontent.com/elistoj/Projet-12-OC/main/data/data.js');\n    if (!performanceDataResponse.ok) {\n      throw new Error(`Failed to fetch performance data: ${performanceDataResponse.status}`);\n    }\n    const performanceData = await performanceDataResponse.json();\n    return {\n      mainData,\n      activityData,\n      averageSessionsData,\n      performanceData\n    };\n  } catch (error) {\n    throw new Error(`Error fetching data from GitHub: ${error.message}`);\n  }\n};\nfetchUserDataFromGitHub().then(data => {\n  console.log('Fetched Data:', data);\n  // Овде може да ги користите податоците како што ви требаат\n}).catch(error => {\n  console.error('Error fetching data from GitHub:', error.message);\n});","map":{"version":3,"names":["fetchUserDataFromGitHub","mainDataResponse","fetch","ok","Error","status","mainData","json","activityDataResponse","activityData","averageSessionsResponse","averageSessionsData","performanceDataResponse","performanceData","error","message","then","data","console","log","catch"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/service/api.js"],"sourcesContent":["const fetchUserDataFromGitHub = async () => {\r\n  try {\r\n      // Земање на основни податоци за корисниците\r\n      const mainDataResponse = await fetch('https://raw.githubusercontent.com/elistoj/Projet-12-OC/main/data/data.js');\r\n      if (!mainDataResponse.ok) {\r\n          throw new Error(`Failed to fetch main data: ${mainDataResponse.status}`);\r\n      }\r\n      const mainData = await mainDataResponse.json();\r\n\r\n      // Земање на активности на корисниците\r\n      const activityDataResponse = await fetch('https://raw.githubusercontent.com/elistoj/Projet-12-OC/main/data/data.js');\r\n      if (!activityDataResponse.ok) {\r\n          throw new Error(`Failed to fetch activity data: ${activityDataResponse.status}`);\r\n      }\r\n      const activityData = await activityDataResponse.json();\r\n\r\n      // Земање на просечни сесии на корисниците\r\n      const averageSessionsResponse = await fetch('https://raw.githubusercontent.com/elistoj/Projet-12-OC/main/data/data.js');\r\n      if (!averageSessionsResponse.ok) {\r\n          throw new Error(`Failed to fetch average sessions data: ${averageSessionsResponse.status}`);\r\n      }\r\n      const averageSessionsData = await averageSessionsResponse.json();\r\n\r\n      // Земање на перформанси на корисниците\r\n      const performanceDataResponse = await fetch('https://raw.githubusercontent.com/elistoj/Projet-12-OC/main/data/data.js');\r\n      if (!performanceDataResponse.ok) {\r\n          throw new Error(`Failed to fetch performance data: ${performanceDataResponse.status}`);\r\n      }\r\n      const performanceData = await performanceDataResponse.json();\r\n\r\n      return {\r\n          mainData,\r\n          activityData,\r\n          averageSessionsData,\r\n          performanceData\r\n      };\r\n  } catch (error) {\r\n      throw new Error(`Error fetching data from GitHub: ${error.message}`);\r\n  }\r\n};\r\n\r\nfetchUserDataFromGitHub()\r\n  .then(data => {\r\n      console.log('Fetched Data:', data);\r\n      // Овде може да ги користите податоците како што ви требаат\r\n  })\r\n  .catch(error => {\r\n      console.error('Error fetching data from GitHub:', error.message);\r\n  });\r\n"],"mappings":"AAAA,MAAMA,uBAAuB,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IACA;IACA,MAAMC,gBAAgB,GAAG,MAAMC,KAAK,CAAC,0EAA0E,CAAC;IAChH,IAAI,CAACD,gBAAgB,CAACE,EAAE,EAAE;MACtB,MAAM,IAAIC,KAAK,CAAC,8BAA8BH,gBAAgB,CAACI,MAAM,EAAE,CAAC;IAC5E;IACA,MAAMC,QAAQ,GAAG,MAAML,gBAAgB,CAACM,IAAI,CAAC,CAAC;;IAE9C;IACA,MAAMC,oBAAoB,GAAG,MAAMN,KAAK,CAAC,0EAA0E,CAAC;IACpH,IAAI,CAACM,oBAAoB,CAACL,EAAE,EAAE;MAC1B,MAAM,IAAIC,KAAK,CAAC,kCAAkCI,oBAAoB,CAACH,MAAM,EAAE,CAAC;IACpF;IACA,MAAMI,YAAY,GAAG,MAAMD,oBAAoB,CAACD,IAAI,CAAC,CAAC;;IAEtD;IACA,MAAMG,uBAAuB,GAAG,MAAMR,KAAK,CAAC,0EAA0E,CAAC;IACvH,IAAI,CAACQ,uBAAuB,CAACP,EAAE,EAAE;MAC7B,MAAM,IAAIC,KAAK,CAAC,0CAA0CM,uBAAuB,CAACL,MAAM,EAAE,CAAC;IAC/F;IACA,MAAMM,mBAAmB,GAAG,MAAMD,uBAAuB,CAACH,IAAI,CAAC,CAAC;;IAEhE;IACA,MAAMK,uBAAuB,GAAG,MAAMV,KAAK,CAAC,0EAA0E,CAAC;IACvH,IAAI,CAACU,uBAAuB,CAACT,EAAE,EAAE;MAC7B,MAAM,IAAIC,KAAK,CAAC,qCAAqCQ,uBAAuB,CAACP,MAAM,EAAE,CAAC;IAC1F;IACA,MAAMQ,eAAe,GAAG,MAAMD,uBAAuB,CAACL,IAAI,CAAC,CAAC;IAE5D,OAAO;MACHD,QAAQ;MACRG,YAAY;MACZE,mBAAmB;MACnBE;IACJ,CAAC;EACL,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIV,KAAK,CAAC,oCAAoCU,KAAK,CAACC,OAAO,EAAE,CAAC;EACxE;AACF,CAAC;AAEDf,uBAAuB,CAAC,CAAC,CACtBgB,IAAI,CAACC,IAAI,IAAI;EACVC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAAC;EAClC;AACJ,CAAC,CAAC,CACDG,KAAK,CAACN,KAAK,IAAI;EACZI,OAAO,CAACJ,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAACC,OAAO,CAAC;AACpE,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}