{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elist\\\\OneDrive\\\\Documents\\\\GitHub\\\\Projet-12-OC\\\\src\\\\components\\\\charts\\\\PerformanceChart\\\\RadarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst kindMapping = {\n  \"1\": \"cardio\",\n  \"2\": \"energy\",\n  \"3\": \"endurance\",\n  \"4\": \"strength\",\n  \"5\": \"speed\",\n  \"6\": \"intensity\"\n};\nconst RadarChart = ({\n  data,\n  title\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  const chartInstanceRef = useRef(null);\n  useEffect(() => {\n    const ctx = chartRef.current.getContext('2d');\n\n    // Destroy existing chart instance if it exists\n    if (chartInstanceRef.current) {\n      chartInstanceRef.current.destroy();\n    }\n\n    // Sort data to ensure labels are in the desired order\n    const sortedData = data.sort((a, b) => b.kind - a.kind);\n\n    // Create new chart instance\n    chartInstanceRef.current = new Chart(ctx, {\n      type: 'radar',\n      data: {\n        labels: sortedData.map(d => kindMapping[d.kind]),\n        datasets: [{\n          data: sortedData.map(d => d.value),\n          backgroundColor: 'rgba(255, 1, 1, 0.7)',\n          borderColor: 'rgba(255, 1, 1, 0.7)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        plugins: {\n          legend: {\n            display: false\n          }\n        },\n        scales: {\n          r: {\n            grid: {\n              color: 'white'\n            },\n            pointLabels: {\n              color: 'white'\n            },\n            ticks: {\n              display: false,\n              maxTicksLimit: 5\n            }\n          }\n        },\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    });\n    return () => {\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n      }\n    };\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container-radar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"square-container\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef,\n        style: {\n          backgroundColor: 'black',\n          width: '100%',\n          height: '263'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(RadarChart, \"0kidk2EAizBYKgfY+KQx4ULbe78=\");\n_c = RadarChart;\nexport default RadarChart;\nvar _c;\n$RefreshReg$(_c, \"RadarChart\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","kindMapping","RadarChart","data","title","_s","chartRef","chartInstanceRef","ctx","current","getContext","destroy","sortedData","sort","a","b","kind","type","labels","map","d","datasets","value","backgroundColor","borderColor","borderWidth","options","plugins","legend","display","scales","r","grid","color","pointLabels","ticks","maxTicksLimit","responsive","maintainAspectRatio","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","width","height","_c","$RefreshReg$"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/components/charts/PerformanceChart/RadarChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport Chart from 'chart.js/auto';\r\n\r\nconst kindMapping = {\r\n  \"1\": \"cardio\",\r\n  \"2\": \"energy\",\r\n  \"3\": \"endurance\",\r\n  \"4\": \"strength\",\r\n  \"5\": \"speed\",\r\n  \"6\": \"intensity\"\r\n};\r\n\r\nconst RadarChart = ({ data, title }) => {\r\n  const chartRef = useRef(null);\r\n  const chartInstanceRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const ctx = chartRef.current.getContext('2d');\r\n    \r\n    // Destroy existing chart instance if it exists\r\n    if (chartInstanceRef.current) {\r\n      chartInstanceRef.current.destroy();\r\n    }\r\n\r\n    // Sort data to ensure labels are in the desired order\r\n    const sortedData = data.sort((a, b) => b.kind - a.kind);\r\n\r\n    // Create new chart instance\r\n    chartInstanceRef.current = new Chart(ctx, {\r\n      type: 'radar',\r\n      data: {\r\n        labels: sortedData.map(d => kindMapping[d.kind]),\r\n        datasets: [{\r\n          data: sortedData.map(d => d.value),\r\n          backgroundColor: 'rgba(255, 1, 1, 0.7)',\r\n          borderColor: 'rgba(255, 1, 1, 0.7)',\r\n          borderWidth: 1\r\n        }]\r\n      },\r\n      options: {\r\n        plugins: {\r\n          legend: {\r\n            display: false\r\n          }\r\n        },\r\n        scales: {\r\n          r: {\r\n            grid: {\r\n              color: 'white'\r\n            },\r\n            pointLabels: {\r\n              color: 'white'\r\n            },\r\n            ticks: {\r\n              display: false,\r\n              maxTicksLimit: 5\r\n            }\r\n          }\r\n        },\r\n        responsive: true,\r\n        maintainAspectRatio: false\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      if (chartInstanceRef.current) {\r\n        chartInstanceRef.current.destroy();\r\n      }\r\n    };\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"chart-container-radar\">\r\n      <div className=\"chart-title\">{title}</div>\r\n      <div className=\"square-container\">\r\n        <canvas ref={chartRef} style={{ backgroundColor: 'black', width: '100%', height: '263' }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RadarChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,WAAW,GAAG;EAClB,GAAG,EAAE,QAAQ;EACb,GAAG,EAAE,QAAQ;EACb,GAAG,EAAE,WAAW;EAChB,GAAG,EAAE,UAAU;EACf,GAAG,EAAE,OAAO;EACZ,GAAG,EAAE;AACP,CAAC;AAED,MAAMC,UAAU,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAMC,QAAQ,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMU,gBAAgB,GAAGV,MAAM,CAAC,IAAI,CAAC;EAErCD,SAAS,CAAC,MAAM;IACd,MAAMY,GAAG,GAAGF,QAAQ,CAACG,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;;IAE7C;IACA,IAAIH,gBAAgB,CAACE,OAAO,EAAE;MAC5BF,gBAAgB,CAACE,OAAO,CAACE,OAAO,CAAC,CAAC;IACpC;;IAEA;IACA,MAAMC,UAAU,GAAGT,IAAI,CAACU,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,IAAI,GAAGF,CAAC,CAACE,IAAI,CAAC;;IAEvD;IACAT,gBAAgB,CAACE,OAAO,GAAG,IAAIX,KAAK,CAACU,GAAG,EAAE;MACxCS,IAAI,EAAE,OAAO;MACbd,IAAI,EAAE;QACJe,MAAM,EAAEN,UAAU,CAACO,GAAG,CAACC,CAAC,IAAInB,WAAW,CAACmB,CAAC,CAACJ,IAAI,CAAC,CAAC;QAChDK,QAAQ,EAAE,CAAC;UACTlB,IAAI,EAAES,UAAU,CAACO,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACE,KAAK,CAAC;UAClCC,eAAe,EAAE,sBAAsB;UACvCC,WAAW,EAAE,sBAAsB;UACnCC,WAAW,EAAE;QACf,CAAC;MACH,CAAC;MACDC,OAAO,EAAE;QACPC,OAAO,EAAE;UACPC,MAAM,EAAE;YACNC,OAAO,EAAE;UACX;QACF,CAAC;QACDC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,IAAI,EAAE;cACJC,KAAK,EAAE;YACT,CAAC;YACDC,WAAW,EAAE;cACXD,KAAK,EAAE;YACT,CAAC;YACDE,KAAK,EAAE;cACLN,OAAO,EAAE,KAAK;cACdO,aAAa,EAAE;YACjB;UACF;QACF,CAAC;QACDC,UAAU,EAAE,IAAI;QAChBC,mBAAmB,EAAE;MACvB;IACF,CAAC,CAAC;IAEF,OAAO,MAAM;MACX,IAAI/B,gBAAgB,CAACE,OAAO,EAAE;QAC5BF,gBAAgB,CAACE,OAAO,CAACE,OAAO,CAAC,CAAC;MACpC;IACF,CAAC;EACH,CAAC,EAAE,CAACR,IAAI,CAAC,CAAC;EAEV,oBACEH,OAAA;IAAKuC,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCxC,OAAA;MAAKuC,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAEpC;IAAK;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC1C5C,OAAA;MAAKuC,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/BxC,OAAA;QAAQ6C,GAAG,EAAEvC,QAAS;QAACwC,KAAK,EAAE;UAAEvB,eAAe,EAAE,OAAO;UAAEwB,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAM;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvC,EAAA,CAnEIH,UAAU;AAAA+C,EAAA,GAAV/C,UAAU;AAqEhB,eAAeA,UAAU;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}