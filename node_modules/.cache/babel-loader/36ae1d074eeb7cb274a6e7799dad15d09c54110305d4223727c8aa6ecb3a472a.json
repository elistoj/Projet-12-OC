{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elist\\\\OneDrive\\\\Documents\\\\GitHub\\\\Projet-12-OC\\\\src\\\\components\\\\Profile\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Profile.css';\nimport ActivityChart from '../charts/ActivityChart/ActivityChart';\nimport AverageSessionsChart from '../charts/AverageSessionsChart/AverageSessionsChart';\nimport NutritionalInfo from '../charts/NutritionalInfo/NutritionalInfo';\nimport RadarChart from '../charts/PerformanceChart/RadarChart';\nimport ScoreChart from '../charts/ScoreChart/ScoreChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = ({\n  userId\n}) => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [userActivity, setUserActivity] = useState(null);\n  const [userAverageSessions, setUserAverageSessions] = useState(null);\n  const [userPerformance, setUserPerformance] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchUserDataFromApi = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Fetch data from API\n        const response = await fetch(`api/users/${userId}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch user data');\n        }\n        const userDataFromApi = await response.json();\n\n        // Set user data from API response\n        setUserData({\n          userInfos: {\n            firstName: userDataFromApi.userInfos.firstName\n          },\n          keyData: {\n            calorieCount: userDataFromApi.keyData.calorieCount,\n            proteinCount: userDataFromApi.keyData.proteinCount,\n            carbohydrateCount: userDataFromApi.keyData.carbohydrateCount,\n            lipidCount: userDataFromApi.keyData.lipidCount\n          },\n          score: userDataFromApi.score\n        });\n\n        // Set user activity, average sessions, and performance from API or fallback to mock data\n        setUserActivity(userDataFromApi.activity);\n        setUserAverageSessions(userDataFromApi.averageSessions);\n        setUserPerformance(userDataFromApi.performance);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching user data from API:', error);\n        setError(error.message);\n        setLoading(false);\n\n        // If API fails, fallback to mock data\n        fetchUserDataFromMock();\n      }\n    };\n    const fetchUserDataFromMock = () => {\n      try {\n        setLoading(true);\n\n        // Simulate data fetch delay\n        setTimeout(() => {\n          const mockData = {\n            userInfos: {\n              firstName: 'Cecilia'\n            },\n            keyData: {\n              calorieCount: 2500,\n              proteinCount: 90,\n              carbohydrateCount: 150,\n              lipidCount: 120\n            },\n            score: 85,\n            activity: mockData.USER_ACTIVITY.find(activity => activity.userId === parseInt(userId)).sessions,\n            averageSessions: mockData.USER_AVERAGE_SESSIONS.find(session => session.userId === parseInt(userId)).sessions,\n            performance: mockData.USER_PERFORMANCE.find(performance => performance.userId === parseInt(userId)).data\n          };\n          setUserData(mockData);\n          setUserActivity(mockData.activity);\n          setUserAverageSessions(mockData.averageSessions);\n          setUserPerformance(mockData.performance);\n          setLoading(false);\n        }, 1000); // Simulate 1 second delay\n      } catch (error) {\n        console.error('Error fetching mock user data:', error);\n        setError('Failed to fetch user data');\n        setLoading(false);\n      }\n    };\n    fetchUserDataFromApi();\n  }, [userId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render profile UI with fetched data\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-header-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Bonjour \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"user-name\",\n            children: userData.userInfos.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"F\\xE9licitation ! Vous avez explos\\xE9 vos objectifs hier \\uD83D\\uDC4F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-activity\",\n        children: /*#__PURE__*/_jsxDEV(ActivityChart, {\n          data: userActivity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trois-sections\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: /*#__PURE__*/_jsxDEV(AverageSessionsChart, {\n            data: userAverageSessions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: /*#__PURE__*/_jsxDEV(RadarChart, {\n            data: userPerformance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: /*#__PURE__*/_jsxDEV(ScoreChart, {\n            data: {\n              score: userData.score\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sections\",\n      children: /*#__PURE__*/_jsxDEV(NutritionalInfo, {\n        calorieCount: userData.keyData.calorieCount,\n        proteinCount: userData.keyData.proteinCount,\n        carbohydrateCount: userData.keyData.carbohydrateCount,\n        lipidCount: userData.keyData.lipidCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"+e67hiUdP8C0tpVz7YTgWEf1yx4=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","ActivityChart","AverageSessionsChart","NutritionalInfo","RadarChart","ScoreChart","jsxDEV","_jsxDEV","Profile","userId","_s","userData","setUserData","userActivity","setUserActivity","userAverageSessions","setUserAverageSessions","userPerformance","setUserPerformance","loading","setLoading","error","setError","fetchUserDataFromApi","response","fetch","ok","Error","userDataFromApi","json","userInfos","firstName","keyData","calorieCount","proteinCount","carbohydrateCount","lipidCount","score","activity","averageSessions","performance","console","message","fetchUserDataFromMock","setTimeout","mockData","USER_ACTIVITY","find","parseInt","sessions","USER_AVERAGE_SESSIONS","session","USER_PERFORMANCE","data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/components/Profile/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Profile.css';\r\nimport ActivityChart from '../charts/ActivityChart/ActivityChart';\r\nimport AverageSessionsChart from '../charts/AverageSessionsChart/AverageSessionsChart';\r\nimport NutritionalInfo from '../charts/NutritionalInfo/NutritionalInfo';\r\nimport RadarChart from '../charts/PerformanceChart/RadarChart';\r\nimport ScoreChart from '../charts/ScoreChart/ScoreChart';\r\n\r\nconst Profile = ({ userId }) => {\r\n  const [userData, setUserData] = useState(null);\r\n  const [userActivity, setUserActivity] = useState(null);\r\n  const [userAverageSessions, setUserAverageSessions] = useState(null);\r\n  const [userPerformance, setUserPerformance] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUserDataFromApi = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        // Fetch data from API\r\n        const response = await fetch(`api/users/${userId}`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch user data');\r\n        }\r\n\r\n        const userDataFromApi = await response.json();\r\n\r\n        // Set user data from API response\r\n        setUserData({\r\n          userInfos: {\r\n            firstName: userDataFromApi.userInfos.firstName,\r\n          },\r\n          keyData: {\r\n            calorieCount: userDataFromApi.keyData.calorieCount,\r\n            proteinCount: userDataFromApi.keyData.proteinCount,\r\n            carbohydrateCount: userDataFromApi.keyData.carbohydrateCount,\r\n            lipidCount: userDataFromApi.keyData.lipidCount,\r\n          },\r\n          score: userDataFromApi.score,\r\n        });\r\n\r\n        // Set user activity, average sessions, and performance from API or fallback to mock data\r\n        setUserActivity(userDataFromApi.activity);\r\n        setUserAverageSessions(userDataFromApi.averageSessions);\r\n        setUserPerformance(userDataFromApi.performance);\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching user data from API:', error);\r\n        setError(error.message);\r\n        setLoading(false);\r\n\r\n        // If API fails, fallback to mock data\r\n        fetchUserDataFromMock();\r\n      }\r\n    };\r\n\r\n    const fetchUserDataFromMock = () => {\r\n      try {\r\n        setLoading(true);\r\n\r\n        // Simulate data fetch delay\r\n        setTimeout(() => {\r\n          const mockData = {\r\n            userInfos: {\r\n              firstName: 'Cecilia',\r\n            },\r\n            keyData: {\r\n              calorieCount: 2500,\r\n              proteinCount: 90,\r\n              carbohydrateCount: 150,\r\n              lipidCount: 120,\r\n            },\r\n            score: 85,\r\n            activity: mockData.USER_ACTIVITY.find(activity => activity.userId === parseInt(userId)).sessions,\r\n            averageSessions: mockData.USER_AVERAGE_SESSIONS.find(session => session.userId === parseInt(userId)).sessions,\r\n            performance: mockData.USER_PERFORMANCE.find(performance => performance.userId === parseInt(userId)).data,\r\n          };\r\n\r\n          setUserData(mockData);\r\n          setUserActivity(mockData.activity);\r\n          setUserAverageSessions(mockData.averageSessions);\r\n          setUserPerformance(mockData.performance);\r\n\r\n          setLoading(false);\r\n        }, 1000); // Simulate 1 second delay\r\n      } catch (error) {\r\n        console.error('Error fetching mock user data:', error);\r\n        setError('Failed to fetch user data');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUserDataFromApi();\r\n  }, [userId]);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  // Render profile UI with fetched data\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <div className=\"profile-header-section\">\r\n        <div className=\"profile-header\">\r\n          <h1>Bonjour <span className=\"user-name\">{userData.userInfos.firstName}</span></h1>\r\n          <p>Félicitation ! Vous avez explosé vos objectifs hier 👏</p>\r\n        </div>\r\n        <div className=\"section-activity\">\r\n          <ActivityChart data={userActivity} />\r\n        </div>\r\n        <div className=\"trois-sections\">\r\n          <div className=\"section\">\r\n            <AverageSessionsChart data={userAverageSessions} />\r\n          </div>\r\n          <div className=\"section\">\r\n            <RadarChart data={userPerformance} />\r\n          </div>\r\n          <div className=\"section\">\r\n            <ScoreChart data={{ score: userData.score }} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"sections\">\r\n        <NutritionalInfo\r\n          calorieCount={userData.keyData.calorieCount}\r\n          proteinCount={userData.keyData.proteinCount}\r\n          carbohydrateCount={userData.keyData.carbohydrateCount}\r\n          lipidCount={userData.keyData.lipidCount}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}