{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elist\\\\OneDrive\\\\Documents\\\\GitHub\\\\Projet-12-OC\\\\src\\\\components\\\\Profile\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport SessionChart from '../SessionChart/SessionChart';\nimport CaloriesChart from '../CaloriesChart/CaloriesChart';\nimport AverageSessionsChart from '../AverageSessionsChart/AverageSessionsChart';\nimport PerformanceChart from '../PerformanceChart/PerformanceChart';\nimport KeyInfoCards from '../KeyInfoCards/KeyInfoCards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = ({\n  userId\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [activity, setActivity] = useState(null);\n  const [averageSessions, setAverageSessions] = useState([]);\n  const [performance, setPerformance] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const userDataResponse = await axios.get(`http://localhost:3000/user/${userId}`);\n        setUser(userDataResponse.data); // Ovde se očekuje da API vraća strukturu koja odgovara vašim potrebama\n\n        const userActivityResponse = await axios.get(`http://localhost:3000/activity/${userId}`);\n        setActivity(userActivityResponse.data); // Ovde se očekuje da API vraća strukturu koja odgovara vašim potrebama\n\n        const userAverageSessionsResponse = await axios.get(`http://localhost:3000/average-sessions/${userId}`);\n        setAverageSessions(userAverageSessionsResponse.data); // Ovde se očekuje da API vraća strukturu koja odgovara vašim potrebama\n\n        const userPerformanceResponse = await axios.get(`http://localhost:3000/performance/${userId}`);\n        setPerformance(userPerformanceResponse.data); // Ovde se očekuje da API vraća strukturu koja odgovara vašim potrebama\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        // Handle error state or show error message to user\n      }\n    };\n    fetchData();\n  }, [userId]);\n\n  // Render loading state if data is not yet fetched\n  if (!user || !activity || !averageSessions.length || !performance.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome, \", user.userInfos.firstName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SessionChart, {\n      data: activity.sessions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CaloriesChart, {\n      data: activity.calories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KeyInfoCards, {\n      data: activity.keyData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AverageSessionsChart, {\n      data: averageSessions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PerformanceChart, {\n      data: performance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"jyLRLR5FmNgdDE8HYTuDLhc04Y4=\");\n_c = Profile;\nProfile.propTypes = {\n  userId: PropTypes.number.isRequired\n};\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","PropTypes","axios","SessionChart","CaloriesChart","AverageSessionsChart","PerformanceChart","KeyInfoCards","jsxDEV","_jsxDEV","Profile","userId","_s","user","setUser","activity","setActivity","averageSessions","setAverageSessions","performance","setPerformance","fetchData","userDataResponse","get","data","userActivityResponse","userAverageSessionsResponse","userPerformanceResponse","error","console","length","children","fileName","_jsxFileName","lineNumber","columnNumber","userInfos","firstName","sessions","calories","keyData","_c","propTypes","number","isRequired","$RefreshReg$"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/components/Profile/Profile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport SessionChart from '../SessionChart/SessionChart';\r\nimport CaloriesChart from '../CaloriesChart/CaloriesChart';\r\nimport AverageSessionsChart from '../AverageSessionsChart/AverageSessionsChart';\r\nimport PerformanceChart from '../PerformanceChart/PerformanceChart';\r\nimport KeyInfoCards from '../KeyInfoCards/KeyInfoCards';\r\n\r\nconst Profile = ({ userId }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [activity, setActivity] = useState(null);\r\n  const [averageSessions, setAverageSessions] = useState([]);\r\n  const [performance, setPerformance] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const userDataResponse = await axios.get(`http://localhost:3000/user/${userId}`);\r\n        setUser(userDataResponse.data); // Ovde se očekuje da API vraća strukturu koja odgovara vašim potrebama\r\n\r\n        const userActivityResponse = await axios.get(`http://localhost:3000/activity/${userId}`);\r\n        setActivity(userActivityResponse.data); // Ovde se očekuje da API vraća strukturu koja odgovara vašim potrebama\r\n\r\n        const userAverageSessionsResponse = await axios.get(`http://localhost:3000/average-sessions/${userId}`);\r\n        setAverageSessions(userAverageSessionsResponse.data); // Ovde se očekuje da API vraća strukturu koja odgovara vašim potrebama\r\n\r\n        const userPerformanceResponse = await axios.get(`http://localhost:3000/performance/${userId}`);\r\n        setPerformance(userPerformanceResponse.data); // Ovde se očekuje da API vraća strukturu koja odgovara vašim potrebama\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        // Handle error state or show error message to user\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [userId]);\r\n\r\n  // Render loading state if data is not yet fetched\r\n  if (!user || !activity || !averageSessions.length || !performance.length) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>User Profile</h1>\r\n      <h2>Welcome, {user.userInfos.firstName}</h2>\r\n      <SessionChart data={activity.sessions} />\r\n      <CaloriesChart data={activity.calories} />\r\n      <KeyInfoCards data={activity.keyData} />\r\n      <AverageSessionsChart data={averageSessions} />\r\n      <PerformanceChart data={performance} />\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  userId: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}