{"ast":null,"code":"const BASE_URL = 'https://projet-12-oc.vercel.app';\nexport const fetchUserData = async userId => {\n  try {\n    const response = await fetch(`${BASE_URL}/api/user/${userId}/data`);\n    if (!response.ok) {\n      throw new Error('Indisponibilité des données utilisateur');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Erreur lors de la récupération des données utilisateur\", error);\n    throw error;\n  }\n};\nexport const fetchUserActivity = async userId => {\n  try {\n    const response = await fetch(`${BASE_URL}/api/user/${userId}/activity`);\n    if (!response.ok) {\n      throw new Error('Indisponibilité des données d\\'activité utilisateur');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Erreur lors de la récupération des données d'activité utilisateur\", error);\n    throw error;\n  }\n};\nexport const fetchUserAverageSessions = async userId => {\n  try {\n    const response = await fetch(`${BASE_URL}/api/user/${userId}/average-sessions`);\n    if (!response.ok) {\n      throw new Error('Indisponibilité des sessions moyennes utilisateur');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Erreur lors de la récupération des sessions moyennes utilisateur\", error);\n    throw error;\n  }\n};\nexport const fetchUserPerformance = async userId => {\n  try {\n    const response = await fetch(`${BASE_URL}/api/user/${userId}/performance`);\n    if (!response.ok) {\n      throw new Error('Indisponibilité des données de performance utilisateur');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Erreur lors de la récupération des données de performance utilisateur\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["BASE_URL","fetchUserData","userId","response","fetch","ok","Error","data","json","error","console","fetchUserActivity","fetchUserAverageSessions","fetchUserPerformance"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/service/api.js"],"sourcesContent":["const BASE_URL = 'https://projet-12-oc.vercel.app';\r\n\r\nexport const fetchUserData = async (userId) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/api/user/${userId}/data`);  \r\n    if (!response.ok) {\r\n      throw new Error('Indisponibilité des données utilisateur');\r\n    }\r\n    const data = await response.json();\r\n    return data;  \r\n  } catch (error) {\r\n    console.error(\"Erreur lors de la récupération des données utilisateur\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchUserActivity = async (userId) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/api/user/${userId}/activity`); \r\n    if (!response.ok) {\r\n      throw new Error('Indisponibilité des données d\\'activité utilisateur');\r\n    }\r\n    const data = await response.json();\r\n    return data;  \r\n  } catch (error) {\r\n    console.error(\"Erreur lors de la récupération des données d'activité utilisateur\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchUserAverageSessions = async (userId) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/api/user/${userId}/average-sessions`); \r\n    if (!response.ok) {\r\n      throw new Error('Indisponibilité des sessions moyennes utilisateur');\r\n    }\r\n    const data = await response.json();\r\n    return data; \r\n  } catch (error) {\r\n    console.error(\"Erreur lors de la récupération des sessions moyennes utilisateur\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchUserPerformance = async (userId) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/api/user/${userId}/performance`); \r\n    if (!response.ok) {\r\n      throw new Error('Indisponibilité des données de performance utilisateur');\r\n    }\r\n    const data = await response.json();\r\n    return data; \r\n  } catch (error) {\r\n    console.error(\"Erreur lors de la récupération des données de performance utilisateur\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,iCAAiC;AAElD,OAAO,MAAMC,aAAa,GAAG,MAAOC,MAAM,IAAK;EAC7C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,aAAaE,MAAM,OAAO,CAAC;IACnE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,yCAAyC,CAAC;IAC5D;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wDAAwD,EAAEA,KAAK,CAAC;IAC9E,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,iBAAiB,GAAG,MAAOT,MAAM,IAAK;EACjD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,aAAaE,MAAM,WAAW,CAAC;IACvE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,qDAAqD,CAAC;IACxE;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mEAAmE,EAAEA,KAAK,CAAC;IACzF,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMG,wBAAwB,GAAG,MAAOV,MAAM,IAAK;EACxD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,aAAaE,MAAM,mBAAmB,CAAC;IAC/E,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,mDAAmD,CAAC;IACtE;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kEAAkE,EAAEA,KAAK,CAAC;IACxF,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMI,oBAAoB,GAAG,MAAOX,MAAM,IAAK;EACpD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,aAAaE,MAAM,cAAc,CAAC;IAC1E,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,wDAAwD,CAAC;IAC3E;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uEAAuE,EAAEA,KAAK,CAAC;IAC7F,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}