{"ast":null,"code":"// api.js\n\nexport async function fetchUserData(userId) {\n  const response = await fetch(`/api/user/${userId}`);\n  return handleResponse(response);\n}\nexport async function fetchUserActivity(userId) {\n  const response = await fetch(`/api/user/${userId}/activity`);\n  return handleResponse(response);\n}\nexport async function fetchUserAverageSessions(userId) {\n  const response = await fetch(`/api/user/${userId}/average-sessions`);\n  return handleResponse(response);\n}\nexport async function fetchUserPerformance(userId) {\n  const response = await fetch(`/api/user/${userId}/performance`);\n  return handleResponse(response);\n}\nasync function handleResponse(response) {\n  const responseText = await response.text();\n  console.log('Response text:', responseText);\n  if (!response.ok) {\n    throw new Error(`Failed to fetch data. Status: ${response.status}, Text: ${responseText}`);\n  }\n  try {\n    return JSON.parse(responseText);\n  } catch (error) {\n    throw new Error(`Failed to parse JSON. Status: ${response.status}, Text: ${responseText}`);\n  }\n}","map":{"version":3,"names":["fetchUserData","userId","response","fetch","handleResponse","fetchUserActivity","fetchUserAverageSessions","fetchUserPerformance","responseText","text","console","log","ok","Error","status","JSON","parse","error"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/service/api.js"],"sourcesContent":["// api.js\r\n\r\nexport async function fetchUserData(userId) {\r\n  const response = await fetch(`/api/user/${userId}`);\r\n  return handleResponse(response);\r\n}\r\n\r\nexport async function fetchUserActivity(userId) {\r\n  const response = await fetch(`/api/user/${userId}/activity`);\r\n  return handleResponse(response);\r\n}\r\n\r\nexport async function fetchUserAverageSessions(userId) {\r\n  const response = await fetch(`/api/user/${userId}/average-sessions`);\r\n  return handleResponse(response);\r\n}\r\n\r\nexport async function fetchUserPerformance(userId) {\r\n  const response = await fetch(`/api/user/${userId}/performance`);\r\n  return handleResponse(response);\r\n}\r\n\r\nasync function handleResponse(response) {\r\n  const responseText = await response.text();\r\n  console.log('Response text:', responseText);\r\n  \r\n  if (!response.ok) {\r\n    throw new Error(`Failed to fetch data. Status: ${response.status}, Text: ${responseText}`);\r\n  }\r\n\r\n  try {\r\n    return JSON.parse(responseText);\r\n  } catch (error) {\r\n    throw new Error(`Failed to parse JSON. Status: ${response.status}, Text: ${responseText}`);\r\n  }\r\n}\r\n"],"mappings":"AAAA;;AAEA,OAAO,eAAeA,aAAaA,CAACC,MAAM,EAAE;EAC1C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAaF,MAAM,EAAE,CAAC;EACnD,OAAOG,cAAc,CAACF,QAAQ,CAAC;AACjC;AAEA,OAAO,eAAeG,iBAAiBA,CAACJ,MAAM,EAAE;EAC9C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAaF,MAAM,WAAW,CAAC;EAC5D,OAAOG,cAAc,CAACF,QAAQ,CAAC;AACjC;AAEA,OAAO,eAAeI,wBAAwBA,CAACL,MAAM,EAAE;EACrD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAaF,MAAM,mBAAmB,CAAC;EACpE,OAAOG,cAAc,CAACF,QAAQ,CAAC;AACjC;AAEA,OAAO,eAAeK,oBAAoBA,CAACN,MAAM,EAAE;EACjD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAaF,MAAM,cAAc,CAAC;EAC/D,OAAOG,cAAc,CAACF,QAAQ,CAAC;AACjC;AAEA,eAAeE,cAAcA,CAACF,QAAQ,EAAE;EACtC,MAAMM,YAAY,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;EAC1CC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,YAAY,CAAC;EAE3C,IAAI,CAACN,QAAQ,CAACU,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,iCAAiCX,QAAQ,CAACY,MAAM,WAAWN,YAAY,EAAE,CAAC;EAC5F;EAEA,IAAI;IACF,OAAOO,IAAI,CAACC,KAAK,CAACR,YAAY,CAAC;EACjC,CAAC,CAAC,OAAOS,KAAK,EAAE;IACd,MAAM,IAAIJ,KAAK,CAAC,iCAAiCX,QAAQ,CAACY,MAAM,WAAWN,YAAY,EAAE,CAAC;EAC5F;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}