{"ast":null,"code":"// api.js\n\nconst BASE_URL = 'http://localhost:3000/user';\nasync function checkResponse(response) {\n  if (!response.ok) {\n    const errorText = await response.text();\n    throw new Error(`Network response was not ok. Status: ${response.status}. Message: ${errorText}`);\n  }\n  return response.json();\n}\nexport async function fetchUserData(userId) {\n  try {\n    const response = await fetch(`${BASE_URL}/${userId}`);\n    const userData = await checkResponse(response);\n    console.log('User Data:', userData.data);\n    return mapUserData(userData.data);\n  } catch (error) {\n    console.error('Error fetching user data:', error);\n    return null;\n  }\n}\nexport async function fetchUserActivity(userId) {\n  try {\n    const response = await fetch(`${BASE_URL}/${userId}/activity`);\n    const userActivity = await checkResponse(response);\n    console.log('User Activity:', userActivity.data);\n    return mapUserActivity(userActivity.data);\n  } catch (error) {\n    console.error('Error fetching user activity:', error);\n    return null;\n  }\n}\nexport async function fetchUserAverageSessions(userId) {\n  try {\n    const response = await fetch(`${BASE_URL}/${userId}/average-sessions`);\n    const userAverageSessions = await checkResponse(response);\n    console.log('User Average Sessions:', userAverageSessions.data);\n    return mapUserAverageSessions(userAverageSessions.data);\n  } catch (error) {\n    console.error('Error fetching user average sessions:', error);\n    return null;\n  }\n}\nexport async function fetchUserPerformance(userId) {\n  try {\n    const response = await fetch(`${BASE_URL}/${userId}/performance`);\n    const userPerformance = await checkResponse(response);\n    console.log('User Performance:', userPerformance.data);\n    return mapUserPerformance(userPerformance.data);\n  } catch (error) {\n    console.error('Error fetching user performance:', error);\n    return null;\n  }\n}\nfunction mapUserData(userData) {\n  var _userData$userInfos$f, _userData$userInfos, _userData$userInfos$l, _userData$userInfos2, _userData$keyData$cal, _userData$keyData, _userData$keyData$pro, _userData$keyData2, _userData$keyData$car, _userData$keyData3, _userData$keyData$lip, _userData$keyData4, _userData$score;\n  return {\n    id: userData.id,\n    userInfos: {\n      firstName: (_userData$userInfos$f = (_userData$userInfos = userData.userInfos) === null || _userData$userInfos === void 0 ? void 0 : _userData$userInfos.firstName) !== null && _userData$userInfos$f !== void 0 ? _userData$userInfos$f : '',\n      lastName: (_userData$userInfos$l = (_userData$userInfos2 = userData.userInfos) === null || _userData$userInfos2 === void 0 ? void 0 : _userData$userInfos2.lastName) !== null && _userData$userInfos$l !== void 0 ? _userData$userInfos$l : ''\n    },\n    keyData: {\n      calorieCount: (_userData$keyData$cal = (_userData$keyData = userData.keyData) === null || _userData$keyData === void 0 ? void 0 : _userData$keyData.calorieCount) !== null && _userData$keyData$cal !== void 0 ? _userData$keyData$cal : 0,\n      proteinCount: (_userData$keyData$pro = (_userData$keyData2 = userData.keyData) === null || _userData$keyData2 === void 0 ? void 0 : _userData$keyData2.proteinCount) !== null && _userData$keyData$pro !== void 0 ? _userData$keyData$pro : 0,\n      carbohydrateCount: (_userData$keyData$car = (_userData$keyData3 = userData.keyData) === null || _userData$keyData3 === void 0 ? void 0 : _userData$keyData3.carbohydrateCount) !== null && _userData$keyData$car !== void 0 ? _userData$keyData$car : 0,\n      lipidCount: (_userData$keyData$lip = (_userData$keyData4 = userData.keyData) === null || _userData$keyData4 === void 0 ? void 0 : _userData$keyData4.lipidCount) !== null && _userData$keyData$lip !== void 0 ? _userData$keyData$lip : 0\n    },\n    score: (_userData$score = userData.score) !== null && _userData$score !== void 0 ? _userData$score : 0\n  };\n}\nfunction mapUserActivity(userActivity) {\n  if (!userActivity || !Array.isArray(userActivity.sessions)) {\n    return {\n      userId: '',\n      sessions: []\n    };\n  }\n  return {\n    userId: userActivity.userId,\n    sessions: userActivity.sessions.map(session => {\n      var _session$day, _session$sessionLengt;\n      return {\n        day: (_session$day = session.day) !== null && _session$day !== void 0 ? _session$day : '',\n        sessionLength: (_session$sessionLengt = session.sessionLength) !== null && _session$sessionLengt !== void 0 ? _session$sessionLengt : 0\n      };\n    })\n  };\n}\nfunction mapUserAverageSessions(userAverageSessions) {\n  if (!userAverageSessions || !Array.isArray(userAverageSessions.sessions)) {\n    return {\n      userId: '',\n      sessions: []\n    };\n  }\n  return {\n    userId: userAverageSessions.userId,\n    sessions: userAverageSessions.sessions.map(session => {\n      var _session$day2, _session$sessionLengt2;\n      return {\n        day: (_session$day2 = session.day) !== null && _session$day2 !== void 0 ? _session$day2 : '',\n        averageDuration: (_session$sessionLengt2 = session.sessionLength) !== null && _session$sessionLengt2 !== void 0 ? _session$sessionLengt2 : 0\n      };\n    })\n  };\n}\nfunction mapUserPerformance(userPerformance) {\n  if (!userPerformance || !Array.isArray(userPerformance.data)) {\n    return {\n      userId: '',\n      data: []\n    };\n  }\n  return {\n    userId: userPerformance.userId,\n    data: userPerformance.data.map(item => {\n      var _item$kind, _item$value;\n      return {\n        kind: (_item$kind = item.kind) !== null && _item$kind !== void 0 ? _item$kind : '',\n        value: (_item$value = item.value) !== null && _item$value !== void 0 ? _item$value : 0\n      };\n    })\n  };\n}","map":{"version":3,"names":["BASE_URL","checkResponse","response","ok","errorText","text","Error","status","json","fetchUserData","userId","fetch","userData","console","log","data","mapUserData","error","fetchUserActivity","userActivity","mapUserActivity","fetchUserAverageSessions","userAverageSessions","mapUserAverageSessions","fetchUserPerformance","userPerformance","mapUserPerformance","_userData$userInfos$f","_userData$userInfos","_userData$userInfos$l","_userData$userInfos2","_userData$keyData$cal","_userData$keyData","_userData$keyData$pro","_userData$keyData2","_userData$keyData$car","_userData$keyData3","_userData$keyData$lip","_userData$keyData4","_userData$score","id","userInfos","firstName","lastName","keyData","calorieCount","proteinCount","carbohydrateCount","lipidCount","score","Array","isArray","sessions","map","session","_session$day","_session$sessionLengt","day","sessionLength","_session$day2","_session$sessionLengt2","averageDuration","item","_item$kind","_item$value","kind","value"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/service/api.js"],"sourcesContent":["// api.js\r\n\r\nconst BASE_URL = 'http://localhost:3000/user';\r\n\r\nasync function checkResponse(response) {\r\n  if (!response.ok) {\r\n    const errorText = await response.text();\r\n    throw new Error(`Network response was not ok. Status: ${response.status}. Message: ${errorText}`);\r\n  }\r\n  return response.json();\r\n}\r\n\r\nexport async function fetchUserData(userId) {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/${userId}`);\r\n    const userData = await checkResponse(response);\r\n    console.log('User Data:', userData.data);\r\n    return mapUserData(userData.data);\r\n  } catch (error) {\r\n    console.error('Error fetching user data:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function fetchUserActivity(userId) {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/${userId}/activity`);\r\n    const userActivity = await checkResponse(response);\r\n    console.log('User Activity:', userActivity.data);\r\n    return mapUserActivity(userActivity.data);\r\n  } catch (error) {\r\n    console.error('Error fetching user activity:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function fetchUserAverageSessions(userId) {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/${userId}/average-sessions`);\r\n    const userAverageSessions = await checkResponse(response);\r\n    console.log('User Average Sessions:', userAverageSessions.data);\r\n    return mapUserAverageSessions(userAverageSessions.data);\r\n  } catch (error) {\r\n    console.error('Error fetching user average sessions:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function fetchUserPerformance(userId) {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/${userId}/performance`);\r\n    const userPerformance = await checkResponse(response);\r\n    console.log('User Performance:', userPerformance.data);\r\n    return mapUserPerformance(userPerformance.data);\r\n  } catch (error) {\r\n    console.error('Error fetching user performance:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction mapUserData(userData) {\r\n  return {\r\n    id: userData.id,\r\n    userInfos: {\r\n      firstName: userData.userInfos?.firstName ?? '',\r\n      lastName: userData.userInfos?.lastName ?? '',\r\n    },\r\n    keyData: {\r\n      calorieCount: userData.keyData?.calorieCount ?? 0,\r\n      proteinCount: userData.keyData?.proteinCount ?? 0,\r\n      carbohydrateCount: userData.keyData?.carbohydrateCount ?? 0,\r\n      lipidCount: userData.keyData?.lipidCount ?? 0,\r\n    },\r\n    score: userData.score ?? 0,\r\n  };\r\n}\r\n\r\nfunction mapUserActivity(userActivity) {\r\n  if (!userActivity || !Array.isArray(userActivity.sessions)) {\r\n    return { userId: '', sessions: [] };\r\n  }\r\n\r\n  return {\r\n    userId: userActivity.userId,\r\n    sessions: userActivity.sessions.map(session => ({\r\n      day: session.day ?? '',\r\n      sessionLength: session.sessionLength ?? 0,\r\n    })),\r\n  };\r\n}\r\n\r\nfunction mapUserAverageSessions(userAverageSessions) {\r\n  if (!userAverageSessions || !Array.isArray(userAverageSessions.sessions)) {\r\n    return { userId: '', sessions: [] };\r\n  }\r\n\r\n  return {\r\n    userId: userAverageSessions.userId,\r\n    sessions: userAverageSessions.sessions.map(session => ({\r\n      day: session.day ?? '',\r\n      averageDuration: session.sessionLength ?? 0,\r\n    })),\r\n  };\r\n}\r\n\r\nfunction mapUserPerformance(userPerformance) {\r\n  if (!userPerformance || !Array.isArray(userPerformance.data)) {\r\n    return { userId: '', data: [] };\r\n  }\r\n\r\n  return {\r\n    userId: userPerformance.userId,\r\n    data: userPerformance.data.map(item => ({\r\n      kind: item.kind ?? '',\r\n      value: item.value ?? 0,\r\n    })),\r\n  };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}