{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elist\\\\OneDrive\\\\Documents\\\\GitHub\\\\Projet-12-OC\\\\src\\\\Page\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './ScoreChart.css';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScoreChart = ({\n  data\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  const chartInstanceRef = useRef(null);\n  const textRef = useRef(null);\n  useEffect(() => {\n    if (!data || !data.score) {\n      // Clear chart and text if no data or score available\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n      }\n      return;\n    }\n    const ctx = chartRef.current.getContext('2d');\n\n    // Destroy existing chart instance if it exists\n    if (chartInstanceRef.current) {\n      chartInstanceRef.current.destroy();\n    }\n    const remainingScore = 1 - data.score;\n    chartInstanceRef.current = new Chart(ctx, {\n      type: 'doughnut',\n      data: {\n        labels: ['Remaining', 'Achieved'],\n        datasets: [{\n          data: [remainingScore * 100, data.score * 100],\n          backgroundColor: ['rgba(255, 255, 255, 0.2)', 'rgba(255, 0, 0, 1)'],\n          borderColor: ['rgba(255, 255, 255, 0.2)', 'rgba(255, 0, 0, 1)'],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        cutout: '80%',\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            enabled: false\n          },\n          title: {\n            display: true,\n            text: 'Score',\n            font: {\n              weight: 'bold',\n              size: 16\n            },\n            position: 'top',\n            padding: 10,\n            lineHeight: 1.5,\n            align: 'start',\n            anchor: 'start',\n            offset: {\n              y: 60\n            }\n          }\n        }\n      }\n    });\n    if (textRef.current) {\n      textRef.current.innerHTML = `<span style=\"color: black; white-space: nowrap;\">${data.score * 100}%</span> <br/><span style=\"color: rgba(116, 121, 140, 1)\">de votre</span> <br/><span style=\"color: rgba(116, 121, 140, 1)\">objectif</span>`;\n    }\n    return () => {\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n      }\n    };\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef,\n      style: {\n        color: 'black',\n        backgroundColor: 'rgba(251, 251, 251, 1)'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: textRef,\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -30%)',\n        fontFamily: 'Roboto, sans-serif',\n        fontSize: '26px',\n        fontWeight: 'bold',\n        textAlign: 'center',\n        lineHeight: '1.2',\n        whiteSpace: 'nowrap'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(ScoreChart, \"3xS4SnpEdinfMsdmEO9IjQ3HnUE=\");\n_c = ScoreChart;\nexport default ScoreChart;\nvar _c;\n$RefreshReg$(_c, \"ScoreChart\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","ScoreChart","data","_s","chartRef","chartInstanceRef","textRef","score","current","destroy","ctx","getContext","remainingScore","type","labels","datasets","backgroundColor","borderColor","borderWidth","options","cutout","responsive","maintainAspectRatio","plugins","legend","display","tooltip","enabled","title","text","font","weight","size","position","padding","lineHeight","align","anchor","offset","y","innerHTML","style","children","ref","color","fileName","_jsxFileName","lineNumber","columnNumber","top","left","transform","fontFamily","fontSize","fontWeight","textAlign","whiteSpace","_c","$RefreshReg$"],"sources":["C:/Users/elist/OneDrive/Documents/GitHub/Projet-12-OC/src/Page/Profile.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport './ScoreChart.css';\r\nimport Chart from 'chart.js/auto';\r\n\r\nconst ScoreChart = ({ data }) => {\r\n  const chartRef = useRef(null);\r\n  const chartInstanceRef = useRef(null);\r\n  const textRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!data || !data.score) {\r\n      // Clear chart and text if no data or score available\r\n      if (chartInstanceRef.current) {\r\n        chartInstanceRef.current.destroy();\r\n      }\r\n      return;\r\n    }\r\n\r\n    const ctx = chartRef.current.getContext('2d');\r\n\r\n    // Destroy existing chart instance if it exists\r\n    if (chartInstanceRef.current) {\r\n      chartInstanceRef.current.destroy();\r\n    }\r\n\r\n    const remainingScore = 1 - data.score;\r\n\r\n    chartInstanceRef.current = new Chart(ctx, {\r\n      type: 'doughnut',\r\n      data: {\r\n        labels: ['Remaining', 'Achieved'],\r\n        datasets: [{\r\n          data: [remainingScore * 100, data.score * 100],\r\n          backgroundColor: ['rgba(255, 255, 255, 0.2)', 'rgba(255, 0, 0, 1)'],\r\n          borderColor: ['rgba(255, 255, 255, 0.2)', 'rgba(255, 0, 0, 1)'],\r\n          borderWidth: 1\r\n        }]\r\n      },\r\n      options: {\r\n        cutout: '80%',\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: {\r\n          legend: {\r\n            display: false\r\n          },\r\n          tooltip: {\r\n            enabled: false\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: 'Score',\r\n            font: { weight: 'bold', size: 16 },\r\n            position: 'top',\r\n            padding: 10,\r\n            lineHeight: 1.5,\r\n            align: 'start',\r\n            anchor: 'start',\r\n            offset: {\r\n              y: 60\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    if (textRef.current) {\r\n      textRef.current.innerHTML = `<span style=\"color: black; white-space: nowrap;\">${data.score * 100}%</span> <br/><span style=\"color: rgba(116, 121, 140, 1)\">de votre</span> <br/><span style=\"color: rgba(116, 121, 140, 1)\">objectif</span>`;\r\n    }\r\n\r\n    return () => {\r\n      if (chartInstanceRef.current) {\r\n        chartInstanceRef.current.destroy();\r\n      }\r\n    };\r\n  }, [data]);\r\n\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      <canvas ref={chartRef} style={{ color: 'black', backgroundColor: 'rgba(251, 251, 251, 1)'}} />\r\n      <div ref={textRef} style={{\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -30%)',\r\n        fontFamily: 'Roboto, sans-serif',\r\n        fontSize: '26px',\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n        lineHeight: '1.2',\r\n        whiteSpace: 'nowrap',\r\n      }}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScoreChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}